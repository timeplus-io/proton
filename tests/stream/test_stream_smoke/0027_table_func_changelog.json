{
    "test_suite_name": "table_func_changelog",
    "tag": "smoke",
    "test_suite_config":{
        "setup": {
            "statements": [
            ]
        },
        "tests_2_run": {"ids_2_run": ["all"], "tags_2_run":[], "tags_2_skip":{"default":["todo", "to_support", "change", "bug", "sample", "native_not_support"],"cluster": ["view", "cluster_table_bug"]}}
    },
    "comments": "Tests covering query table function changelog",
    "tests": [
        {
            "id": 0,
            "tags": ["table_func_changelog"],
            "name": "table_func_changelog_append-only",
            "description": "tail query from table function changelog(stream)",
            "steps":[
                {
                    "statements": [
                        {"client":"python", "query_type": "table", "query":"drop stream if exists test28_left_stream;"},
                        {"client":"python", "query_type": "table", "exist":"test28_left_stream", "exist_wait":2, "wait":1, "query":"create stream if not exists test28_left_stream (i int, k string);"},
                        {"client":"python", "query_type": "stream", "query_id":"2800", "wait":1, "query": "select i, k, _tp_delta from changelog(test28_left_stream, i);"},
                        {"client":"python", "query_type": "table", "depends_on":"2800", "wait":1, "query": "insert into test28_left_stream(i, k) values (1, 'k1');"},
                        {"client":"python", "query_type": "table",  "kill":"2800", "kill_wait":3, "wait":1, "query": "insert into test28_left_stream(i, k) values (1, 'k2');"}
                    ]
                }
            ],
            "expected_results": [
                {
                    "query_id":"2800",
                    "expected_results":[
                        [1, "k1", 1], 
                        [1, "k1", -1], 
                        [1, "k2", 1]
                    ]
                }
            ]
        },
        {
            "id": 1,
            "tags": ["table_func_changelog"],
            "name": "table_func_changelog_versioned_kv",
            "description": "tail query from table function changelog(versioned_kv)",
            "steps":[
                {
                    "statements": [
                        {"client":"python", "query_type": "table", "query":"drop stream if exists test28_version_kv_stream;"},
                        {"client":"python", "query_type": "table", "exist":"test28_version_kv_stream", "exist_wait":2, "wait":1, "query":"create stream if not exists test28_version_kv_stream(i int, k string) primary key k settings mode='versioned_kv';"},
                        {"client":"python", "query_type": "stream", "query_id":"2801", "wait":1, "query": "select i, k, _tp_delta from changelog(test28_version_kv_stream, true);"},
                        {"client":"python", "query_type": "table", "depends_on":"2801", "wait":1, "query": "insert into test28_version_kv_stream(i, k) values (1, 'k1');"},
                        {"client":"python", "query_type": "table",  "kill":"2801", "kill_wait":3, "wait":1, "query": "insert into test28_version_kv_stream(i, k) values (2, 'k1');"}
                    ]
                }
            ],
            "expected_results": [
                {
                    "query_id":"2801",
                    "expected_results":[
                        [1, "k1", 1], 
                        [1, "k1", -1], 
                        [2, "k1", 1]
                    ]
                }
            ]
        },
        {
            "id": 2,
            "tags": ["table_func_changelog"],
            "name": "table_func_changelog_subquery",
            "description": "tail query from table function changelog(subquery)",
            "steps":[
                {
                    "statements": [
                        {"client":"python", "query_type": "table", "query":"drop stream if exists test28_left_stream;"},
                        {"client":"python", "query_type": "table", "exist":"test28_left_stream", "exist_wait":2, "wait":1, "query":"create stream if not exists test28_left_stream (i int, k string);"},
                        {"client":"python", "query_type": "stream", "query_id":"2802", "wait":1, "query": "with cte as (select i, k from test28_left_stream) select i, k, _tp_delta from changelog(cte, k);"},
                        {"client":"python", "query_type": "table", "depends_on":"2802", "wait":1, "query": "insert into test28_left_stream(i, k) values (1, 'k1');"},
                        {"client":"python", "query_type": "table",  "kill":"2802", "kill_wait":3, "wait":1, "query": "insert into test28_left_stream(i, k) values (2, 'k1');"}
                    ]
                }
            ],
            "expected_results": [
                {
                    "query_id":"2802",
                    "expected_results":[
                        [1, "k1", 1], 
                        [1, "k1", -1], 
                        [2, "k1", 1]
                    ]
                }
            ]
        },
        {
            "id": 3,
            "tags": ["table_func_changelog", "inner-join"],
            "name": "changelog(t1)_inner_all_join_changelog(t2)",
            "description": "changelog(t1) inner all join changelog(t2)",
            "steps":[
                {
                    "statements": [
                        {"client":"python", "query_type": "table", "query":"drop stream if exists test28_left_stream;"},
                        {"client":"python", "query_type": "table", "query":"drop stream if exists test28_right_stream;"},
                        {"client":"python", "query_type": "table", "exist":"test28_left_stream", "exist_wait":2, "wait":1, "query":"create stream if not exists test28_left_stream (i int, k string);"},
                        {"client":"python", "query_type": "table", "exist":"test28_right_stream", "exist_wait":2, "wait":1, "query":"create stream if not exists test28_right_stream (j int, kk string);"},
                        {"client":"python", "query_type": "stream", "query_id":"2803", "wait":1, "query": "select i, k, j, kk, _tp_delta from changelog(test28_left_stream, k) as a inner join changelog(test28_right_stream, kk) as b on a.i == b.j;"},
                        {"client":"python", "query_type": "table", "depends_on":"2803", "wait":1, "query": "insert into test28_left_stream (i, k) values (1, 'k1');"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test28_right_stream (j, kk) values (1, 'kk1');"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test28_left_stream (i, k) values (2, 'k1');"},
                        {"client":"python", "query_type": "table",  "kill":"2803", "kill_wait":3, "wait":1, "query": "insert into test28_right_stream (j, kk) values (2, 'kk1');"}
                    ]
                }
            ],
            "expected_results": [
                {
                    "query_id":"2803",
                    "expected_results":[
                        [1, "k1", 1, "kk1", 1], 
                        [1, "k1", 1, "kk1", -1], 
                        [2, "k1", 2, "kk1", 1]
                    ]
                }
            ]
        },
        {
            "id": 4,
            "tags": ["table_func_changelog", "inner-join"],
            "name": "append-only_inner_all_join_changelog(t2)",
            "description": "append-only inner all join changelog(t2)",
            "steps":[
                {
                    "statements": [
                        {"client":"python", "query_type": "table", "query":"drop stream if exists test28_left_stream;"},
                        {"client":"python", "query_type": "table", "query":"drop stream if exists test28_right_stream;"},
                        {"client":"python", "query_type": "table", "exist":"test28_left_stream", "exist_wait":2, "wait":1, "query":"create stream if not exists test28_left_stream (i int, k string);"},
                        {"client":"python", "query_type": "table", "exist":"test28_right_stream", "exist_wait":2, "wait":1, "query":"create stream if not exists test28_right_stream (j int, kk string);"},
                        {"client":"python", "query_type": "stream", "query_id":"2804", "wait":1, "query": "select i, k, j, kk, _tp_delta from test28_left_stream as a inner join changelog(test28_right_stream, kk) as b on a.i == b.j;"},
                        {"client":"python", "query_type": "table", "depends_on":"2804", "wait":1, "query": "insert into test28_right_stream (j, kk) values (1, 'kk1');"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test28_left_stream (i, k) values (1, 'k1');"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test28_right_stream (j, kk) values (2, 'kk1');"},
                        {"client":"python", "query_type": "table",  "kill":"2804", "kill_wait":3, "wait":1, "query": "insert into test28_left_stream (i, k) values (2, 'k1');"}
                    ]
                }
            ],
            "expected_results": [
                {
                    "query_id":"2804",
                    "expected_results":[
                        [1, "k1", 1, "kk1", 1],
                        [2, "k1", 2, "kk1", 1]
                    ]
                }
            ]
        },
        {
            "id": 5,
            "tags": ["table_func_changelog", "inner-join"],
            "name": "append-only_inner_all_join_changelog(vk)",
            "description": "append-only inner all join changelog(vk)",
            "steps":[
                {
                    "statements": [
                        {"client":"python", "query_type": "table", "query":"drop stream if exists test28_left_stream;"},
                        {"client":"python", "query_type": "table", "query":"drop stream if exists test28_version_kv_stream;"},
                        {"client":"python", "query_type": "table", "exist":"test28_left_stream", "exist_wait":2, "wait":1, "query":"create stream if not exists test28_left_stream (i int, k string);"},
                        {"client":"python", "query_type": "table", "exist":"test28_right_stream", "exist_wait":2, "wait":1, "query":"create stream if not exists test28_version_kv_stream(j int, kk string) primary key kk settings mode='versioned_kv';"},
                        {"client":"python", "query_type": "stream", "query_id":"2805", "wait":1, "query": "select i, k, j, kk, _tp_delta from test28_left_stream as a inner join changelog(test28_version_kv_stream, true) as b on a.i == b.j;"},
                        {"client":"python", "query_type": "table", "depends_on":"2805", "wait":1, "query": "insert into test28_version_kv_stream (j, kk) values (1, 'kk1');"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test28_left_stream (i, k) values (1, 'k1');"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test28_version_kv_stream (j, kk) values (2, 'kk1');"},
                        {"client":"python", "query_type": "table",  "kill":"2805", "kill_wait":3, "wait":1, "query": "insert into test28_left_stream (i, k) values (2, 'k1');"}
                    ]
                }
            ],
            "expected_results": [
                {
                    "query_id":"2805",
                    "expected_results":[
                        [1, "k1", 1, "kk1", 1],
                        [2, "k1", 2, "kk1", 1]
                    ]
                }
            ]
        },
        {
            "id": 6,
            "tags": ["table_func_changelog", "inner-join"],
            "name": "append-only_inner_all_join_changelog(subquery)",
            "description": "append-only inner all join changelog(subquery)",
            "steps":[
                {
                    "statements": [
                        {"client":"python", "query_type": "table", "query":"drop stream if exists test28_left_stream;"},
                        {"client":"python", "query_type": "table", "query":"drop stream if exists test28_right_stream;"},
                        {"client":"python", "query_type": "table", "exist":"test28_left_stream", "exist_wait":2, "wait":1, "query":"create stream if not exists test28_left_stream (i int, k string);"},
                        {"client":"python", "query_type": "table", "exist":"test28_right_stream", "exist_wait":2, "wait":1, "query":"create stream if not exists test28_right_stream (j int, kk string);"},
                        {"client":"python", "query_type": "stream", "query_id":"2806", "wait":1, "query": "with cte as (select j, kk from test28_right_stream) select i, k, j, kk, _tp_delta from test28_left_stream as a inner join changelog(cte, kk) as b on a.i == b.j;"},
                        {"client":"python", "query_type": "table", "depends_on":"2806", "wait":1, "query": "insert into test28_right_stream (j, kk) values (1, 'kk1');"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test28_left_stream (i, k) values (1, 'k1');"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test28_right_stream (j, kk) values (2, 'kk1');"},
                        {"client":"python", "query_type": "table",  "kill":"2806", "kill_wait":3, "wait":1, "query": "insert into test28_left_stream (i, k) values (2, 'k1');"}
                    ]
                }
            ],
            "expected_results": [
                {
                    "query_id":"2806",
                    "expected_results":[
                        [1, "k1", 1, "kk1", 1],
                        [2, "k1", 2, "kk1", 1]
                    ]
                }
            ]
        },
        {
            "id": 7,
            "tags": ["table_func_changelog", "left-join"],
            "name": "append-only_left_all_join_changelog(t2)",
            "description": "append-only left all join changelog(t2)",
            "steps":[
                {
                    "statements": [
                        {"client":"python", "query_type": "table", "query":"drop stream if exists test28_left_stream;"},
                        {"client":"python", "query_type": "table", "query":"drop stream if exists test28_right_stream;"},
                        {"client":"python", "query_type": "table", "exist":"test28_left_stream", "exist_wait":2, "wait":1, "query":"create stream if not exists test28_left_stream (i int, k string);"},
                        {"client":"python", "query_type": "table", "exist":"test28_right_stream", "exist_wait":2, "wait":1, "query":"create stream if not exists test28_right_stream (j int, kk string);"},
                        {"client":"python", "query_type": "stream", "query_id":"2807", "wait":1, "query": "select i, k, j, kk, _tp_delta from test28_left_stream as a left join changelog(test28_right_stream, kk) as b on a.i == b.j;"},
                        {"client":"python", "query_type": "table", "depends_on":"2807", "wait":1, "query": "insert into test28_right_stream (j, kk) values (1, 'kk1');"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test28_left_stream (i, k) values (1, 'k1');"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test28_right_stream (j, kk) values (2, 'kk1');"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test28_left_stream (i, k) values (2, 'k1');"},
                        {"client":"python", "query_type": "table",  "kill":"2807", "kill_wait":3, "wait":1, "query": "insert into test28_left_stream (i, k) values (3, 'k2');"}
                    ]
                }
            ],
            "expected_results": [
                {
                    "query_id":"2807",
                    "expected_results":[
                        [1, "k1", 1, "kk1", 1],
                        [2, "k1", 2, "kk1", 1],
                        [3, "k2", 0, "", 0]
                    ]
                }
            ]
        },
        {
            "id": 8,
            "tags": ["table_func_changelog", "left-join"],
            "name": "append-only_left_all_join_changelog(vk)",
            "description": "append-only left all join changelog(vk)",
            "steps":[
                {
                    "statements": [
                        {"client":"python", "query_type": "table", "query":"drop stream if exists test28_left_stream;"},
                        {"client":"python", "query_type": "table", "query":"drop stream if exists test28_version_kv_stream;"},
                        {"client":"python", "query_type": "table", "exist":"test28_left_stream", "exist_wait":2, "wait":1, "query":"create stream if not exists test28_left_stream (i int, k string);"},
                        {"client":"python", "query_type": "table", "exist":"test28_right_stream", "exist_wait":2, "wait":1, "query":"create stream if not exists test28_version_kv_stream(j int, kk string) primary key kk settings mode='versioned_kv';"},
                        {"client":"python", "query_type": "stream", "query_id":"2808", "wait":1, "query": "select i, k, j, kk, _tp_delta from test28_left_stream as a left join changelog(test28_version_kv_stream, true) as b on a.i == b.j;"},
                        {"client":"python", "query_type": "table", "depends_on":"2808", "wait":1, "query": "insert into test28_version_kv_stream (j, kk) values (1, 'kk1');"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test28_left_stream (i, k) values (1, 'k1');"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test28_version_kv_stream (j, kk) values (2, 'kk1');"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test28_left_stream (i, k) values (2, 'k1');"},
                        {"client":"python", "query_type": "table",  "kill":"2808", "kill_wait":3, "wait":1, "query": "insert into test28_left_stream (i, k) values (3, 'k2');"}
                    ]
                }
            ],
            "expected_results": [
                {
                    "query_id":"2808",
                    "expected_results":[
                        [1, "k1", 1, "kk1", 1],
                        [2, "k1", 2, "kk1", 1],
                        [3, "k2", 0, "", 0]
                    ]
                }
            ]
        },
        {
            "id": 9,
            "tags": ["table_func_changelog", "left-join"],
            "name": "append-only_left_all_join_changelog(subquery)",
            "description": "append-only left all join changelog(subquery)",
            "steps":[
                {
                    "statements": [
                        {"client":"python", "query_type": "table", "query":"drop stream if exists test28_left_stream;"},
                        {"client":"python", "query_type": "table", "query":"drop stream if exists test28_right_stream;"},
                        {"client":"python", "query_type": "table", "exist":"test28_left_stream", "exist_wait":2, "wait":1, "query":"create stream if not exists test28_left_stream (i int, k string);"},
                        {"client":"python", "query_type": "table", "exist":"test28_right_stream", "exist_wait":2, "wait":1, "query":"create stream if not exists test28_right_stream (j int, kk string);"},
                        {"client":"python", "query_type": "stream", "query_id":"2809", "wait":1, "query": "with cte as (select j, kk from test28_right_stream) select i, k, j, kk, _tp_delta from test28_left_stream as a left join changelog(cte, kk) as b on a.i == b.j;"},
                        {"client":"python", "query_type": "table", "depends_on":"2809", "wait":1, "query": "insert into test28_right_stream (j, kk) values (1, 'kk1');"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test28_left_stream (i, k) values (1, 'k1');"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test28_right_stream (j, kk) values (2, 'kk1');"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test28_left_stream (i, k) values (2, 'k1');"},
                        {"client":"python", "query_type": "table",  "kill":"2809", "kill_wait":3, "wait":1, "query": "insert into test28_left_stream (i, k) values (3, 'k2');"}
                    ]
                }
            ],
            "expected_results": [
                {
                    "query_id":"2809",
                    "expected_results":[
                        [1, "k1", 1, "kk1", 1],
                        [2, "k1", 2, "kk1", 1],
                        [3, "k2", 0, "", 0]
                    ]
                }
            ]
        },
        {
            "id": 10,
            "tags": ["table_func_changelog"],
            "name": "table_func_changelog_view",
            "description": "tail query from table function changelog(view)",
            "steps":[
                {
                    "statements": [
                        {"client":"python", "query_type": "table", "wait":1, "query":"drop view if exists v_compute_income;"},
                        {"client":"python", "query_type": "table", "wait":1, "query":"drop stream if exists hourly_cpu_usage;"},
                        {"client":"python", "query_type": "table", "exist":"hourly_cpu_usage", "exist_wait":2, "wait":1, "query":"create stream hourly_cpu_usage (id int, max_cpu int, rate float);"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into hourly_cpu_usage (id, max_cpu, rate) values (1, 2, 0.24);"},
                        {"client":"python", "query_type": "table", "exist":"v_compute_income", "exist_wait":2, "wait":1, "query":"create view v_compute_income as SELECT id, max_cpu * rate FROM hourly_cpu_usage WHERE _tp_time > earliest_ts();"},
                        {"client":"python", "query_type": "stream", "query_id":"2810", "wait":1, "query": "SELECT * FROM changelog(v_compute_income, id);"},
                        {"client":"python", "query_type": "table", "depends_on":"2810", "wait":1, "query": "insert into hourly_cpu_usage (id, max_cpu, rate) values (2, 4, 0.48);"},
                        {"client":"python", "query_type": "table", "kill":"2810", "kill_wait":3, "drop_view":"v_compute_income", "drop_view_wait":1, "wait":1, "query": "insert into hourly_cpu_usage (id, max_cpu, rate) values (1, 6, 0.72);"}
                    ]
                }
            ],
            "expected_results": [
                {
                    "query_id":"2810",
                    "expected_results":[
                        [1, 0.48, 1], 
                        [2, 1.92, 1], 
                        [1, 0.48, -1], 
                        [1, 4.32, 1]
                    ]
                }
            ]
        },
        {
            "id": 11,
            "tags": ["table_func_changelog", "issue-3018"],
            "name": "table_func_changelog_view",
            "description": "tail query from table function changelog(view)",
            "steps":[
                {
                    "statements": [
                        {"client":"python", "query_type": "table", "wait":1, "query":"drop view if exists v_compute_income;"},
                        {"client":"python", "query_type": "table", "wait":1, "query":"drop stream if exists hourly_cpu_usage;"},
                        {"client":"python", "query_type": "table", "exist":"hourly_cpu_usage", "exist_wait":2, "wait":1, "query":"create stream hourly_cpu_usage (max_cpu int, rate float);"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into hourly_cpu_usage (max_cpu, rate) values (2, 0.24);"},
                        {"client":"python", "query_type": "table", "exist":"v_compute_income", "exist_wait":2, "wait":1, "query":"create view v_compute_income as SELECT sum(max_cpu*rate) as compute_income, 'aug' as month FROM hourly_cpu_usage WHERE _tp_time > earliest_ts();"},
                        {"client":"python", "query_type": "stream", "query_id":"2811", "wait":2, "query": "SELECT month, compute_income, _tp_delta FROM changelog(v_compute_income, month);"},
                        {"client":"python", "query_type": "table", "depends_on":"2811", "wait":2, "query": "insert into hourly_cpu_usage (max_cpu, rate) values (4, 0.48);"},
                        {"client":"python", "query_type": "table", "kill":"2811", "kill_wait":3, "drop_view":"v_compute_income", "drop_view_wait":1, "wait":2, "query": "insert into hourly_cpu_usage (max_cpu, rate) values (6, 0.72);"}
                    ]
                }
            ],
            "expected_results": [
                {
                    "query_id":"2811",
                    "expected_results":[
                        ["aug", 0.48, 1], 
                        ["aug", 0.48, -1], 
                        ["aug", 2.4, 1], 
                        ["aug", 2.4, -1], 
                        ["aug", 6.72, 1]
                    ]
                }
            ]
        },
        {
            "id": 12,
            "tags": ["table_func_changelog"],
            "name": "table_func_changelog_view",
            "description": "tail query from table function changelog(view)",
            "steps":[
                {
                    "statements": [
                        {"client":"python", "query_type": "table", "wait":1, "query":"drop stream if exists test28_view;"},
                        {"client":"python", "query_type": "table", "wait":1, "query":"drop stream if exists test28_left_stream;"},
                        {"client":"python", "query_type": "table", "exist":"test28_left_stream", "exist_wait":2, "wait":1, "query":"create stream if not exists test28_left_stream (k string, val float);"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test28_left_stream(k, val) values ('k1', 11.1) ('k2', 22.2) ('k3', 33.3);"},
                        {"client":"python", "query_type": "table", "exist":"test28_view", "exist_wait":2, "wait":1, "query":"create view test28_view as select k, count(), min(val), max(val), sum(val), avg(val) from test28_left_stream where _tp_time > earliest_ts() group by k;"},
                        {"client":"python", "query_type": "stream", "query_id":"2812", "wait":1, "query": "select * from changelog(test28_view, k);"},
                        {"client":"python", "query_type": "table", "depends_on":"2812", "wait":1, "query": "insert into test28_left_stream(k, val) values ('k1', 44.4) ('k2', 55.5);"},
                        {"client":"python", "query_type": "table", "kill":"2812", "kill_wait":3, "drop_view":"test28_view", "drop_view_wait":1, "wait":1, "query": "insert into test28_left_stream(k, val) values ('k3', 66.6);"}
                    ]
                }
            ],
            "expected_results": [
                {
                    "query_id":"2812",
                    "expected_results":[
                        ["k1", 1, 11.1, 11.1, 11.1, 11.1, 1], 
                        ["k2", 1, 22.2, 22.2, 22.2, 22.2, 1], 
                        ["k3", 1, 33.3, 33.3, 33.3, 33.3, 1],
                        ["k1", 1, 11.1, 11.1, 11.1, 11.1, -1], 
                        ["k2", 1, 22.2, 22.2, 22.2, 22.2, -1], 
                        ["k3", 1, 33.3, 33.3, 33.3, 33.3, -1],
                        ["k1", 2, 11.1, 44.4, 55.5, 27.75, 1], 
                        ["k2", 2, 22.2, 55.5, 77.7, 38.85, 1], 
                        ["k3", 2, 33.3, 66.6, 99.9, 49.94, 1]
                    ]
                }
            ]
        },
        {
            "id": 13,
            "tags": ["table_func_changelog", "multiple_inner_joins"],
            "name": "table_func_changelog_multiple_inner_joins",
            "description": "changelog_inner_joins_changelog_inner_joins_changelog_inner_joins",
            "steps":[
                {
                    "statements": [
                        {"client":"python", "query_type": "table", "wait":1, "query":"drop stream if exists test28_stream1;"},
                        {"client":"python", "query_type": "table", "wait":1, "query":"drop stream if exists test28_stream2;"},
                        {"client":"python", "query_type": "table", "wait":1, "query":"drop stream if exists test28_stream3;"},
                        {"client":"python", "query_type": "table", "exist":"test28_stream1", "exist_wait":2, "wait":1, "query":"create stream if not exists test28_stream1 (i int, k1 string);"},
                        {"client":"python", "query_type": "table", "exist":"test28_stream2", "exist_wait":2, "wait":1, "query":"create stream if not exists test28_stream2 (j int, k2 string);"},
                        {"client":"python", "query_type": "table", "exist":"test28_stream3", "exist_wait":2, "wait":1, "query":"create stream if not exists test28_stream3 (k int, k3 string);"},
                        {"client":"python", "query_type": "stream", "query_id":"2813", "wait":1, "query": "select * from changelog(test28_stream1, k1) as c1 inner join changelog(test28_stream2, k2) as c2 ON c1.i = c2.j inner join changelog(test28_stream3, k3) as c3 ON c1.i = c3.k;"},
                        {"client":"python", "query_type": "table", "depends_on":"2813", "wait":1, "query": "insert into test28_stream1(i, k1, _tp_time) values (1, 'k1', '2023-01-01 00:00:01');"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test28_stream2(j, k2, _tp_time) values (1, 'k2', '2023-01-01 00:00:02');"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test28_stream3(k, k3, _tp_time) values (1, 'k3', '2023-01-01 00:00:03');"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test28_stream1(i, k1, _tp_time) values (2, 'k1', '2023-01-01 00:00:04');"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test28_stream2(j, k2, _tp_time) values (2, 'k2', '2023-01-01 00:00:05');"},
                        {"client":"python", "query_type": "table", "kill":"2813", "kill_wait":3, "wait":1, "query": "insert into test28_stream3(k, k3, _tp_time) values (2, 'k3', '2023-01-01 00:00:06');"}
                    ]
                }
            ],
            "expected_results": [
                {
                    "query_id":"2813",
                    "expected_results":[
                        [1, "k1", "2023-01-01 00:00:01+00:00", 1, "k2", "2023-01-01 00:00:02+00:00", 1, "k3", "2023-01-01 00:00:03+00:00", 1],
                        [1, "k1", "2023-01-01 00:00:01+00:00", 1, "k2", "2023-01-01 00:00:02+00:00", 1, "k3", "2023-01-01 00:00:03+00:00", -1],
                        [2, "k1", "2023-01-01 00:00:04+00:00", 2, "k2", "2023-01-01 00:00:05+00:00", 2, "k3", "2023-01-01 00:00:06+00:00", 1]
                    ]
                }
            ]
        },
        {
            "id": 14,
            "tags": ["table_func_changelog", "multiple_inner_joins"],
            "name": "table_func_changelog_multiple_inner_joins",
            "description": "changelog_inner_joins_changelog_inner_joins_changelog_inner_joins",
            "steps":[
                {
                    "statements": [
                        {"client":"python", "query_type": "table", "wait":1, "query":"drop stream if exists test28_stream1;"},
                        {"client":"python", "query_type": "table", "wait":1, "query":"drop stream if exists test28_stream2;"},
                        {"client":"python", "query_type": "table", "wait":1, "query":"drop stream if exists test28_stream3;"},
                        {"client":"python", "query_type": "table", "exist":"test28_stream1", "exist_wait":2, "wait":1, "query":"create stream if not exists test28_stream1 (i int, k1 string);"},
                        {"client":"python", "query_type": "table", "exist":"test28_stream2", "exist_wait":2, "wait":1, "query":"create stream if not exists test28_stream2 (j int, k2 string);"},
                        {"client":"python", "query_type": "table", "exist":"test28_stream3", "exist_wait":2, "wait":1, "query":"create stream if not exists test28_stream3 (k int, k3 string);"},
                        {"client":"python", "query_type": "stream", "query_id":"2814", "wait":1, "query": "select c1.i, c1.k1, c2.j, c2.k2, c3.k, c3.k3, _tp_delta from changelog(test28_stream1, k1) as c1 inner join changelog(test28_stream2, k2) as c2 ON c1.i = c2.j inner join changelog(test28_stream3, k3) as c3 ON c1.i = c3.k;"},
                        {"client":"python", "query_type": "table", "depends_on":"2814", "wait":1, "query": "insert into test28_stream1(i, k1) values (1, 'k1');"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test28_stream2(j, k2) values (1, 'k2');"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test28_stream3(k, k3) values (1, 'k3');"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test28_stream1(i, k1) values (2, 'k1');"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test28_stream2(j, k2) values (2, 'k2');"},
                        {"client":"python", "query_type": "table", "kill":"2814", "kill_wait":3, "wait":1, "query": "insert into test28_stream3(k, k3) values (2, 'k3');"}
                    ]
                }
            ],
            "expected_results": [
                {
                    "query_id":"2814",
                    "expected_results":[
                        [1, "k1", 1, "k2", 1, "k3", 1],
                        [1, "k1", 1, "k2", 1, "k3", -1],
                        [2, "k1", 2, "k2", 2, "k3", 1]
                    ]
                }
            ]
        }
    ]
}