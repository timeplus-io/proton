test_suite_name: changelog_stream14
tag: smoke
test_suite_config:
  tests_2_run:
    ids_2_run:
      - all
    tags_2_run: []
    tags_2_skip:
      default:
        - todo
        - to_support
        - change
        - bug
        - sample
      cluster:
        - view
        - cluster_table_bug
comments: Tests covering group_uniq_array on changelog
tests:
  - id: 109
    tags:
      - group_uniq_array
      - versioned_kv
      - single shard
    name: "group_uniq_array functionality simple test on versioned_kv stream with single shard"
    description: group_uniq_array functionality test on versioned_kv stream with single shard
    steps:
    - statements:
      - client: python
        query_type: table
        query: drop stream if exists test_changelog_14;

      - client: python
        query_type: table
        wait: 2
        query: create stream test_changelog_14(id int, val int) primary key id settings mode='versioned_kv';

      - client: python
        query_type: stream
        wait: 2
        depends_on_stream: test_changelog_14
        query_id: '15109'
        query: select group_uniq_array(val) from test_changelog_14 emit periodic 1s;

      - client: python
        query_type: table
        depends_on: '15109'
        wait: 1
        query: insert into test_changelog_14(id, val) values(1, 1);

      - client: python
        query_type: table
        wait: 1
        query: insert into test_changelog_14(id, val) values(1, 2);

      - client: python
        query_type: table
        wait: 1
        query: insert into test_changelog_14(id, val) values(2, 3);

      - client: python
        query_type: table
        wait: 1
        query: insert into test_changelog_14(id, val) values(3, 3);

      - client: python
        query_type: table
        kill : '15109'
        kill_wait: 2
        wait: 1
        query: insert into test_changelog_14(id, val) values(3, 4);

    expected_results:
      - query_id: '15109'
        expected_results:
          - ['[1]']
          - ['[2]']
          - ['[2, 3]']
          - ['[2, 3]']
          - ['[2, 3, 4]']

  - id: 110
    tags:
      - group_uniq_array
      - changelog_kv
      - single shard
    name: "group_uniq_array functionality simple test on changelog_kv stream with single shard"
    description: group_uniq_array functionality simple test on changelog_kv stream with single shard.
    steps:
    - statements:
      - client: python
        query_type: table
        query: drop stream if exists test_changelog_14;

      - client: python
        query_type: table
        wait: 1
        query: create stream test_changelog_14(id int, val int) primary key id settings mode='changelog_kv';

      - client: python
        query_type: stream
        depends_on_stream: test_changelog_14
        query_id: '15110'
        query: select group_uniq_array(val) from test_changelog_14;

      - client: python
        depends_on: '15110'
        query_type: table
        wait: 2
        query: insert into test_changelog_14(id, val) values(1, 1)(2,2);

      - client: python
        query_type: table
        wait: 2
        query: insert into test_changelog_14(id, val, _tp_delta) values(2, 2, -1) (3, 3, +1) (4, 4, +1);

      - client: python
        query_type: table
        kill: '15110'
        kill_wait: 3
        wait: 2
        query: insert into test_changelog_14(id, val, _tp_delta) values(5, 5, +1)(5, 5, -1);

    expected_results:
      - query_id: '15110'
        expected_results:
          - ['[1, 2]']
          - ['[1, 3, 4]']
          - ['[1, 3, 4]']

  - id: 111
    tags:
      - group_uniq_array
      - changelog function
      - single shard
    name: "group_uniq_array functionality simple test on changelog stream with single shard"
    description: group_uniq_array functionality simple test on changelog stream with single shard.
    steps:
    - statements:
      - client: python
        query_type: table
        query: drop stream if exists test_changelog_14;

      - client: python
        query_type: table
        wait: 1
        query: create stream test_changelog_14(id int, val int);

      - client: python
        query_type: stream
        depends_on_stream: test_changelog_14
        query_id: '15111'
        query: select group_uniq_array(val) from changelog(test_changelog_14, id);

      - client: python
        query_type: table
        depends_on: '15111'
        wait: 2
        query: insert into test_changelog_14(id, val) values(1, 1);

      - client: python
        query_type: table
        wait: 2
        query: insert into test_changelog_14(id, val) values(1, 2);

      - client: python
        query_type: table
        wait: 2
        query: insert into test_changelog_14(id, val) values(2, 5);

      - client: python
        query_type: table
        kill: '15111'
        kill_wait: 2
        wait: 3
        query: insert into test_changelog_14(id, val) values(2, 3);

    expected_results:
      - query_id: '15111'
        expected_results:
          - ['[1]']
          - ['[2]']
          - ['[2, 5]']
          - ['[2, 3]']

  - id: 112
    tags:
      - group_uniq_array
      - versioned_kv
      - single shard
      - emit changelog
    name: "group_uniq_array functionality simple test on changelog_kv stream with single shard, emit changelog"
    description: group_uniq_array functionality simple test on changelog_kv stream with single shard, emit changelog.
    steps:
    - statements:
      - client: python
        query_type: table
        query: drop stream if exists test_changelog_14;

      - client: python
        query_type: table
        wait: 2
        query: create stream test_changelog_14(id int, val int) primary key id settings mode='versioned_kv';

      - client: python
        query_type: stream
        wait: 2
        depends_on_stream: test_changelog_14
        query_id: '15112'
        query: select group_uniq_array(val), _tp_delta from test_changelog_14 emit changelog periodic 1s;

      - client: python
        query_type: table
        depends_on: '15112'
        wait: 2
        query: insert into test_changelog_14(id, val) values(1, 1);

      - client: python
        query_type: table
        wait: 1
        query: insert into test_changelog_14(id, val) values(1, 2);

      - client: python
        query_type: table
        wait: 1
        query: insert into test_changelog_14(id, val) values(2, 3);

      - client: python
        query_type: table
        wait: 1
        query: insert into test_changelog_14(id, val) values(3, 3);

      - client: python
        query_type: table
        kill : '15112'
        kill_wait: 2
        wait: 1
        query: insert into test_changelog_14(id, val) values(3, 4);
    expected_results:
      - query_id: '15112'
        expected_results:
          - ['[1]', 1]
          - ['[1]', -1]
          - ['[2]', 1]
          - ['[2]', -1]
          - ['[2, 3]', 1]
          - ['[2, 3]', -1]
          - ['[2, 3]', 1]
          - ['[2, 3]', -1]
          - ['[2, 3, 4]', 1]

  - id: 113
    tags:
      - group_uniq_array
      - changelog_kv
      - single shard
      - checkpoint
    name: "global aggr on changelog_kv stream with single shard, checkpoint"
    description: global aggr on changelog_kv stream with single shard, checkpoint
    steps:
    - statements:
      - client: python
        query_type: table
        query: drop stream if exists test_changelog_14

      - client: python
        query_type: table
        wait: 2
        query: create stream test_changelog_14(id int, val int) primary key id settings mode='changelog_kv';

      - client: python
        query_type: stream
        wait: 2
        depends_on_stream: test_changelog_14
        query_id: '15113'
        query: subscribe to select group_uniq_array(val) from test_changelog_14 settings checkpoint_interval=1;

      - client: python
        query_type: table
        depends_on: '15113'
        wait: 2
        query: insert into test_changelog_14(id, val) values(1, 1), (2,2);

      - client: python
        query_type: table
        kill: '15113'
        kill_wait: 3
        wait: 2
        query: insert into test_changelog_14(id, val, _tp_delta) values(3, 3, +1), (2, 2, -1);

    - statements:
      - client: python
        query_type: stream
        query_id: 15113-1
        wait: 1
        terminate: manual
        query: recover from '15113'

      - client: python
        query_type: table
        depends_on: '15113'
        wait: 2
        query: insert into test_changelog_14(id, val) values(4, 4), (5,5);

      - client: python
        query_type: table
        wait: 2
        query: insert into test_changelog_14(id, val, _tp_delta) values(3, 3, -1), (1, 1, -1);

      - client: python
        query_type: table
        wait: 2
        query: insert into test_changelog_14(id, val, _tp_delta) values(4, 4, -1);

      - client: python
        query_type: table
        wait: 3
        query: kill query where query_id='15113-1' sync

      - client: python
        query_type: table
        query: unsubscribe to '15113'
    expected_results:
      - query_id: '15113'
        expected_results:
          - ['[1, 2]']
          - ['[1, 3]']
      - query_id: '15113-1'
        expected_results:
          - ['[1, 3, 4, 5]']
          - ['[4, 5]']
          - ['[5]']
