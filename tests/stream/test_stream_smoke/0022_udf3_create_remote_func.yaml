test_suite_name: udf3_create_remote_func
tag: smoke
test_suite_config:
  tests_2_run:
    ids_2_run:
      - all
    tags_2_run: [ ]
    tags_2_skip:
      default:
        - todo
        - to_support
        - change
        - bug
        - sample
      cluster:
        - view
        - cluster_table_bug
comments: Test SQL to create remote udf

tests:
  - id: 0
    tags:
     - udf3_create_remote_func
    name: create remote udf
    description: SQL - remote UDF
    steps:
      - statements:
          - client: python
            wait: 1
            query: DROP FUNCTION IF EXISTS ip_lookup;
          
          - client: python
            query_type: table
            query_id: udf-29-0
            wait: 1
            query: |
              CREATE Remote FUNCTION ip_lookup(ip string) RETURNS string 
              URL 'https://hn6wip76uexaeusz5s7bh3e4u40lrrrz.lambda-url.us-west-2.on.aws/'
              AUTH_METHOD 'none';
          
          - client: python
            query_id: udf-29-1
            query_end_timer: 7
            depends_on_done: udf-29-0
            query_type: table
            wait: 5
            query: |
              select ip_lookup('127.0.0.1');
          
          - client: python
            query_id: udf-29-2
            query_end_timer: 7
            depends_on_done: udf-29-0
            query_type: table
            wait: 5
            query: |
              select ip_lookup('1');
          
          - client: python
            query_type: table
            query_id: udf-29-3
            depends_on_done: udf-29-0
            wait: 1
            query: |
              DROP FUNCTION ip_lookup; 
    
    expected_results:
      - query_id: udf-29-1
        expected_results:
          - [ '{"ip":"127.0.0.1","bogon":true}' ]
      - query_id: udf-29-2
        expected_results:
          - [ '{"status":404,"error":{"title":"Wrong ip","message":"Please provide a valid IP address"}}']
  - id: 1
    tags:
     - udf3_create_remote_func
    name: create remote udf with auth 
    description: SQL - remote UDF
    steps:
      - statements:
          - client: python
            wait: 1
            query: DROP FUNCTION IF EXISTS ip_lookup;
          
          - client: python
            query_type: table
            query_id: udf-30-0
            wait: 1
            query: |
              CREATE Remote FUNCTION ip_lookup(ip string) RETURNS string 
              URL 'https://hn6wip76uexaeusz5s7bh3e4u40lrrrz.lambda-url.us-west-2.on.aws/'
              AUTH_METHOD 'auth_header'
              AUTH_HEADER 'auth'
              AUTH_KEY 'proton'
              EXECUTION_TIMEOUT 60000;
          - client: python
            query_id: udf-30-1
            query_end_timer: 7
            depends_on_done: udf-30-0
            query_type: table
            wait: 5
            query: |
              select ip_lookup('127.0.0.1');
          
          - client: python
            query_id: udf-30-2
            query_end_timer: 7
            depends_on_done: udf-30-0
            query_type: table
            wait: 5
            query: |
              select ip_lookup('1');
          
          - client: python
            query_type: table
            query_id: udf-30-3
            depends_on_done: udf-30-0
            wait: 1
            query: |
              DROP FUNCTION ip_lookup; 
    
    expected_results:
      - query_id: udf-30-1
        expected_results:
          - [ '{"ip":"127.0.0.1","bogon":true}' ]
      - query_id: udf-30-2
        expected_results:
          - [ '{"status":404,"error":{"title":"Wrong ip","message":"Please provide a valid IP address"}}']
  

