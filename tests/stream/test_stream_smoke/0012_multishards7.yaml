test_suite_name: multishards7
tag: smoke
test_suite_config:
  tests_2_run:
    ids_2_run:
      - all
    tags_2_run: []
    tags_2_skip:
      default:
        - todo
        - to_support
        - change
        - bug
        - sample
      cluster:
        - view
        - cluster_table_bug
comments: Tests covering the multishard stream query smoke cases.
tests:
  - id: 60
    tags:
      - multishards
      - append_only
      - subquery
      - subquery_view_materialized-view
      - tail_aggr_last-X
      - streaming_tailing
      - stateful_function
    name: query materialized view view test
    description: query materialized view view test
    steps:
      - statements:
          - client: python
            query_type: table
            wait: 1
            query: |
              drop view if exists test13_view2_7;

          - client: python
            query_type: table
            wait: 1
            query: |
              drop view if exists test13_view1_7;

          - client: python
            query_type: table
            wait: 1
            query: |
              drop stream if exists test13_subq_7;

          - client: python
            query_type: table
            wait: 1
            query: |
              create stream if not exists test13_subq_7(val float, f1 int, f2 int) settings shards=3;

          - client: python
            query_type: table
            wait: 1
            query: |
              create materialized view if not exists test13_view1_7 as
              select val,
                     f1,
                     f2
              from test13_subq_7
              where f1 = 1;

          - client: python
            query_type: table
            wait: 1
            query: |
              create view if not exists test13_view2_7 as
              select val,
                     f1,
                     f2
              from test13_view1_7
              where f2 = 1
                and val > 0;

          - client: python
            query_id: '1360'
            depends_on_stream: test13_subq_7
            query_type: stream
            query: |
              select lag(val),
                     f1,
                     f2
              from test13_view2_7;

          - client: python
            query_type: table
            depends_on: '1360'
            wait: 1
            query: |
              insert into test13_subq_7 (val, f1, f2)
              values (1, 1, 1);

          - client: python
            query_type: table
            wait: 1
            query: |
              insert into test13_subq_7 (val, f1, f2)
              values (2, 1, 1);

          - client: python
            query_type: table
            wait: 1
            query: |
              insert into test13_subq_7 (val, f1, f2)
              values (3, 0, 1);

          - client: python
            query_type: table
            wait: 1
            query: |
              insert into test13_subq_7 (val, f1, f2)
              values (4, 1, 0);

          - client: python
            query_type: table
            kill: '1360'
            kill_wait: 3
            wait: 1
            query: |
              insert into test13_subq_7 (val, f1, f2)
              values (5, 1, 1);

          - client: python
            query_type: table
            wait: 3
            query: |
              drop view if exists test13_view2_7;

          - client: python
            query_type: table
            wait: 1
            query: |
              drop view if exists test13_view1_7;

          - client: python
            query_type: table
            wait: 1
            query: |
              drop stream if exists test13_subq_7;

    expected_results:
      - query_id: '1360'
        expected_results:
          - [0, 1, 1]
          - [1, 1, 1]
          - [2, 1, 1]

  - id: 61
    tags:
      - multishards
      - append_only
      - streaming_tailing
      - UDF
    name: multishards append only basic test UDF add
    description: multishards append only basic test UDF add
    steps:
      - statements:
          - client: rest
            rest_type: raw
            query_type: table
            query_url: /proton/v1/udfs
            http_method: POST
            data:
              type: javascript
              name: test_13_7_add_five
              arguments:
              - name: value
                type: float32
              return_type: float32
              source: |
                function test_13_7_add_five(value) {
                    for (let i = 0; i < value.length; i++) {
                        value[i] = value[i] + 5;
                    }
                    return value;
                }

          - client: python
            query_type: table
            wait: 1
            query: |
              drop stream if exists test13_multishard_7;

          - client: python
            query_type: table
            wait: 1
            query: |
              create stream if not exists test13_multishard_7(i float, k1 int, k2 string) settings shards=3;

          - client: python
            query_id: '1361'
            depends_on_stream: test13_multishard_7
            query_type: stream
            query: |
              select i,
                     test_13_7_add_five(i),
                     test_13_7_add_five(test_13_7_add_five(i)),
                     test_13_7_add_five(k1),
                     k2
              from test13_multishard_7;

          - client: python
            query_type: table
            depends_on: '1361'
            wait: 1
            query: |
              insert into test13_multishard_7 (i, k1, k2)
              values (1, 0, 'a');

          - client: python
            query_type: table
            wait: 1
            query: |
              insert into test13_multishard_7 (i, k1, k2)
              values (2, 0, 'b');

          - client: python
            query_type: table
            wait: 1
            query: |
              insert into test13_multishard_7 (i, k1, k2)
              values (3, 0, 'c');

          - client: python
            query_type: table
            wait: 1
            query: |
              insert into test13_multishard_7 (i, k1, k2)
              values (4, 0, 'd');

          - client: python
            query_type: table
            wait: 1
            query: |
              insert into test13_multishard_7 (i, k1, k2)
              values (5, 0, 'e');

          - client: python
            query_type: table
            kill: '1361'
            kill_wait: 3
            wait: 1
            query: |
              insert into test13_multishard_7 (i, k1, k2)
              values (6, 0, 'f');

          - client: python
            query_type: table
            wait: 3
            query: |
              drop stream if exists test13_multishard_7;

    expected_results:
      - query_id: '1361'
        expected_results:
          - [1, 6, 11, 5, 'a']
          - [2, 7, 12, 5, 'b']
          - [3, 8, 13, 5, 'c']
          - [4, 9, 14, 5, 'd']
          - [5, 10, 15, 5, 'e']
          - [6, 11, 16, 5, 'f']

  - id: 62
    tags:
      - multishards
      - append_only
      - streaming_tailing
      - stateless_function
    name: multishards append only basic test stateless function add
    description: multishards append only basic test stateless function add
    steps:
      - statements:
          - client: python
            query_type: table
            wait: 1
            query: |
              drop stream if exists test13_multishard_7;

          - client: python
            query_type: table
            wait: 1
            query: |
              create stream if not exists test13_multishard_7(i float, k1 int, k2 string) settings shards=3;

          - client: python
            query_id: '1362'
            depends_on_stream: test13_multishard_7
            query_type: stream
            query: |
              select if(i > k1, i, k1),
                     i,
                     k1,
                     k2
              from test13_multishard_7;

          - client: python
            query_type: table
            depends_on: '1362'
            wait: 1
            query: |
              insert into test13_multishard_7 (i, k1, k2)
              values (1, 6, 'a');

          - client: python
            query_type: table
            wait: 1
            query: |
              insert into test13_multishard_7 (i, k1, k2)
              values (2, 5, 'b');

          - client: python
            query_type: table
            wait: 1
            query: |
              insert into test13_multishard_7 (i, k1, k2)
              values (3, 4, 'c');

          - client: python
            query_type: table
            wait: 1
            query: |
              insert into test13_multishard_7 (i, k1, k2)
              values (4, 3, 'd');

          - client: python
            query_type: table
            wait: 1
            query: |
              insert into test13_multishard_7 (i, k1, k2)
              values (5, 2, 'e');

          - client: python
            query_type: table
            kill: '1362'
            kill_wait: 3
            wait: 1
            query: |
              insert into test13_multishard_7 (i, k1, k2)
              values (6, 1, 'f');

          - client: python
            query_type: table
            wait: 3
            query: |
              drop stream if exists test13_multishard_7;

    expected_results:
      - query_id: '1362'
        expected_results:
          - [6, 1, 6, 'a']
          - [5, 2, 5, 'b']
          - [4, 3, 4, 'c']
          - [4, 4, 3, 'd']
          - [5, 5, 2, 'e']
          - [6, 6, 1, 'f']

  - id: 63
    tags:
      - multishards
      - append_only
      - streaming_tailing
      - stateful_function
    name: multishards append only basic test stateful function add
    description: multishards append only basic test stateful function add
    steps:
      - statements:
          - client: python
            query_type: table
            wait: 1
            query: |
              drop stream if exists test13_multishard_7;

          - client: python
            query_type: table
            wait: 1
            query: |
              create stream if not exists test13_multishard_7(i float, k1 int, k2 string) settings shards=3;

          - client: python
            query_id: '1363'
            depends_on_stream: test13_multishard_7
            query_type: stream
            query: |
              select lag(i),
                     k1,
                     k2
              from test13_multishard_7;

          - client: python
            query_type: table
            depends_on: '1363'
            wait: 1
            query: |
              insert into test13_multishard_7 (i, k1, k2)
              values (1, 0, 'a');

          - client: python
            query_type: table
            wait: 1
            query: |
              insert into test13_multishard_7 (i, k1, k2)
              values (2, 0, 'b');

          - client: python
            query_type: table
            wait: 1
            query: |
              insert into test13_multishard_7 (i, k1, k2)
              values (3, 0, 'c');

          - client: python
            query_type: table
            wait: 1
            query: |
              insert into test13_multishard_7 (i, k1, k2)
              values (4, 0, 'd');

          - client: python
            query_type: table
            wait: 1
            query: |
              insert into test13_multishard_7 (i, k1, k2)
              values (5, 0, 'e');

          - client: python
            query_type: table
            kill: '1363'
            kill_wait: 3
            wait: 1
            query: |
              insert into test13_multishard_7 (i, k1, k2)
              values (6, 0, 'f');

          - client: python
            query_type: table
            wait: 3
            query: |
              drop stream if exists test13_multishard_7;

    expected_results:
      - query_id: '1363'
        expected_results:
          - [0, 0, 'a']
          - [1, 0, 'b']
          - [2, 0, 'c']
          - [3, 0, 'd']
          - [4, 0, 'e']
          - [5, 0, 'f']

  - id: 64
    tags:
      - multishards
      - append_only
      - distinct_aggr
      - issue_425
    name: fix incorrect result on distinct aggr
    description: fix incorrect result on distinct aggr
    steps:
      - statements:
          - client: python
            query_type: table
            wait: 1
            query: |
              drop stream if exists test13_multishard_7;

          - client: python
            query_type: table
            wait: 1
            query: |
              create stream if not exists test13_multishard_7(id int, val int) settings shards=3, sharding_expr='to_int(id)';
          
          - client: python
            query_id: '1364'
            depends_on_stream: test13_multishard_7
            query_type: stream
            query: |
              select sum_distinct(val), sum(val) from test13_multishard_7 emit periodic 1ms;

          - client: python
            query_type: table
            depends_on: '1364'
            wait: 1
            query: |
              insert into test13_multishard_7(id, val) values(1, 30), (1, 40)

          - client: python
            query_type: table
            wait: 1
            query: |
              insert into test13_multishard_7(id, val) values(2, 30), (2, 50), (1, 40)
          
          - client: python
            query_type: table
            kill: '1364'
            kill_wait: 2
            wait: 1
            query: |
              insert into test13_multishard_7(id, val) values(3, 50), (3, 60), (4, 70)

          - client: python
            query_type: table
            wait: 1
            query: |
              drop stream if exists test13_multishard_7;
    
    expected_results:
      - query_id: '1364'
        expected_results:
          - [70, 70]
          - [120, 190]
          - [250, 370]

  - id: 65
    tags:
      - multishards
      - append_only
      - distinct_aggr
      - issue_425
    name: fix incorrect result on distinct aggr
    description: fix incorrect result on distinct aggr
    steps:
      - statements:
          - client: python
            query_type: table
            wait: 1
            query: |
              drop stream if exists test13_multishard_7;

          - client: python
            query_type: table
            wait: 1
            query: |
              create stream if not exists test13_multishard_7(id int, val int) settings shards=3, sharding_expr='to_int(id)';
          
          - client: python
            query_id: '1365'
            depends_on_stream: test13_multishard_7
            query_type: stream
            query: select sum_distinct(val), sum(val) from test13_multishard_7 emit periodic 1ms;

          - client: python
            query_type: table
            depends_on: '1365'
            wait: 1
            query: insert into test13_multishard_7(id, val) values(1, 30), (1, 40)

          - client: python
            query_type: table
            wait: 1
            query: insert into test13_multishard_7(id, val) values(1, 300), (2, 400)

          - client: python
            query_type: table
            kill: '1365'
            kill_wait: 2
            wait: 1
            query: insert into test13_multishard_7(id, val) values(1, 30), (2, 40)

          - client: python
            query_type: table
            wait: 1
            query: |
              drop stream if exists test13_multishard_7;
    
    expected_results:
      - query_id: '1365'
        expected_results:
          - [70, 70]
          - [770, 770]
          - [770, 840]

  - id: 66
    tags:
      - multishards
      - append_only
      - distinct_aggr
      - issue_425
    name: fix incorrect result on distinct aggr
    description: fix incorrect result on distinct aggr
    steps:
      - statements:
          - client: python
            query_type: table
            wait: 1
            query: |
              drop stream if exists test13_multishard_7;

          - client: python
            query_type: table
            wait: 1
            query: |
              create stream if not exists test13_multishard_7(id int, val int) settings shards=3, sharding_expr='to_int(id)';
          
          - client: python
            query_id: '1366'
            depends_on_stream: test13_multishard_7
            query_type: stream
            query: select sum_distinct(val), sum(val) from test13_multishard_7 emit periodic 1ms;

          - client: python
            query_type: table
            depends_on: '1366'
            wait: 1
            query: insert into test13_multishard_7(id, val) values(1, 40), (1, 30)

          - client: python
            query_type: table
            kill: '1366'
            kill_wait: 2
            wait: 1
            query: insert into test13_multishard_7(id, val) values(1, 30), (1, 50), (2, 50), (3, 50)

          - client: python
            query_type: table
            wait: 1
            query: |
              drop stream if exists test13_multishard_7;
    
    expected_results:
      - query_id: '1366'
        expected_results:
          - [70, 70]
          - [120, 250]
