{
    "test_suite_name": "mv",
    "comments":
        "Test suite covering the materialized view with target stream smoke cases.",
    "test_suite_config": {
        "tests_2_run": {"ids_2_run": ["all"], "tags_2_run":[], "tags_2_skip":{"default":["todo", "to_support", "change", "bug"]}}
    },
    "tests": [
        {
            "id": 0,
            "tags": ["materialized view with target stream"],
            "name": "mv_with_target_stream",
            "description": "create a materialized view with target stream",
            "steps":[
                {
                    "statements": [
                        {"client":"python", "query_type": "table", "query":"drop view if exists mv_with_target_stream"},
                        {"client":"python", "query_type": "table", "query":"drop stream if exists source_mv_stream"},
                        {"client":"python", "query_type": "table", "query":"drop stream if exists target_mv_stream"},
                        {"client":"python", "query_type": "table", "exist":"source_mv_stream", "exist_wait":2, "wait":1, "query":"create stream if not exists source_mv_stream (i int) settings distributed_flush_threshold_count=1"},
                        {"client":"python", "query_type": "table", "exist":"target_mv_stream", "exist_wait":2, "wait":1, "query":"create stream if not exists target_mv_stream (ii int) settings distributed_flush_threshold_count=1"},
                        {"client":"python", "query_type": "table", "depends_on_stream":"source_mv_stream", "exist":"mv_with_target_stream", "exist_wait":2, "wait":1, "query":"create materialized view mv_with_target_stream into target_mv_stream as select _tp_time, i + 1 as ii from source_mv_stream"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into source_mv_stream(i) values (1), (2), (3)"},
                        {"client":"python", "query_type": "table", "query_id":"2401", "wait":1, "query":"select ii from table(mv_with_target_stream)"},
                        {"client":"python", "query_type": "table", "query_id":"2402", "wait":1, "query":"select ii from table(target_mv_stream)"}
                    ]
                },
                {
                    "statements": [
                        {"client":"python", "query_type": "table", "query":"drop view if exists mv_with_target_stream"}
                    ]
                }
            ],
            "expected_results": [
                {"query_id":"2401", "expected_results":[[2], [3], [4]]},
                {"query_id":"2402", "expected_results":[[2], [3], [4]]}
            ]
        },
        {
            "id": 1,
            "tags": ["materialized view with target stream"],
            "name": "multi_mv_with_same_target_stream",
            "description": "create 2 materialized views with same target stream",
            "steps":[
                {
                    "statements": [
                        {"client":"python", "query_type": "table", "query":"drop view if exists mv_with_target_stream_1"},
                        {"client":"python", "query_type": "table", "query":"drop view if exists mv_with_target_stream_2"},
                        {"client":"python", "query_type": "table", "wait":1, "query":"drop stream if exists source_mv_stream"},
                        {"client":"python", "query_type": "table", "wait":1, "query":"drop stream if exists target_mv_stream"},
                        {"client":"python", "query_type": "table", "exist":"source_mv_stream", "exist_wait":2, "wait":1, "query":"create stream if not exists source_mv_stream (i int) settings distributed_flush_threshold_count=1"},
                        {"client":"python", "query_type": "table", "exist":"target_mv_stream", "exist_wait":2, "wait":1, "query":"create stream if not exists target_mv_stream (ii int) settings distributed_flush_threshold_count=1"},
                        {"client":"python", "query_type": "table", "exist":"mv_with_target_stream_1", "exist_wait":2, "wait":1, "query":"create materialized view mv_with_target_stream_1 into target_mv_stream as select _tp_time, i + 1 as ii from source_mv_stream"},
                        {"client":"python", "query_type": "table", "exist":"mv_with_target_stream_2", "exist_wait":2, "wait":1, "query":"create materialized view mv_with_target_stream_2 into target_mv_stream as select _tp_time, i + 10 as ii from source_mv_stream"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into source_mv_stream(i) values (1), (2), (3)"},
                        {"client":"python", "query_type": "table", "query_id":"2405", "wait":1, "query":"select ii from table(mv_with_target_stream_1) ORDER BY ii ASC"},
                        {"client":"python", "query_type": "table", "query_id":"2406", "wait":1, "query":"select ii from table(mv_with_target_stream_2) ORDER BY ii ASC"},
                        {"client":"python", "query_type": "table", "query_id":"2407", "wait":1, "query":"select ii from table(target_mv_stream) ORDER BY ii ASC"}
                    ]
                },
                {   
                    "statements": [
                        {"client":"python", "query_type": "table", "query":"drop view if exists mv_with_target_stream_1"},
                        {"client":"python", "query_type": "table", "query":"drop view if exists mv_with_target_stream_2"}
                    ]
                }
            ],
            "expected_results": [
                {"query_id":"2405", "expected_results":[[2], [3], [4], [11], [12], [13]]},
                {"query_id":"2406", "expected_results":[[2], [3], [4], [11], [12], [13]]},
                {"query_id":"2407", "expected_results":[[2], [3], [4], [11], [12], [13]]}
            ]
        },
        {
            "id": 2,
            "tags": ["materialized view with target stream"],
            "name": "mv_with_target_stream_partial_populate",
            "description": "create a materialized view with target stream and materialize partial columns of target table",
            "steps":[
                {
                    "statements": [
                        {"client":"python", "query_type": "table", "query":"drop view if exists mv_with_target_stream"},
                        {"client":"python", "query_type": "table", "wait":1, "query":"drop stream if exists source_mv_stream"},
                        {"client":"python", "query_type": "table", "wait":1, "query":"drop stream if exists target_mv_stream"},
                        {"client":"python", "query_type": "table", "exist":"source_mv_stream", "exist_wait":2, "wait":1, "query":"create stream if not exists source_mv_stream (i int) settings distributed_flush_threshold_count=1"},
                        {"client":"python", "query_type": "table", "exist":"target_mv_stream", "exist_wait":2, "wait":1, "query":"create stream if not exists target_mv_stream (ii int, s string) settings distributed_flush_threshold_count=1"},
                        {"client":"python", "query_type": "table", "depends_on_stream":"source_mv_stream", "exist":"mv_with_target_stream", "exist_wait":2, "wait":1, "query":"create materialized view mv_with_target_stream into target_mv_stream as select _tp_time, i + 1 as ii from source_mv_stream"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into source_mv_stream(i) values (1), (2), (3)"},
                        {"client":"python", "query_type": "table", "query_id":"2409", "wait":1, "query":"select ii, s from table(target_mv_stream)"}
                    ]
                },
                {
                    "statements": [
                        {"client":"python", "query_type": "table", "query":"drop view if exists mv_with_target_stream"}
                    ]
                }
            ],
            "expected_results": [
                {"query_id":"2409", "expected_results":[[2, ""], [3, ""], [4, ""]]}
            ]
        },
        {
            "id": 3,
            "tags": ["materialized view"],
            "name": "altering_mv",
            "description": "altering materialied view retention policy",
            "steps":[
                {
                    "statements": [
                        {"client":"python", "query_type": "table", "query":"drop view if exists mv_with_inner_stream"},
                        {"client":"python", "query_type": "table", "query":"drop view if exists mv_with_target_stream"},
                        {"client":"python", "query_type": "table", "wait":1, "query":"drop stream if exists source_mv_stream"},
                        {"client":"python", "query_type": "table", "wait":1, "query":"drop stream if exists target_mv_stream"},
                        {"client":"python", "query_type": "table", "exist":"source_mv_stream", "exist_wait":2, "wait":1, "query":"create stream if not exists source_mv_stream (i int) settings distributed_flush_threshold_count=1"},
                        {"client":"python", "query_type": "table", "exist":"target_mv_stream", "exist_wait":2, "wait":1, "query":"create stream if not exists target_mv_stream (ii int, s string) settings distributed_flush_threshold_count=1"},
                        {"client":"python", "query_type": "table", "depends_on_stream":"source_mv_stream", "exist":"mv_with_inner_stream", "exist_wait":2, "wait":1, "query":"create materialized view mv_with_inner_stream as select _tp_time, i + 1 as ii from source_mv_stream"},
                        {"client":"python", "query_type": "table", "depends_on_stream":"target_mv_stream", "exist":"mv_with_target_stream", "exist_wait":2, "wait":1, "query":"create materialized view mv_with_target_stream into target_mv_stream as select _tp_time, i + 1 as ii from source_mv_stream"},
                        {"client":"python", "query_type": "table", "query_id":"2400", "wait":2, "query":"alter stream mv_with_inner_stream modify setting logstore_retention_bytes=1000000"},
                        {"client":"python", "query_type": "table", "query_id":"2401", "query":"alter stream mv_with_target_stream modify setting logstore_retention_bytes=1000000"},
                        {"client":"python", "query_type": "table", "query_id":"2402", "query":"alter stream mv_with_inner_stream modify ttl now()-1d"},
                        {"client":"python", "query_type": "table", "query_id":"2403", "query":"alter stream mv_with_target_stream modify ttl now()-1d"},
                        {"client":"python", "query_type": "table", "query_id":"2404", "wait":3, "query":"alter stream mv_with_inner_stream remove ttl"},
                        {"client":"python", "query_type": "table", "query_id":"2405", "query":"alter stream mv_with_target_stream remove ttl"}
                    ]
                },
                {
                    "statements": [
                        {"client":"python", "query_type": "table", "query":"drop view if exists mv_with_inner_stream"},
                        {"client":"python", "query_type": "table", "query":"drop view if exists mv_with_target_stream"}
                    ]
                }
            ],
            "expected_results": [
                {"query_id":"2400", "expected_results":[]},
                {"query_id":"2401", "expected_results":"error_code:48"},
                {"query_id":"2402", "expected_results":[]},
                {"query_id":"2403", "expected_results":"error_code:48"},
                {"query_id":"2404", "expected_results":[]},
                {"query_id":"2405", "expected_results":"error_code:36"}
            ]
        },
        {
            "id": 4,
            "tags": ["materialized view"],
            "name": "union multiple versioned_kv_join_mv",
            "description": "union multiple materialied view with versioned_kv join query",
            "steps":[
                {
                    "statements": [
                        {"client":"python", "query_type": "table", "query":"drop view if exists mv_with_inner_stream"},
                        {"client":"python", "query_type": "table", "query":"drop view if exists mv_with_target_stream"},
                        {"client":"python", "query_type": "table", "wait":1, "query":"drop stream if exists source_mv_stream"},
                        {"client":"python", "query_type": "table", "wait":1, "query":"drop stream if exists source_mv_versioned_kv"},
                        {"client":"python", "query_type": "table", "wait":1, "query":"drop stream if exists target_mv_stream"},
                        {"client":"python", "query_type": "table", "exist":"source_mv_stream", "exist_wait":2, "wait":1, "query":"create stream if not exists source_mv_stream(i int, v string, t datetime64(3, 'UTC')) settings distributed_flush_threshold_count=1"},
                        {"client":"python", "query_type": "table", "exist":"source_mv_versioned_kv", "exist_wait":2, "wait":1, "query":"create stream if not exists source_mv_versioned_kv(id int, value string) primary key id settings mode='versioned_kv', distributed_flush_threshold_count=1"},
                        {"client":"python", "query_type": "table", "exist":"target_mv_stream", "exist_wait":2, "wait":1, "query":"create stream if not exists target_mv_stream(customerId int, timestamp string, recordValue string, value string) settings distributed_flush_threshold_count=1"},
                        {"client":"python", "query_type": "table", "depends_on_stream":"source_mv_versioned_kv", "exist":"mv_with_inner_stream", "exist_wait":2, "wait":1, "query":"create materialized view mv_with_inner_stream as with results as (select i, format_datetime(window_end, '%Y-%m-%d %H:%i:%S', 'UTC') AS timestamp, to_string(max(v)) AS recordValue from tumble(source_mv_stream, t, 2s) group by i, window_end) select source_mv_versioned_kv.id as customerId, results.timestamp as timestamp, results.recordValue as recordValue, source_mv_versioned_kv.value as value from results inner join source_mv_versioned_kv on i = id"},
                        {"client":"python", "query_type": "table", "depends_on_stream":"target_mv_stream", "exist":"mv_with_target_stream", "exist_wait":2, "wait":1, "query":"create materialized view mv_with_target_stream into target_mv_stream as with results as (select i, format_datetime(window_end, '%Y-%m-%d %H:%i:%S', 'UTC') AS timestamp, to_string(max(v)) AS recordValue from tumble(source_mv_stream, t, 2s) group by i, window_end) select source_mv_versioned_kv.id as customerId, results.timestamp as timestamp, results.recordValue as recordValue, source_mv_versioned_kv.value as value from results inner join source_mv_versioned_kv on i = id"},
                        {"client":"python", "query_type": "stream", "query_id":"2400", "terminate": "manual", "wait":1, "query":"select (* except _tp_time) from mv_with_inner_stream union select (* except _tp_time) from mv_with_target_stream"},
                        {"client":"python", "query_type": "table", "wait":1, "query":"insert into source_mv_versioned_kv(id, value) values(1, 'test')"},
                        {"client":"python", "query_type": "table", "wait":1, "query":"insert into source_mv_stream(i, v, t) values(1, 't1', '2022-10-1 00:00:00')(2, 't2', '2022-10-1 00:00:01') (3, 't3', '2022-10-1 00:00:03')"},
                        {"client":"python", "query_type": "table", "wait":1, "query":"insert into source_mv_versioned_kv(id, value) values(1, 'test2')(2, 'test3')"},
                        {"client":"python", "query_type": "table", "kill":"2400", "kill_wait":3, "query":"insert into source_mv_stream(i, v, t) values(1, 't11', '2022-10-1 00:00:03')(2, 't22', '2022-10-1 00:00:03') (3, 't33', '2022-10-1 00:00:04')"}
                    ]
                },
                {
                    "statements": [
                        {"client":"python", "query_type": "table", "query":"drop view if exists mv_with_inner_stream"},
                        {"client":"python", "query_type": "table", "query":"drop view if exists mv_with_target_stream"}
                    ]
                }
            ],
            "expected_results": [
                {
                    "query_id":"2400", 
                    "expected_results":[
                        [1, "2022-10-01 00:00:02", "t1", "test"],
                        [1, "2022-10-01 00:00:02", "t1", "test"],
                        [1, "2022-10-01 00:00:04", "t11", "test2"], [2, "2022-10-01 00:00:04", "t22", "test3"],
                        [1, "2022-10-01 00:00:04", "t11", "test2"], [2, "2022-10-01 00:00:04", "t22", "test3"]
                    ]
                }
            ]
        },
        {
            "id": 5,
            "tags": ["materialized view"],
            "name": "union multiple versioned_kv_join_mv with max threads limitation",
            "description": "union multiple materialied view with versioned_kv join query",
            "steps":[
                {
                    "statements": [
                        {"client":"python", "query_type": "table", "query":"drop view if exists mv_with_inner_stream"},
                        {"client":"python", "query_type": "table", "query":"drop view if exists mv_with_target_stream"},
                        {"client":"python", "query_type": "table", "wait":1, "query":"drop stream if exists source_mv_stream"},
                        {"client":"python", "query_type": "table", "wait":1, "query":"drop stream if exists source_mv_versioned_kv"},
                        {"client":"python", "query_type": "table", "wait":1, "query":"drop stream if exists target_mv_stream"},
                        {"client":"python", "query_type": "table", "exist":"source_mv_stream", "exist_wait":2, "wait":1, "query":"create stream if not exists source_mv_stream(i int, v string, t datetime64(3, 'UTC')) settings distributed_flush_threshold_count=1"},
                        {"client":"python", "query_type": "table", "exist":"source_mv_versioned_kv", "exist_wait":2, "wait":1, "query":"create stream if not exists source_mv_versioned_kv(id int, value string) primary key id settings mode='versioned_kv', distributed_flush_threshold_count=1"},
                        {"client":"python", "query_type": "table", "exist":"target_mv_stream", "exist_wait":2, "wait":1, "query":"create stream if not exists target_mv_stream(customerId int, timestamp string, recordValue string, value string) settings distributed_flush_threshold_count=1"},
                        {"client":"python", "query_type": "table", "depends_on_stream":"source_mv_versioned_kv", "exist":"mv_with_inner_stream", "exist_wait":2, "wait":1, "query":"create materialized view mv_with_inner_stream as with results as (select i, format_datetime(window_end, '%Y-%m-%d %H:%i:%S', 'UTC') AS timestamp, to_string(max(v)) AS recordValue from tumble(source_mv_stream, t, 2s) group by i, window_end) select source_mv_versioned_kv.id as customerId, results.timestamp as timestamp, results.recordValue as recordValue, source_mv_versioned_kv.value as value from results inner join source_mv_versioned_kv on i = id settings max_threads=1, max_insert_threads=1"},
                        {"client":"python", "query_type": "table", "depends_on_stream":"target_mv_stream", "exist":"mv_with_target_stream", "exist_wait":2, "wait":1, "query":"create materialized view mv_with_target_stream into target_mv_stream as with results as (select i, format_datetime(window_end, '%Y-%m-%d %H:%i:%S', 'UTC') AS timestamp, to_string(max(v)) AS recordValue from tumble(source_mv_stream, t, 2s) group by i, window_end) select source_mv_versioned_kv.id as customerId, results.timestamp as timestamp, results.recordValue as recordValue, source_mv_versioned_kv.value as value from results inner join source_mv_versioned_kv on i = id settings max_threads=1, max_insert_threads=1"},
                        {"client":"python", "query_type": "stream", "query_id":"2400", "terminate": "manual", "wait":1, "query":"select (* except _tp_time) from mv_with_inner_stream union select (* except _tp_time) from mv_with_target_stream"},
                        {"client":"python", "query_type": "table", "wait":1, "query":"insert into source_mv_versioned_kv(id, value) values(1, 'test')"},
                        {"client":"python", "query_type": "table", "wait":1, "query":"insert into source_mv_stream(i, v, t) values(1, 't1', '2022-10-1 00:00:00')(2, 't2', '2022-10-1 00:00:01') (3, 't3', '2022-10-1 00:00:03')"},
                        {"client":"python", "query_type": "table", "wait":1, "query":"insert into source_mv_versioned_kv(id, value) values(1, 'test2')(2, 'test3')"},
                        {"client":"python", "query_type": "table", "kill":"2400", "kill_wait":3, "query":"insert into source_mv_stream(i, v, t) values(1, 't11', '2022-10-1 00:00:03')(2, 't22', '2022-10-1 00:00:03') (3, 't33', '2022-10-1 00:00:04')"}
                    ]
                },
                {
                    "statements": [
                        {"client":"python", "query_type": "table", "query":"drop view if exists mv_with_inner_stream"},
                        {"client":"python", "query_type": "table", "query":"drop view if exists mv_with_target_stream"}
                    ]
                }
            ],
            "expected_results": [
                {
                    "query_id":"2400", 
                    "expected_results":[
                        [1, "2022-10-01 00:00:02", "t1", "test"],
                        [1, "2022-10-01 00:00:02", "t1", "test"],
                        [1, "2022-10-01 00:00:04", "t11", "test2"], [2, "2022-10-01 00:00:04", "t22", "test3"],
                        [1, "2022-10-01 00:00:04", "t11", "test2"], [2, "2022-10-01 00:00:04", "t22", "test3"]
                    ]
                }
            ]
        }
    ]
}
