{
    "test_suite_name": "stream_join_versioned_kv",
    "tag":"smoke",
    "test_suite_config":{
      "tests_2_run": {"ids_2_run": ["all"], "tags_2_run":[], "tags_2_skip":{"default":["todo", "to_support", "change", "bug", "sample"],"cluster": ["view", "cluster_table_bug"]}}
    },
    "comments": "Tests covering the stream join versioned_kv stream query smoke cases.",
    "tests": [
      {
          "id": 0,
          "tags": ["versioned_kv_stream"],
          "name": "single shard versioned_kv stream",
          "description": "single shard versioned_kv stream creation and query",
          "steps":[
              {
              "statements": [
                      {"client":"python", "query_type": "table", "wait":1, "query":"drop stream if exists test15_versioned_kv_stream"},
                      {"client":"python", "query_type": "table", "wait":1, "exist":"test15_versioned_kv_stream","exist_wait":1, "query":"create stream if not exists test15_versioned_kv_stream(i int, s string) primary key s settings mode='versioned_kv'"},
                      {"client":"python", "query_type": "table", "wait":1, "query": "insert into test15_versioned_kv_stream(i, s) values (1, 'a')"},
                      {"client":"python", "query_type": "table", "wait":1, "query": "insert into test15_versioned_kv_stream(i, s) values (2, 'b')"},
                      {"client":"python", "query_type": "table", "wait":1, "query": "insert into test15_versioned_kv_stream(i, s) values (2, 'a'), (3, 'b'), (4, 'c')"},
                      {"client":"python", "query_type": "stream", "query_id":"1500", "wait":3, "query":"select i, s from test15_versioned_kv_stream;"},
                      {"client":"python", "query_type": "table", "depends_on":1500, "kill":"1500", "kill_wait":3, "wait":2, "query": "insert into test15_versioned_kv_stream(i, s) values (5, 'd'), (6, 'c')"}
                  ]
              }
          ],
          "expected_results": [
              {
                  "query_id":"1500",
                  "expected_results":[
                      [2, "a"], [3, "b"], [4, "c"], [5, "d"], [6, "c"]
                  ]
              }
          ]
      },
      {
        "id": 1,
        "tags": ["changelog_stream"],
        "name": "single shard versioned_kv stream via rest",
        "description": "single shard versioned_kv stream creation via rest",
        "steps":[
          {
            "statements": [
              {"client":"python", "query_type": "table","wait":1, "query":"drop stream if exists test15_versioned_kv_stream_rest"},
              {"client":"rest", "query_type": "table", "wait": 2, "rest_type": "raw", "query_url":"/proton/v1/ddl/streams", "query_id": "1501","http_method": "POST",
                "data" : {"name": "test15_versioned_kv_stream_rest", "columns": [{"name": "i", "type": "int"}, {"name": "k", "type": "string"}], "mode": "changelog_kv", "primary_key": "k"}}
            ]
          }
        ],
        "expected_results": [
          {
            "query_id":"1501",
            "expected_results": {"request_id": "1501"}
          }
        ]
      },
      {
        "id": 2,
        "tags": ["stream_join_versioned_kv"],
        "name": "stream_inner_join_versioned_kv",
        "description": "stream to versioned_kv stream inner join",
        "steps":[
          {
            "statements": [
              {"client":"python", "query_type": "table","wait":1, "query":"drop stream if exists test15_vk_left_stream"},
              {"client":"python", "query_type": "table","wait":1, "query":"drop stream if exists test15_vk_right_stream "},
              {"client":"python", "query_type": "table", "wait":2,"exist":"test15_vk_left_stream","exist_wait":1, "query":"create stream if not exists test15_vk_left_stream (i int, s string)"},
              {"client":"python", "query_type": "table", "wait":2,"exist":"test15_vk_right_stream","exist_wait":1, "query":"create stream if not exists test15_vk_right_stream (ii int, ss string) primary key ss settings mode='versioned_kv'"},
              {"client":"python","query_id":"1502", "query_end_timer":10, "query_type": "stream", "query":"select i, ii, s from test15_vk_left_stream inner join test15_vk_right_stream on s=ss"},
              {"client":"python", "query_type": "table", "depends_on":"1502", "wait":4, "query": "insert into test15_vk_right_stream(ii, ss) values (1, 's1'), (2, 's1'), (3, 's3')"},
              {"client":"python", "query_type": "table", "wait":1, "query": "insert into test15_vk_left_stream(i, s) values (1, 's1'), (2, 's3')"},
              {"client":"python", "query_type": "table", "wait":1, "query": "insert into test15_vk_right_stream(ii, ss) values (4, 's1'), (5, 's3')"},
              {"client":"python", "query_type": "table", "wait":1, "query": "insert into test15_vk_left_stream(i, s) values (11, 's1'), (22, 's3')"}
            ]
          }
        ],
        "expected_results": [
          {
            "query_id":"1502",
            "expected_results":[
              [1, 2, "s1"], [2, 3, "s3"], [11, 4, "s1"], [22, 5, "s3"]
            ]
          }
        ]
      },
      {
        "id": 3,
        "tags": ["stream_join_versioned_kv"],
        "name": "stream_asof_inner_join_versioned_kv",
        "description": "stream to versioned_kv stream asof inner join",
        "steps":[
          {
            "statements": [
              {"client":"python", "query_type": "table","wait":1, "query":"drop stream if exists test15_vk_left_stream"},
              {"client":"python", "query_type": "table","wait":1, "query":"drop stream if exists test15_vk_right_stream "},
              {"client":"python", "query_type": "table", "wait":2,"exist":"test15_vk_left_stream","exist_wait":1, "query":"create stream if not exists test15_vk_left_stream (i int, s string)"},
              {"client":"python", "query_type": "table", "wait":2, "exist":"test15_vk_right_stream","exist_wait":1,"query":"create stream if not exists test15_vk_right_stream (ii int, ss string) primary key ss settings mode='versioned_kv'"},
              {"client":"python","query_id":"1503", "query_end_timer":10, "query_type": "stream", "query":"select i, ii, s from test15_vk_left_stream asof join test15_vk_right_stream on s=ss and i < ii settings keep_versions=2"},
              {"client":"python", "query_type": "table","depends_on":"1503", "wait":4, "query": "insert into test15_vk_right_stream(ii, ss) values (1, 's1'), (2, 's1'), (3, 's3')"},
              {"client":"python", "query_type": "table", "wait":1, "query": "insert into test15_vk_left_stream(i, s) values (0, 's1'), (2, 's3')"},
              {"client":"python", "query_type": "table", "wait":1, "query": "insert into test15_vk_right_stream(ii, ss) values (4, 's1'), (5, 's3')"},
              {"client":"python", "query_type": "table", "wait":1, "query": "insert into test15_vk_left_stream(i, s) values (0, 's1'), (4, 's3')"}
            ]
          }
        ],
        "expected_results": [
          {
            "query_id":"1503",
            "expected_results":[
              [0, 1, "s1"], [2, 3, "s3"], [0, 2, "s1"], [4, 5, "s3"]
            ]
          }
        ]
      },
      {
        "id": 4,
        "tags": ["versioned_kv_join_versioned_kv"],
        "name": "versioned_kv_inner_join_versioned_kv",
        "description": "version_kv to versioned_kv inner join",
        "steps":[
          {
            "statements": [
              {"client":"python", "query_type": "table","wait":1, "query":"drop stream if exists test15_vk_left_stream"},
              {"client":"python", "query_type": "table","wait":1, "query":"drop stream if exists test15_vk_right_stream"},
              {"client":"python", "query_type": "table", "wait":2,"exist":"test15_vk_left_stream","exist_wait":1, "query":"create stream if not exists test15_vk_left_stream (i int, s string) primary key s settings mode='versioned_kv'"},
              {"client":"python", "query_type": "table", "wait":2,"exist":"test15_vk_right_stream","exist_wait":1, "query":"create stream if not exists test15_vk_right_stream (ii int, ss string) primary key ss settings mode='versioned_kv'"},
              {"client":"python","query_id":"1504", "query_end_timer":10, "query_type": "stream", "query":"select i, ii, s, _tp_delta from test15_vk_left_stream join test15_vk_right_stream on s=ss"},
              {"client":"python", "query_type": "table","depends_on":"1504", "wait":4, "query": "insert into test15_vk_right_stream(ii, ss) values (1, 's1')"},
              {"client":"python", "query_type": "table", "wait":1, "query": "insert into test15_vk_left_stream(i, s) values (0, 's1')"},
              {"client":"python", "query_type": "table", "wait":1, "query": "insert into test15_vk_left_stream(i, s) values (2, 's1')"},
              {"client":"python", "query_type": "table","query_id":"input_1500", "wait":1, "query": "insert into test15_vk_right_stream(ii, ss) values (3, 's1')"},
              {"client":"python","query_id":"1504-1", "wait": 3,"depends_on_done":"input_1500", "query_type": "table", "query":"select i, s from table(test15_vk_left_stream) union select ii, ss from table(test15_vk_right_stream)"}
            ]
          }
        ],
        "expected_results": [
          {
            "query_id":"1504",
            "expected_results":[
              [0, 1, "s1", 1], [0, 1, "s1", -1], [2, 1, "s1", 1], [2, 1, "s1", -1], [2, 3, "s1", 1]
            ]
          },
          {
            "query_id":"1504-1",
            "expected_results":[
              [2, "s1"], [3, "s1"]
            ]
          }
        ]
      },
      {
        "id": 5,
        "tags": ["versioned_kv_join_versioned_kv"],
        "name": "versioned_kv_inner_join_versioned_kv_global_aggr",
        "description": "version_kv to versioned_kv inner join global aggregation",
        "steps":[
          {
            "statements": [
              {"client":"python", "query_type": "table","wait":1, "query":"drop stream if exists test15_vk_left_stream"},
              {"client":"python", "query_type": "table","wait":1, "query":"drop stream if exists test15_vk_right_stream "},
              {"client":"python", "query_type": "table", "wait":2,"exist":"test15_vk_left_stream","exist_wait":1, "query":"create stream if not exists test15_vk_left_stream (i int, s string) primary key s settings mode='versioned_kv'"},
              {"client":"python", "query_type": "table", "wait":2,"exist":"test15_vk_right_stream","exist_wait":1, "query":"create stream if not exists test15_vk_right_stream (ii int, ss string) primary key ss settings mode='versioned_kv'"},
              {"client":"python","query_id":"1505", "query_end_timer":10, "query_type": "stream", "query":"select sum(i + ii) as total from test15_vk_left_stream join test15_vk_right_stream on s=ss group by s emit periodic 2s"},
              {"client":"python", "query_type": "table","depends_on":"1505", "wait":4, "query": "insert into test15_vk_right_stream(ii, ss) values (1, 's1')"},
              {"client":"python", "query_type": "table","wait":1, "query": "insert into test15_vk_left_stream(i, s) values (3, 's1')"},
              {"client":"python", "query_type": "table", "wait":3, "query": "insert into test15_vk_left_stream(i, s) values (2, 's1')"},
              {"client":"python", "query_type": "table", "wait":3, "query": "insert into test15_vk_right_stream(ii, ss) values (4, 's1')"}
            ]
          }
        ],
        "expected_results": [
          {
            "query_id":"1505",
            "expected_results":[
              [4], [3], [6]
            ]
          }
        ]
      },
      {
          "id": 6,
          "tags": ["versioned_kv_aggr"],
          "name": "aggr_func_count_and_min_and_max_versioned_kv",
          "description": "aggregation function min and max versioned_kv",
          "steps":[
              {
                  "statements": [
                      {"client":"python", "query_type": "table", "query":"drop stream if exists test15_versioned_kv_stream"},
                      {"client":"python", "query_type": "table", "exist":"test15_versioned_kv_stream", "exist_wait":2, "wait":1, "query":"create stream if not exists test15_versioned_kv_stream(id int, val float) primary key id settings mode='versioned_kv'"},
                      {"client":"python", "query_type": "table", "wait":1, "query": "insert into test15_versioned_kv_stream(id, val) values (1, 1), (2, 2), (3, 6)"},
                      {"client":"python", "query_type": "stream", "query_id":"1506", "depends_on_stream":"test15_versioned_kv_stream", "wait":1, "terminate":"manual", "query":"select count(), min(val), max(val), sum(val), avg(val) from test15_versioned_kv_stream emit periodic 2s"},
                      {"client":"python", "query_type": "stream", "query_id":"1506-2", "depends_on_stream":"test15_versioned_kv_stream", "wait":1, "terminate":"manual", "query":"select count_if(val > 2), min_if(val, val > 2), max_if(val, val > 2), sum_if(val, val > 2), avg_if(val, val > 2) from test15_versioned_kv_stream emit periodic 2s"},
                      {"client":"python", "query_type": "table", "depends_on":"1506-2", "kill":"1506,1506-2", "kill_wait":3, "wait":2, "query": "insert into test15_versioned_kv_stream(id, val) values (1, 3), (3, 4)"}
                  ]
              }
          ],
          "expected_results": [
              {
                  "query_id":"1506",
                  "expected_results":[
                      ["3", "1.0", "6.0", "9", "3"],
                      ["3", "2.0", "4.0", "9", "3"]
                  ]
              },
              {
                "query_id":"1506-2",
                "expected_results":[
                    ["1", "6.0", "6.0", "6.0", "6.0"],
                    ["2", "3.0", "4.0", "7.0", "3.5"]
                ]
            }
          ]
      },
      {
          "id": 8,
          "tags": ["versioned_kv_aggr", "native_not_support", "bug"],
          "name": "aggr_func_median_and_quantile_versioned_kv",
          "description": "aggregation function sum and avg versioned_kv",
          "steps":[
              {
                  "statements": [
                      {"client":"python", "query_type": "table", "query":"drop stream if exists test15_versioned_kv_stream"},
                      {"client":"python", "query_type": "table", "exist":"test15_versioned_kv_stream", "exist_wait":2, "wait":1, "query":"create stream if not exists test15_versioned_kv_stream(id int, val float) primary key id settings mode='versioned_kv'"},
                      {"client":"python", "query_type": "table", "wait":1, "query": "insert into test15_versioned_kv_stream(id, val) values (1, 1), (2, 3), (3, 5)"},
                      {"client":"python", "query_type": "stream", "query_id":"1508", "depends_on_stream":"test15_versioned_kv_stream", "wait":1, "terminate":"manual", "query":"select median(val), quantile(val, 0.5) from test15_versioned_kv_stream emit periodic 1s"},
                      {"client":"python", "query_type": "table", "depends_on":"1508", "kill":"1508", "kill_wait":3, "wait":1, "query": "insert into test15_versioned_kv_stream(id, val) values (1, 2), (2, 4), (3, 6)"}
                  ]
              }
          ],
          "expected_results": [
              {
                  "query_id":"1508",
                  "expected_results":[
                      ["3.0", "3.0"],
                      ["4.0", "4.0"]
                  ]
              }
          ]
      },
      {
          "id": 9,
          "tags": ["versioned_kv_aggr"],
          "name": "aggr_func_min_k_max_k_versioned_kv",
          "description": "aggregation function min_k max_k versioned_kv",
          "steps":[
              {
                  "statements": [
                      {"client":"python", "query_type": "table", "query":"drop stream if exists test15_versioned_kv_stream"},
                      {"client":"python", "query_type": "table", "exist":"test15_versioned_kv_stream", "exist_wait":2, "wait":1, "query":"create stream if not exists test15_versioned_kv_stream(id int, val int) primary key id settings mode='versioned_kv'"},
                      {"client":"python", "query_type": "table", "wait":1, "query": "insert into test15_versioned_kv_stream(id, val) values (1, 1), (2, 3), (3, 5)"},
                      {"client":"python", "query_type": "stream", "query_id":"1509", "depends_on_stream":"test15_versioned_kv_stream", "wait":1, "terminate":"manual", "query":"select min_k(val, 3), max_k(val, 3), min_k(val, 2, id), max_k(val, 2, id) from test15_versioned_kv_stream emit periodic 1s"},
                      {"client":"python", "query_type": "table", "depends_on":"1509", "kill":"1509", "kill_wait":3, "wait":1, "query": "insert into test15_versioned_kv_stream(id, val) values (1, 6), (2, 4), (3, 2)"}
                  ]
              }
          ],
          "expected_results": [
              {
                  "query_id":"1509",
                  "expected_results":[
                      ["[1, 3, 5]", "[5, 3, 1]", "[(1, 1), (3, 2)]", "[(5, 3), (3, 2)]"],
                      ["[2, 4, 6]", "[6, 4, 2]", "[(2, 3), (4, 2)]", "[(6, 1), (4, 2)]"]
                  ]
              }
          ]
      },
      {
          "id": 10,
          "tags": ["versioned_kv_aggr"],
          "name": "aggr_func_versioned_kv_with_multiple_primary_keys",
          "description": "versioned_kv with multiple primary keys",
          "steps":[
              {
                  "statements": [
                      {"client":"python", "query_type": "table", "query":"drop stream if exists test15_versioned_kv_stream"},
                      {"client":"python", "query_type": "table", "exist":"test15_versioned_kv_stream", "exist_wait":2, "wait":1, "query":"create stream if not exists test15_versioned_kv_stream(id int, location string, val float) primary key (id, location) settings mode='versioned_kv'"},
                      {"client":"python", "query_type": "table", "wait":1, "query": "insert into test15_versioned_kv_stream(id, location, val) values (1, 'a1', 11), (2, 'b1', 22), (3, 'c1', 33)"},
                      {"client":"python", "query_type": "stream", "query_id":"1510", "depends_on_stream":"test15_versioned_kv_stream", "wait":1, "terminate":"manual", "query":"select count(id), min(val), max(val), sum(val), avg(val) from test15_versioned_kv_stream emit periodic 2s"},
                      {"client":"python", "query_type": "table", "depends_on":"1510", "kill":"1510", "kill_wait":3, "wait":2, "query": "insert into test15_versioned_kv_stream(id, location, val) values (1, 'a2', 1), (2, 'b1', 44), (3, 'c2', 55)"}
                  ]
              }
          ],
          "expected_results": [
              {
                  "query_id":"1510",
                  "expected_results":[
                      ["3","11", "33", "66", "22"],
                      ["5","1", "55", "144", "28.8"]
                  ]
              }
          ]
      },
      {
          "id": 11,
          "tags": ["versioned_kv_aggr", "native_not_support", "bug"],
          "name": "aggr_func_versioned_kv_with_multiple_primary_keys",
          "description": "versioned_kv with multiple primary keys",
          "steps":[
              {
                  "statements": [
                      {"client":"python", "query_type": "table", "query":"drop stream if exists test15_versioned_kv_stream"},
                      {"client":"python", "query_type": "table", "exist":"test15_versioned_kv_stream", "exist_wait":2, "wait":1, "query":"create stream if not exists test15_versioned_kv_stream(id int, location string, val float) primary key (id, location) settings mode='versioned_kv'"},
                      {"client":"python", "query_type": "table", "wait":1, "query": "insert into test15_versioned_kv_stream(id, location, val) values (1, 'a1', 11), (2, 'b1', 22), (3, 'c1', 33)"},
                      {"client":"python", "query_type": "stream", "query_id":"1511", "depends_on_stream":"test15_versioned_kv_stream", "wait":1, "terminate":"manual", "query":"select median(val), quantile(val, 0.5), top_k(id, 2), min_k(val, 2, id), max_k(val, 2, id) from test15_versioned_kv_stream emit periodic 2s"},
                      {"client":"python", "query_type": "table", "depends_on":"1511", "kill":"1511", "kill_wait":3, "wait":1, "query": "insert into test15_versioned_kv_stream(id, location, val) values (1, 'a2', 1), (2, 'b1', 44), (3, 'c2', 55)"}
                  ]
              }
          ],
          "expected_results": [
              {
                  "query_id":"1511",
                  "expected_results":[
                      ["22", "22", "[(1, 1), (2, 1)]", "[(11.0, 1), (22.0, 2)]", "[(33.0, 3), (22.0, 2)]"],
                      ["33", "33", "[(1, 2), (3, 2)]", "[(1.0, 1), (11.0, 1)]", "[(55.0, 3), (44.0, 2)]"]
                  ]
              }
          ]
      },
      {
          "id": 12,
          "tags": ["all_primary_keys_join"],
          "name": "append-only_join_versioned_kv",
          "description": "append-only join versioned_kv with all primary keys join",
          "steps":[
              {
                  "statements": [
                      {"client":"python", "query_type": "table", "query":"drop stream if exists test15_left_stream"},
                      {"client":"python", "query_type": "table", "query":"drop stream if exists test15_vk_right_stream"},
                      {"client":"python", "query_type": "table", "exist":"test15_left_stream", "exist_wait":2, "wait":1, "query":"create stream if not exists test15_left_stream (i1 int, i2 int, s string)"},
                      {"client":"python", "query_type": "table", "exist":"test15_vk_right_stream", "exist_wait":2, "wait":1, "query":"create stream if not exists test15_vk_right_stream (ii1 int, ii2 int, ss string) primary key (ii1, ii2) settings mode='versioned_kv'"},
                      {"client":"python", "query_type": "stream", "query_id":"1512", "wait":1, "terminate":"manual", "query":"select s, ss from test15_left_stream inner join test15_vk_right_stream on i1 = ii1 and i2 = ii2"},
                      {"client":"python", "query_type": "table", "depends_on":"1512", "wait":1, "query": "insert into test15_vk_right_stream(ii1, ii2, ss) values (1, 1, 'ss11')"},
                      {"client":"python", "query_type": "table", "wait":1, "query": "insert into test15_left_stream(i1, i2, s) values (1, 1, 's11')"},
                      {"client":"python", "query_type": "table", "wait":1, "query": "insert into test15_vk_right_stream(ii1, ii2, ss) values (1, 1, 'ss112')"},
                      {"client":"python", "query_type": "table", "wait":1, "query": "insert into test15_left_stream(i1, i2, s) values (1, 1, 's11')"},
                      {"client":"python", "query_type": "table", "wait":1, "query": "insert into test15_vk_right_stream(ii1, ii2, ss) values (1, 2, 'ss12')"},
                      {"client":"python", "query_type": "table", "kill":"1512", "kill_wait":3, "wait":1, "query": "insert into test15_left_stream(i1, i2, s) values (1, 2, 's12')"}
                  ]
              }
          ],
          "expected_results": [
              {
                  "query_id":"1512",
                  "expected_results":[
                      ["s11", "ss11"],
                      ["s11", "ss112"],
                      ["s12", "ss12"]
                  ]
              }
          ]
      },
      {
          "id": 13,
          "tags": ["all_primary_keys_join"],
          "name": "versioned_kv_join_versioned_kv",
          "description": "versioned_kv join versioned_kv with all primary keys join",
          "steps":[
              {
                  "statements": [
                      {"client":"python", "query_type": "table", "query":"drop stream if exists test15_vk_left_stream"},
                      {"client":"python", "query_type": "table", "query":"drop stream if exists test15_vk_right_stream"},
                      {"client":"python", "query_type": "table", "exist":"test15_vk_left_stream", "exist_wait":2, "wait":1, "query":"create stream if not exists test15_vk_left_stream (i1 int, i2 int, s string) primary key (i1, i2) settings mode='versioned_kv'"},
                      {"client":"python", "query_type": "table", "exist":"test15_vk_right_stream", "exist_wait":2, "wait":1, "query":"create stream if not exists test15_vk_right_stream (ii1 int, ii2 int, ss string) primary key (ii1, ii2) settings mode='versioned_kv'"},
                      {"client":"python", "query_type": "stream", "query_id":"1513", "wait":1, "terminate":"manual", "query":"select s, ss, _tp_delta from test15_vk_left_stream inner join test15_vk_right_stream on i1 = ii1 and i2 = ii2"},
                      {"client":"python", "query_type": "table", "depends_on":"1513", "wait":1, "query": "insert into test15_vk_left_stream(i1, i2, s) values (1, 1, 's11')"},
                      {"client":"python", "query_type": "table", "wait":1, "query": "insert into test15_vk_right_stream(ii1, ii2, ss) values (1, 1, 'ss11')"},
                      {"client":"python", "query_type": "table", "wait":1, "query": "insert into test15_vk_left_stream(i1, i2, s) values (1, 1, 's112')"},
                      {"client":"python", "query_type": "table", "wait":1, "query": "insert into test15_vk_left_stream(i1, i2, s) values (1, 2, 's12')"},
                      {"client":"python", "query_type": "table", "wait":1, "query": "insert into test15_vk_right_stream(ii1, ii2, ss) values (1, 1, 'ss112')"},
                      {"client":"python", "query_type": "table", "kill":"1513", "kill_wait":3, "wait":1, "query": "insert into test15_vk_right_stream(ii1, ii2, ss) values (1, 2, 'ss12')"}
                  ]
              }
          ],
          "expected_results": [
              {
                  "query_id":"1513",
                  "expected_results":[
                      ["s11", "ss11", 1],
                      ["s11", "ss11", -1],
                      ["s112", "ss11", 1],
                      ["s112", "ss11", -1],
                      ["s112", "ss112", 1],
                      ["s12", "ss12", 1]
                  ]
              }
          ]
      },
      {
          "id": 14,
          "tags": ["partial_primary_key_join"],
          "name": "append-only_join_versioned_kv",
          "description": "append-only join versioned_kv with partial primary key join",
          "steps":[
              {
                  "statements": [
                      {"client":"python", "query_type": "table", "query":"drop stream if exists test15_left_stream"},
                      {"client":"python", "query_type": "table", "query":"drop stream if exists test15_vk_right_stream"},
                      {"client":"python", "query_type": "table", "exist":"test15_left_stream", "exist_wait":2, "wait":1, "query":"create stream if not exists test15_left_stream (i1 int, i2 int, s string)"},
                      {"client":"python", "query_type": "table", "exist":"test15_vk_right_stream", "exist_wait":2, "wait":1, "query":"create stream if not exists test15_vk_right_stream (ii1 int, ii2 int, ss string) primary key (ii1, ii2) settings mode='versioned_kv'"},
                      {"client":"python", "query_type": "stream", "query_id":"1514", "wait":1, "terminate":"manual", "query":"select s, ss, ii2 from test15_left_stream inner join test15_vk_right_stream on i1 = ii1"},
                      {"client":"python", "query_type": "table", "depends_on":"1514", "wait":1, "query": "insert into test15_vk_right_stream(ii1, ii2, ss) values (1, 1, 'ss11')"},
                      {"client":"python", "query_type": "table", "wait":1, "query": "insert into test15_left_stream(i1, i2, s) values (1, 1, 's11')"},
                      {"client":"python", "query_type": "table", "wait":1, "query": "insert into test15_vk_right_stream(ii1, ii2, ss) values (1, 1, 'ss112')"},
                      {"client":"python", "query_type": "table", "wait":1, "query": "insert into test15_vk_right_stream(ii1, ii2, ss) values (1, 2, 'ss12')"},
                      {"client":"python", "query_type": "table", "kill":"1514", "kill_wait":3, "wait":1, "query": "insert into test15_left_stream(i1, i2, s) values (1, 2, 's12')"}
                  ]
              }
          ],
          "expected_results": [
              {
                  "query_id":"1514",
                  "expected_results":[
                      ["s11", "ss11", 1],
                      ["s12", "ss112", 1],
                      ["s12", "ss12", 2]
                  ]
              }
          ]
      },
      {
          "id": 15,
          "tags": ["partial_primary_key_join"],
          "name": "versioned_kv_join_versioned_kv",
          "description": "versioned_kv join versioned_kv with partial primary key join",
          "steps":[
              {
                  "statements": [
                      {"client":"python", "query_type": "table", "query":"drop stream if exists test15_vk_left_stream"},
                      {"client":"python", "query_type": "table", "query":"drop stream if exists test15_vk_right_stream"},
                      {"client":"python", "query_type": "table", "exist":"test15_vk_left_stream", "exist_wait":2, "wait":1, "query":"create stream if not exists test15_vk_left_stream (i1 int, i2 int, s string) primary key (i1, i2) settings mode='versioned_kv'"},
                      {"client":"python", "query_type": "table", "exist":"test15_vk_right_stream", "exist_wait":2, "wait":1, "query":"create stream if not exists test15_vk_right_stream (ii1 int, ii2 int, ss string) primary key (ii1, ii2) settings mode='versioned_kv'"},
                      {"client":"python", "query_type": "stream", "query_id":"1515", "wait":1, "terminate":"manual", "query":"select s, ss, _tp_delta from test15_vk_left_stream inner join test15_vk_right_stream on i1 = ii1"},
                      {"client":"python", "query_type": "table", "depends_on":"1515", "wait":1, "query": "insert into test15_vk_left_stream(i1, i2, s) values (1, 1, 's11')"},
                      {"client":"python", "query_type": "table", "wait":1, "query": "insert into test15_vk_right_stream(ii1, ii2, ss) values (1, 1, 'ss11')"},
                      {"client":"python", "query_type": "table", "wait":1, "query": "insert into test15_vk_left_stream(i1, i2, s) values (1, 1, 's112')"},
                      {"client":"python", "query_type": "table", "kill":"1515", "kill_wait":3, "wait":1, "query": "insert into test15_vk_left_stream(i1, i2, s) values (1, 2, 's12')"}
                  ]
              }
          ],
          "expected_results": [
              {
                  "query_id":"1515",
                  "expected_results":[
                      ["s11", "ss11", 1],
                      ["s11", "ss11", -1],
                      ["s112", "ss11", 1],
                      ["s12", "ss11", 1]
                  ]
              }
          ]
      },
      {
          "id": 16,
          "tags": ["no_primary_key_join"],
          "name": "append-only_join_versioned_kv",
          "description": "append-only join versioned_kv with no primary key join",
          "steps":[
              {
                  "statements": [
                      {"client":"python", "query_type": "table", "query":"drop stream if exists test15_left_stream"},
                      {"client":"python", "query_type": "table", "query":"drop stream if exists test15_vk_right_stream"},
                      {"client":"python", "query_type": "table", "exist":"test15_left_stream", "exist_wait":2, "wait":1, "query":"create stream if not exists test15_left_stream (i1 int, i2 int, s string)"},
                      {"client":"python", "query_type": "table", "exist":"test15_vk_right_stream", "exist_wait":2, "wait":1, "query":"create stream if not exists test15_vk_right_stream (ii1 int, ii2 int, ss string) primary key (ii1, ii2) settings mode='versioned_kv'"},
                      {"client":"python", "query_type": "stream", "query_id":"1516", "wait":1, "terminate":"manual", "query":"select i1, i2, ii1, ii2, s, ss from test15_left_stream inner join test15_vk_right_stream on s = ss"},
                      {"client":"python", "query_type": "table", "depends_on":"1516", "wait":1, "query": "insert into test15_vk_right_stream(ii1, ii2, ss) values (1, 1, 's1')"},
                      {"client":"python", "query_type": "table", "wait":1, "query": "insert into test15_left_stream(i1, i2, s) values (1, 1, 's1')"},
                      {"client":"python", "query_type": "table", "wait":1, "query": "insert into test15_vk_right_stream(ii1, ii2, ss) values (1, 1, 's2')"},
                      {"client":"python", "query_type": "table", "wait":1, "query": "insert into test15_vk_right_stream(ii1, ii2, ss) values (1, 2, 's1')"},
                      {"client":"python", "query_type": "table", "kill":"1516", "kill_wait":3, "wait":1, "query": "insert into test15_left_stream(i1, i2, s) values (1, 2, 's1')"}
                  ]
              }
          ],
          "expected_results": [
              {
                  "query_id":"1516",
                  "expected_results":[
                      [1, 1, 1, 1, "s1", "s1"],
                      [1, 2, 1, 2, "s1", "s1"]
                  ]
              }
          ]
      },
      {
        "id": 17,
        "tags": ["no_primary_key_join"],
        "name": "append-only_join_versioned_kv",
        "description": "append-only join versioned_kv with no primary key join",
        "steps":[
          {
            "statements": [
              {"client":"python", "query_type": "table", "query":"drop stream if exists test15_left_stream"},
              {"client":"python", "query_type": "table", "query":"drop stream if exists test15_vk_right_stream"},
              {"client":"python", "query_type": "table", "exist":"test15_left_stream", "exist_wait":2, "wait":1, "query":"create stream if not exists test15_left_stream (i1 int, i2 int, s string)"},
              {"client":"python", "query_type": "table", "exist":"test15_vk_right_stream", "exist_wait":2, "wait":1, "query":"create stream if not exists test15_vk_right_stream (ii1 int, ii2 int, ss string) primary key (ii1, ii2) settings mode='versioned_kv'"},
              {"client":"python", "query_type": "stream", "query_id":"1517", "wait":1, "terminate":"manual", "query":"select i1, i2, ii1, ii2, s, ss from test15_left_stream inner join test15_vk_right_stream on s = ss"},
              {"client":"python", "query_type": "table", "depends_on":"1517", "wait":1, "query": "insert into test15_vk_right_stream(ii1, ii2, ss) values (1, 1, 's1')"},
              {"client":"python", "query_type": "table", "wait":1, "query": "insert into test15_left_stream(i1, i2, s) values (1, 1, 's1')"},
              {"client":"python", "query_type": "table", "wait":1, "query": "insert into test15_vk_right_stream(ii1, ii2, ss) values (1, 1, 's2')"},
              {"client":"python", "query_type": "table", "wait":1, "query": "insert into test15_vk_right_stream(ii1, ii2, ss) values (1, 2, 's1'), (1, 3, 's1')"},
              {"client":"python", "query_type": "table", "kill":"1517", "kill_wait":3, "wait":1, "query": "insert into test15_left_stream(i1, i2, s) values (1, 2, 's1')"}
            ]
          }
        ],
        "expected_results": [
          {
            "query_id":"1517",
            "expected_results":[
              [1, 1, 1, 1, "s1", "s1"],
              [1, 2, 1, 2, "s1", "s1"],
              [1, 2, 1, 3, "s1", "s1"]
            ]
          }
        ]
      },
      {
          "id": 18,
          "tags": ["no_primary_key_join"],
          "name": "versioned_kv_join_versioned_kv",
          "description": "versioned_kv join versioned_kv with no primary key join",
          "steps":[
              {
                  "statements": [
                      {"client":"python", "query_type": "table", "query":"drop stream if exists vk_left_stream"},
                      {"client":"python", "query_type": "table", "query":"drop stream if exists test15_vk_right_stream"},
                      {"client":"python", "query_type": "table", "exist":"vk_left_stream", "exist_wait":2, "wait":1, "query":"create stream if not exists vk_left_stream (i1 int, i2 int, s string) primary key (i1, i2) settings mode='versioned_kv'"},
                      {"client":"python", "query_type": "table", "exist":"test15_vk_right_stream", "exist_wait":2, "wait":1, "query":"create stream if not exists test15_vk_right_stream (ii1 int, ii2 int, ss string) primary key (ii1, ii2) settings mode='versioned_kv'"},
                      {"client":"python", "query_type": "stream", "query_id":"1518", "wait":1, "terminate":"manual", "query":"select i1, i2, ii1, ii2, s, ss, _tp_delta from vk_left_stream inner join test15_vk_right_stream on s = ss"},
                      {"client":"python", "query_type": "table", "depends_on":"1518", "wait":1, "query": "insert into vk_left_stream(i1, i2, s) values (1, 1, 's1')"},
                      {"client":"python", "query_type": "table", "wait":1, "query": "insert into test15_vk_right_stream(ii1, ii2, ss) values (1, 1, 's1')"},
                      {"client":"python", "query_type": "table", "wait":1, "query": "insert into vk_left_stream(i1, i2, s) values (1, 1, 's2')"},
                      {"client":"python", "query_type": "table", "kill":"1518", "kill_wait":3, "wait":1, "query": "insert into vk_left_stream(i1, i2, s) values (1, 2, 's1')"}
                  ]
              }
          ],
          "expected_results": [
              {
                  "query_id":"1518",
                  "expected_results":[
                      [1, 1, 1, 1, "s1", "s1", 1],
                      [1, 1, 1, 1, "s1", "s1", -1],
                      [1, 2, 1, 1, "s1", "s1", 1]
                  ]
              }
          ]
      },
      {
          "id": 19,
          "tags": ["multiple_inner_joins"],
          "name": "versioned_kv_multiple_inner_joins_versioned_kv",
          "description": "versioned_kv multiple_inner_joins versioned_kv",
          "steps":[
              {
                  "statements": [
                    {"client":"python", "query_type": "table", "wait":1, "query":"drop stream if exists test15_stream1;"},
                    {"client":"python", "query_type": "table", "wait":1, "query":"drop stream if exists test15_stream2;"},
                    {"client":"python", "query_type": "table", "wait":1, "query":"drop stream if exists test15_stream3;"},
                    {"client":"python", "query_type": "table", "exist":"test15_stream1", "exist_wait":2, "wait":1, "query":"create stream if not exists test15_stream1 (i int, k1 int, k2 string) primary key (k1, k2) settings mode='versioned_kv';"},
                    {"client":"python", "query_type": "table", "exist":"test15_stream2", "exist_wait":2, "wait":1, "query":"create stream if not exists test15_stream2 (j int, kk1 int, kk2 string) primary key (kk1, kk2) settings mode='versioned_kv';"},
                    {"client":"python", "query_type": "table", "exist":"test15_stream3", "exist_wait":2, "wait":1, "query":"create stream if not exists test15_stream3 (k int, kkk1 int, kkk2 string) primary key (kkk1, kkk2) settings mode='versioned_kv';"},
                    {"client":"python", "query_type": "stream", "query_id":"1519", "wait":1, "query": "select a.i, a.k1, a.k2, b.j, b.kk1, b.kk2, c.k, c.kkk1, c.kkk2, _tp_delta from test15_stream1 as a inner all join test15_stream2 as b on a.k1 = b.kk1 and a.k2 = b.kk2 inner all join test15_stream3 as c on b.kk1 = c.kkk1 and a.kk2 = c.kkk2;"},
                    {"client":"python", "query_type": "table", "depends_on":"1519", "wait":1, "query": "insert into test15_stream3(k, kkk1, kkk2) values (3, 1, 'k'); "},
                    {"client":"python", "query_type": "table", "wait":1, "query": "insert into test15_stream2(j, kk1, kk2) values (2, 1, 'k'); "},
                    {"client":"python", "query_type": "table", "wait":1, "query": "insert into test15_stream1(i, k1, k2) values (1, 1, 'k'); "},
                    {"client":"python", "query_type": "table", "wait":1, "query": "insert into test15_stream2(j, kk1, kk2) values (4, 1, 'k'); "},
                    {"client":"python", "query_type": "table", "kill":"1519", "kill_wait":3, "wait":1, "query": "insert into test15_stream1(i, k1, k2) values (5, 1, 'k'); "}
                  ]
              }
          ],
          "expected_results": [
              {
                  "query_id":"1519",
                  "expected_results":[
                        [1, 1, "k", 2, 1, "k", 3, 1, "k", 1],
                        [1, 1, "k", 2, 1, "k", 3, 1, "k", -1],
                        [1, 1, "k", 4, 1, "k", 3, 1, "k", 1],
                        [1, 1, "k", 4, 1, "k", 3, 1, "k", -1],
                        [5, 1, "k", 4, 1, "k", 3, 1, "k", 1]
                  ]
              }
          ]
      }
    ]
  }