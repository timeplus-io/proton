{
    "test_suite_name": "random_stream",
    "tag": "smoke",
  
    "test_suite_config":{
      "tests_2_run": {"ids_2_run": ["all"], "tags_2_run":[], "tags_2_skip":{"default":["todo", "to_support", "change", "bug", "sample", "unstable"],"cluster": ["view", "cluster_table_bug"]}}
    },
    "comments": "Tests covering random stream.",
    "tests": [
        {
            "id": 0,
            "tags": ["create random"],
            "name": "#1410",
            "description": "create random stream with default generating function, BUG :for query like with cte as (select * from test22_create_random limit 1000) select count(*) from cte where id <4it produces no output because the lower query ends when reaches limit while upper query hasnt emitted yet;",
            "steps":[
              {
                "statements": [
                  {"client":"python", "query_type": "table", "wait":2, "query": "drop stream if exists test22_create_random"},
                  {"client":"python", "query_type": "table", "wait":2, "query": "create random stream test22_create_random(id int default rand()%4)"},
                  {"client":"python", "query_type": "table", "query_id":"2200", "wait":2, "query":"with cte as (select * from test22_create_random ) select max(id) from cte where id<4 limit 1 settings max_threads=1"},
                  {"client":"python", "query_type": "table", "query_id":"2201", "wait":2, "query":"with cte as (select id from tumble(test22_create_random,2s) group by id,window_start limit 10) select max(id) from cte limit 1 settings max_threads=1"},
                  {"client":"python", "query_type": "table", "query_id":"2202", "wait":2, "query":"select count(distinct id) from test22_create_random limit 1 settings max_threads=1"},
                  {"client":"python", "query_type": "table", "query_id":"2203", "wait":2, "query":"select count(distinct id) from tumble(test22_create_random,2s) group by window_start limit 1 settings max_threads=1"},
                  {"client":"python", "query_type": "table", "query_id":"2204", "wait":2, "query":"with cte as (select * from table(test22_create_random) limit 1000) select count(*) from cte where id<4"}
                ]
              }
            ],
            "expected_results": [
              {"query_id":"2200", "expected_results":[
                ["3"]
              ]},
              {"query_id":"2201", "expected_results":[
                ["3"]
              ]},
              {"query_id":"2202", "expected_results":[
                ["4"]
              ]},
              {"query_id":"2203", "expected_results":[
                ["4"]
              ]},
              {"query_id":"2204", "expected_results":[
                ["1000"]
              ]}
            ]
          },
          {
            "id": 1,
            "tags": ["create random", "unstable"],
            "name": "#1410",
            "description": "create random stream with default generating function, limit the amount of data produced per window;",
            "steps":[
              {
                "statements": [
                  {"client":"python", "query_type": "table", "wait":2, "query": "drop stream if exists test22_create_random"},
                  {"client":"python", "query_type": "table", "wait":2, "query": "create random stream test22_create_random(id int default rand()%4) engine Random() settings eps=1000"},
                  {"client":"python", "query_type": "table", "query_id":"2205", "wait":2, "query":"select cnt - lag(cnt, 1) as diff from (select count(1) as cnt from test22_create_random limit 2 emit periodic 1s) offset 1 settings max_threads=8"},
                  {"client":"python", "query_type": "table", "query_id":"2206", "wait":2, "query":"select cnt - lag(cnt, 1) as diff from (select count(1) as cnt from test22_create_random limit 2 emit periodic 2s) offset 1 settings max_threads=8"}
                ]
              }
            ],
            "expected_results": [
              {"query_id":"2205", "expected_results":[
                ["1000"]
              ]},
              {"query_id":"2206", "expected_results":[
                ["2000"]
              ]}
            ]
          },
          {
            "id": 2,
            "tags": ["random_in_type"],
            "name": "#2248",
            "description": "create random stream with random_in_type function",
            "steps":[
              {
                "statements": [
                  {"client":"python", "query_type": "table", "wait":2, "query": "drop stream if exists test22_create_random"},
                  {"client":"python", "query_type": "table", "wait":2, "query": "create random stream test22_create_random(id int8 default random_in_type('int8'))"},
                  {"client":"python", "query_type": "table", "query_id":"2207", "wait":2, "query":"select id >= 0 and id < 256 from test22_create_random limit 5"}
                  ]
              }
            ],
            "expected_results": [
              {"query_id":"2207", "expected_results":[
                ["True"], ["True"], ["True"], ["True"], ["True"]
              ]}
            ]
          },
          {
            "id": 3,
            "tags": ["random_in_type"],
            "name": "#2248",
            "description": "create random stream with random_in_type function",
            "steps":[
              {
                "statements": [
                  {"client":"python", "query_type": "table", "wait":2, "query": "drop stream if exists test22_create_random"},
                  {"client":"python", "query_type": "table", "wait":2, "query": "create random stream test22_create_random(id string default random_in_type('string'))"},
                  {"client":"python", "query_type": "table", "query_id":"2208", "wait":2, "query":"select id from test22_create_random limit 5"}
                  ]
              }
            ],
            "expected_results": [
              {"query_id":"2208", "expected_results":[
                ["any_value"], ["any_value"], ["any_value"], ["any_value"], ["any_value"]
              ]}
            ]
          },
          {
            "id": 4,
            "tags": ["random_in_type"],
            "name": "#2248",
            "description": "create random stream with random_in_type function",
            "steps":[
              {
                "statements": [
                  {"client":"python", "query_type": "table", "wait":2, "query": "drop stream if exists test22_create_random"},
                  {"client":"python", "query_type": "table", "wait":2, "query": "create random stream test22_create_random(id decimal(9,4) default random_in_type('decimal(9,4)'))"},
                  {"client":"python", "query_type": "table", "query_id":"2209", "wait":2, "query":"select id from test22_create_random limit 5"}
                  ]
              }
            ],
            "expected_results": [
              {"query_id":"2209", "expected_results":[
                ["any_value"], ["any_value"], ["any_value"], ["any_value"], ["any_value"]
              ]}
            ]
          },
          {
            "id": 5,
            "tags": ["random_in_type"],
            "name": "#2248",
            "description": "create random stream with random_in_type function",
            "steps":[
              {
                "statements": [
                  {"client":"python", "query_type": "table", "wait":2, "query": "drop stream if exists test22_create_random"},
                  {"client":"python", "query_type": "table", "wait":2, "query": "create random stream test22_create_random(id uint8 default random_in_type('uint8',x->to_uint8(x+10)))"},
                  {"client":"python", "query_type": "table", "query_id":"2211", "wait":2, "query":"select id >= 10 from test22_create_random limit 5"}
                  ]
              }
            ],
            "expected_results": [
              {"query_id":"2211", "expected_results":[
                ["True"], ["True"], ["True"], ["True"], ["True"]
              ]}
            ]
          },
          {
            "id": 6,
            "tags": ["random_in_type"],
            "name": "#2248",
            "description": "create random stream with random_in_type function",
            "steps":[
              {
                "statements": [
                  {"client":"python", "query_type": "table", "wait":2, "query": "drop stream if exists test22_create_random"},
                  {"client":"python", "query_type": "table", "wait":2, "query": "create random stream test22_create_random(id int8 default random_in_type('int8',5))"},
                  {"client":"python", "query_type": "table", "query_id":"2212", "wait":2, "query":"select count(distinct id) from test22_create_random limit 1"}
                  ]
              }
            ],
            "expected_results": [
              {"query_id":"2212", "expected_results":[
                ["5"]
              ]}
            ]
          },
          {
            "id": 7,
            "tags": ["random_in_type"],
            "name": "#2248",
            "description": "create random stream with random_in_type function",
            "steps":[
              {
                "statements": [
                  {"client":"python", "query_type": "table", "wait":2, "query": "drop stream if exists test22_create_random"},
                  {"client":"python", "query_type": "table", "wait":2, "query": "create random stream test22_create_random(id uint8 default random_in_type('uint8',x->to_uint8(x+10),5))"},
                  {"client":"python", "query_type": "table", "query_id":"2213", "wait":2, "query":"select id >= 10 and id < 15 from test22_create_random limit 10"}
                  ]
              }
            ],
            "expected_results": [
              {"query_id":"2213", "expected_results":[
                ["True"], ["True"], ["True"], ["True"], ["True"], ["True"], ["True"], ["True"], ["True"], ["True"]
              ]}
            ]
          },
          {
            "id": 8,
            "tags": ["random_in_type"],
            "name": "#2248",
            "description": "create random stream with random_in_type function",
            "steps":[
              {
                "statements": [
                  {"client":"python", "query_type": "table", "wait":2, "query": "drop stream if exists test22_create_random"},
                  {"client":"python", "query_type": "table", "wait":2, "query": "create random stream test22_create_random(id uint8 default random_in_type('uint8',5,x->to_uint8(x+10)))"},
                  {"client":"python", "query_type": "table", "query_id":"2214", "wait":2, "query":"select id >= 10 and id < 15 from test22_create_random limit 10"}
                  ]
              }
            ],
            "expected_results": [
              {"query_id":"2214", "expected_results":[
                ["True"], ["True"], ["True"], ["True"], ["True"], ["True"], ["True"], ["True"], ["True"], ["True"]
              ]}
            ]
          },
          {
            "id": 9,
            "tags": ["create random", "unstable"],
            "name": "test random stream generating function",
            "description": "create random stream with default generating function, limit the amount of data produced per window, eps > the number of threads",
            "steps":[
              {
                "statements": [
                  {"client":"python", "query_type": "table", "wait":2, "query": "drop stream if exists test22_create_random"},
                  {"client":"python", "query_type": "table", "wait":2, "query": "create random stream test22_create_random(id int default rand()%4) engine Random() settings eps=10"},
                  {"client":"python", "query_type": "table", "query_id":"2215", "wait":2, "query":"select cnt - lag(cnt, 1) as diff from (select count(1) as cnt from test22_create_random limit 2 emit periodic 1s) offset 1 settings max_threads=12"},
                  {"client":"python", "query_type": "table", "query_id":"2216", "wait":2, "query":"select cnt - lag(cnt, 1) as diff from (select count(1) as cnt from test22_create_random limit 2 emit periodic 2s) offset 1 settings max_threads=12"}
                ]
              }
            ],
            "expected_results": [
              {"query_id":"2215", "expected_results":[
                ["10"]
              ]},
              {"query_id":"2216", "expected_results":[
                ["20"]
              ]}
            ]
          },
          {
            "id": 10,
            "tags": ["create random", "unstable"],
            "name": "test random stream generating function",
            "description": "create random stream with default generating function, limit the amount of data produced per window, eps > the number of threads",
            "steps":[
              {
                "statements": [
                  {"client":"python", "query_type": "table", "wait":2, "query": "drop stream if exists test22_create_random"},
                  {"client":"python", "query_type": "table", "wait":2, "query": "create random stream test22_create_random(id int default rand()%4) engine Random() settings eps=10"},
                  {"client":"python", "query_type": "table", "query_id":"2217", "wait":2, "query":"select cnt - lag(cnt, 1) as diff from (select count(1) as cnt from test22_create_random limit 2 emit periodic 1s) offset 1 settings max_threads=10"},
                  {"client":"python", "query_type": "table", "query_id":"2218", "wait":2, "query":"select cnt - lag(cnt, 1) as diff from (select count(1) as cnt from test22_create_random limit 2 emit periodic 2s) offset 1 settings max_threads=10"}
                ]
              }
            ],
            "expected_results": [
              {"query_id":"2217", "expected_results":[
                ["10"]
              ]},
              {"query_id":"2218", "expected_results":[
                ["20"]
              ]}
            ]
          },
          {
            "id": 11,
            "tags": ["create random", "unstable"],
            "name": "test random stream generating function",
            "description": "create random stream with default generating function, limit the amount of data produced per window, set interval_time, check the the number of data produced per interval_time is correct;",
            "steps":[
              {
                "statements": [
                  {"client":"python", "query_type": "table", "wait":2, "query": "drop stream if exists test22_create_random"},
                  {"client":"python", "query_type": "table", "wait":2, "query": "create random stream test22_create_random(id int default rand()%4) engine Random() settings eps=1000, interval_time=100"},
                  {"client":"python", "query_type": "table", "query_id":"2219", "wait":2, "query":"select cnt - lag(cnt, 1) as diff from (select count(1) as cnt from test22_create_random limit 2 emit periodic 100ms) offset 1 settings max_threads=10"}
                ]
              }
            ],
            "expected_results": [
              {"query_id":"2219", "expected_results":[
                ["100"]
              ]}
            ]
          },
          {
            "id": 12,
            "tags": ["create random", "unstable"],
            "name": "test random stream generating function",
            "description": "create random stream with default generating function, limit the amount of data produced per window, set interval_time, cannot be diveded by 1000ms, check the the number of data produced per second is correct;",
            "steps":[
              {
                "statements": [
                  {"client":"python", "query_type": "table", "wait":2, "query": "drop stream if exists test22_create_random"},
                  {"client":"python", "query_type": "table", "wait":2, "query": "create random stream test22_create_random(id int default rand()%4) engine Random() settings eps=1000, interval_time=80"},
                  {"client":"python", "query_type": "table", "query_id":"2220", "wait":2, "query":"select cnt - lag(cnt, 1) as diff from (select count(1) as cnt from test22_create_random limit 2 emit periodic 1s) offset 1 settings max_threads=10"}
                ]
              }
            ],
            "expected_results": [
              {"query_id":"2220", "expected_results":[
                ["1000"]
              ]}
            ]
          },
          {
            "id": 13,
            "tags": ["create random"],
            "name": "test random stream generating function",
            "description": "create random stream with default generating function, limit the amount of data produced per window, set an invalid interval_time",
            "steps":[
              {
                "statements": [
                  {"client":"python", "query_type": "table", "wait":2, "query": "drop stream if exists test22_create_random"},
                  {"client":"python", "query_type": "table", "wait":2, "query": "create random stream test22_create_random(id int default rand()%4) engine Random() settings eps=1000, interval_time=15000"},
                  {"client":"python", "query_type": "table", "query_id":"2222", "wait":2, "query":"select cnt - lag(cnt, 1) as diff from (select count(1) as cnt from test22_create_random limit 2 emit periodic 1s) offset 1 settings max_threads=10"}
                ]
              }
            ],
            "expected_results": [
                {"query_id": "2222", "expected_results": "error_code:60"}
            ]
          },
          {
            "id": 14,
            "tags": ["create random"],
            "name": "test random stream generating function",
            "description": "create random stream with default generating function, limit the amount of data produced per window, set an invalid interval_time",
            "steps":[
              {
                "statements": [
                  {"client":"python", "query_type": "table", "wait":2, "query": "drop stream if exists test22_create_random"},
                  {"client":"python", "query_type": "table", "wait":2, "query": "create random stream test22_create_random(id int default rand()%4) engine Random() settings eps=1000, interval_time=0"},
                  {"client":"python", "query_type": "table", "query_id":"2223", "wait":2, "query":"select cnt - lag(cnt, 1) as diff from (select count(1) as cnt from test22_create_random limit 2 emit periodic 1s) offset 1 settings max_threads=10"}
                ]
              }
            ],
            "expected_results": [
                {"query_id": "2223", "expected_results": "error_code:60"}
            ]
          },
          {
            "id": 15,
            "tags": ["create random", "unstable"],
            "name": "test random stream generating function",
            "description": "create random stream with default generating function, limit the amount of data produced per window, set interval_time, cannot be diveded by 1000ms, check the the number of data produced per interval is correct;",
            "steps":[
              {
                "statements": [
                  {"client":"python", "query_type": "table", "wait":2, "query": "drop stream if exists test22_create_random"},
                  {"client":"python", "query_type": "table", "wait":2, "query": "create random stream test22_create_random(id int default rand()%4) engine Random() settings eps=1000, interval_time=80"},
                  {"client":"python", "query_type": "table", "query_id":"2224", "wait":2, "query":"select count(1) from tumble(test22_create_random, 80ms) group by window_start limit 5 settings max_threads=20"}
                ]
              }
            ],
            "expected_results": [
              {
                "query_id":"2224", "expected_results":[
                    ["120"], ["80"], ["80"], ["80"], ["80"]
                ]
              }
            ]
          },
          {
            "id": 16,
            "tags": ["random stream table query"],
            "name": "test random stream table query",
            "description": "test random stream table query",
            "steps":[
              {
                "statements": [
                  {"client":"python", "query_type": "table", "wait":2, "query": "drop stream if exists test22_create_random"},
                  {"client":"python", "query_type": "table", "wait":2, "query": "create random stream test22_create_random(id int default rand()%4) engine Random() settings eps=1000, shards=10"},
                  {"client":"python", "query_type": "table", "query_id":"2225", "wait":2, "query":"select count(1) from table(test22_create_random) settings max_events=1000"}
                ]
              }
            ],
            "expected_results": [
              {
                "query_id":"2225", "expected_results":[
                    ["1000"]
                ]
              }
            ]
          },
          {
            "id": 17,
            "tags": ["random stream table query"],
            "name": "test random stream table query, set max_events=1000",
            "description": "test random stream table query",
            "steps":[
              {
                "statements": [
                  {"client":"python", "query_type": "table", "wait":2, "query": "drop stream if exists test22_create_random"},
                  {"client":"python", "query_type": "table", "wait":2, "query": "create random stream test22_create_random(id int default rand()%4) engine Random() settings eps=100000"},
                  {"client":"python", "query_type": "table", "query_id":"2226", "wait":2, "query":"select count(1) from table(test22_create_random) settings max_events=1000"}
                ]
              }
            ],
            "expected_results": [
              {
                "query_id":"2226", "expected_results":[
                    ["1000"]
                ]
              }
            ]
          },
          {
            "id": 18,
            "tags": ["random stream table query"],
            "name": "test random stream stream query, set max_events=1000",
            "description": "test random stream stream query",
            "steps":[
              {
                "statements": [
                  {"client":"python", "query_type": "table", "wait":2, "query": "drop stream if exists test22_create_random"},
                  {"client":"python", "query_type": "table", "wait":2, "query": "create random stream test22_create_random(id int default rand()%4) engine Random() settings eps=1000"},
                  {"client":"python", "query_type": "stream", "terminate" : "auto", "query_end_timer" : 7, "query_id":"2227", "wait":2, "query":"select count(1) from table(test22_create_random) settings max_events=5000"}
                ]
              }
            ],
            "expected_results": [
              {
                "query_id":"2227", "expected_results":[
                    ["5000"]
                ]
              }
            ]
          },
          {
            "id": 19,
            "tags": ["create random", "unstable"],
            "name": "set eps in query time, test eps",
            "description": "set eps in query time, test eps",
            "steps":[
              {
                "statements": [
                  {"client":"python", "query_type": "table", "wait":2, "query": "drop stream if exists test22_create_random"},
                  {"client":"python", "query_type": "table", "wait":2, "query": "create random stream test22_create_random(id int default rand()%4) engine Random() settings eps=1000"},
                  {"client":"python", "query_type": "table", "query_id":"2228", "wait":2, "query":"select count(1) from tumble(test22_create_random, 1s) group by window_start limit 5 settings eps=10000"}
                ]
              }
            ],
            "expected_results": [
              {
                "query_id":"2228", "expected_results":[
                    ["10000"], ["10000"], ["10000"], ["10000"], ["10000"]
                ]
              }
            ]
          },
          {
            "id": 20,
            "tags": ["random_in_type"],
            "name": "random_in_type",
            "description": "Test random_in_type function, covering supported types",
            "steps":[
              {
                "statements": [
                  {"client":"python", "query_type": "table", "query_id":"2200", "query":"select random_in_type('bool'), random_in_type('int8'), random_in_type('int16'), random_in_type('int32'), random_in_type('int64'), random_in_type('int128'), random_in_type('int256'), random_in_type('uint8'), random_in_type('uint16'), random_in_type('uint32'), random_in_type('uint64'), random_in_type('uint128'), random_in_type('uint256')"},
                  {"client":"python", "query_type": "table", "query_id":"2201", "query":"select random_in_type('string'), random_in_type('fixed_string(3)'), random_in_type('date'), random_in_type('date32', 100), random_in_type('datetime32'), random_in_type('datetime64(3)', 100), random_in_type('float32'), random_in_type('float64'), random_in_type('decimal32(3)'), random_in_type('decimal64(3)'), random_in_type('decimal128(9)'), random_in_type('decimal256(9)'), random_in_type('uuid'), random_in_type('ipv4'), random_in_type('ipv6')"}
                  ]
              }
            ],
            "expected_results": [
              {"query_id":"2200", "expected_results":[
                ["any_value", "any_value", "any_value", "any_value", "any_value", "any_value", "any_value", "any_value", "any_value", "any_value", "any_value", "any_value", "any_value"]
              ]},
              {"query_id":"2201", "expected_results":[
                ["any_value", "any_value", "any_value", "any_value", "any_value", "any_value", "any_value", "any_value", "any_value", "any_value", "any_value", "any_value", "any_value", "any_value", "any_value"]
              ]}
            ]
        },
        {
            "id": 21,
            "tags": ["create random", "_tp_sn", "_tp_shard"],
            "name": "test random stream virtual column _tp_sn, _tp_shard and default function monotonic",
            "description": "test random stream virtual column _tp_sn, _tp_shard",
            "steps":[
              {
                "statements": [
                  {"client":"python", "query_type": "table", "wait":2, "query": "drop stream if exists test22_create_random"},
                  {"client":"python", "query_type": "table", "wait":2, "query": "create random stream test22_create_random(id int default monotonic(2), value int) engine Random() settings eps=1, shards=1"},
                  {"client":"python", "query_type": "table", "query_id":"2229", "wait":2, "query":"select id, _tp_sn, _tp_shard from test22_create_random limit 5"}
                ]
              }
            ],
            "expected_results": [
              {
                "query_id":"2229", "expected_results":[
                    ["2", "1", "0"],
                    ["3", "2", "0"],
                    ["4", "3", "0"],
                    ["5", "4", "0"],
                    ["6", "5", "0"]
                ]
              }
            ]
          },
          {
            "id": 22,
            "tags": ["monotonic test"],
            "name": "monotonic function is stateful, so it supports checkpoint",
            "description": "monotonic function is stateful, so it supports checkpoint",
            "steps":[
              {
                "statements": [
                  {"client":"python", "query_type": "table", "wait":2, "query": "drop stream if exists test22_stream"},
                  {"client":"python", "query_type": "table", "wait":2, "query": "create stream test22_stream(id int, value int)"},
                  {"client":"python", "query_type": "stream", "query_id":"2230", "wait":2, "terminate":"manual", "query":"subscribe to select id, value, monotonic(100) from test22_stream settings checkpoint_interval=1"},
                  {"client":"python", "query_type": "table", "depends_on":"2230", "kill":"2230", "kill_wait":3, "wait":1, "query": "insert into test22_stream(id, value) values (1,1)"},
                  {"client":"python", "query_type": "table", "wait":1, "query": "insert into test22_stream(id, value) values (2,2)"},
                  {"client":"python", "query_type": "stream","query_id":"2230-1", "terminate": "manual", "query":"recover from '2230'"},
                  {"client":"python", "query_type": "table", "wait":1, "query": "insert into test22_stream(id, value) values (3,3)"},
                  {"client":"python", "query_type": "table", "wait":3, "query": "kill query where query_id='2230' sync"},
                  {"client":"python", "query_type": "table", "query":"unsubscribe to '2230'"}

                ]
              }
            ],
            "expected_results": [
              {
                "query_id":"2230", "expected_results":[
                    ["1", "1", "100"]
                ]
              },
              {
                "query_id":"2230-1", "expected_results":[
                    ["2", "2", "101"],
                    ["3", "3", "102"]
                ]
              }
            ]
          },
          {
            "id": 23,
            "tags": ["monotonic test"],
            "name": "test multishard",
            "description": "test multishard",
            "steps":[
              {
                "statements": [
                    {"client":"python", "query_type": "table", "wait":2, "query": "drop stream if exists test22_create_random"},
                    {"client":"python", "query_type": "table", "wait":2, "query": "create random stream test22_create_random(id int default monotonic(2), value int) engine Random() settings eps=10, shards=10"},
                    {"client":"python", "query_type": "table", "wait":2, "query": "drop stream if exists test22_stream"},
                    {"client":"python", "query_type": "table", "wait":2, "query": "create stream if not exists test22_stream(shard int)"},
                    {"client":"python", "query_type": "table", "wait":2, "query":"insert into test22_stream(shard) select _tp_shard from test22_create_random limit 10"},
                    {"client":"python", "query_type": "table", "query_id":"2231", "wait":2, "query":"select shard from table(test22_stream) order by shard"}

                ]
              }
            ],
            "expected_results": [
              {
                "query_id":"2231", "expected_results":[
                  ["0"], ["1"], ["2"], ["3"], ["4"], ["5"], ["6"], ["7"], ["8"], ["9"]
                ]
              }
            ]
          },
          {
            "id": 24,
            "tags": ["monotonic test"],
            "name": "bad argument test",
            "description": "bad argument test",
            "steps":[
              {
                "statements": [
                    {"client":"python", "query_type": "table", "query_id":"2233", "wait":2, "query":"select monotonic(1.0)"},
                    {"client":"python", "query_type": "table", "query_id":"2234", "wait":2, "query":"select monotonic('1')"}


                ]
              }
            ],
            "expected_results": [
              {
                "query_id":"2233", "expected_results":"error_code:36"
              },
              {
                "query_id":"2234", "expected_results":"error_code:36"
              }
            ]
          },
          {
            "id": 25,
            "tags": ["ipv4 data type"],
            "name": "random stream supports native ipv4 data type",
            "description": "random stream supports native ipv4 and ipv6 data type",
            "steps":[
              {
                "statements": [
                  {"client":"python", "query_type": "table", "wait":2, "query": "drop stream if exists test22_create_random"},
                  {"client":"python", "query_type": "table", "wait":2, "query": "create random stream test22_create_random(id int, ipv4 ipv4, ipv6 ipv6)"},
                  {"client":"python", "query_type": "table", "query_id":"2235", "wait":2, "query":"select ipv4, ipv6 from test22_create_random settings max_events=1"}

                ]
              }
            ],
            "expected_results": [
              {
                "query_id":"2235", "expected_results":[
                    ["any_value", "any_value"]
                ]
              }
            ]
          }
    ]
  }
