{
  "test_suite_name": "substream",
  "tag":"smoke",
  "test_suite_config":{
    "table_schemas":[
      {
          "name": "test17_substream",
          "type": "table",
          "columns": [
              {
                  "name": "id",
                  "type": "uint64"
              },
              {
                  "name": "val_i",
                  "type": "int"
              },
              {
                  "name": "val_i64",
                  "type": "int64"
              },
              {
                  "name": "val_f",
                  "type": "float"
              },
              {
                  "name": "val_s",
                  "type": "string"
              },
              {
                  "name": "val_date",
                  "type": "datetime64(3)"
              },
              {
                  "name": "timestamp",
                  "type": "datetime64(3)",
                  "default": "now64(3)"
              }
          ],
          "event_time_column":"timestamp"
      }
    ],
    "tests_2_run": {"ids_2_run": ["all"], "tags_2_run":[], "tags_2_skip":{"default":["todo", "to_support", "change", "bug", "sample"]}}
  },
  "comments": "Tests covering the aggregate-over and non-aggregate-over functions in streaming queries smoke cases.",
  "tests": [
    {
      "id": 0,
      "tags": ["aggregate_over"],
      "name": "global_aggr_over",
      "description": "global aggregation with over functions in same substream",
      "steps":[
        {
          "statements": [
            {"client":"python", "query_id":"1700", "depends_on_stream":"test17_substream","wait":1, "terminate": "manual", "query_type": "stream", "query":"select id, sum(val_i) over (partition by id) from test17_substream order by id emit periodic 8s"},
            {"client":"python", "query_id":"1701","depends_on_stream":"test17_substream","wait":1, "terminate": "manual", "query_type": "stream", "query":"select id, count(val_s) over (partition by id), sum(val_i) over (partition by id), max(val_i64) over (partition by id), min(val_f) over(partition by id) from test17_substream order by id emit periodic 8s"},
            {"client":"python", "query_id":"1702","depends_on_stream":"test17_substream","wait":1, "terminate": "manual", "query_type": "stream", "query":"select id, count(val_s), sum(val_i), max(val_i64), min(val_f) from test17_substream partition by id order by id emit periodic 8s"},
            {"client":"python", "query_id":"1703","depends_on_stream":"test17_substream","wait":1, "terminate": "manual", "query_type": "stream", "query":"select to_timezone(val_date, 'UTC'), id, sum(val_i) over (partition by val_date) from test17_substream group by id order by val_date, id emit periodic 8s"}
          ]
        },
        {"inputs": [
          {"table_name":"test17_substream", "wait": 3, "depends_on": "1703", "depends_on_stream":"test17_substream", "data": [
            [1, 1, 10000, 5.6, "11", "2020-02-02 20:00:00+00:00", "2020-02-02 20:00:00+00:00"],
            [1, 2, 10010, 7.6, "12", "2020-02-02 20:00:06+00:00", "2020-02-02 20:00:01+00:00"],
            [1, 3, 10012, 12.6, "13", "2020-02-02 20:00:00+00:00", "2020-02-02 20:00:03+00:00"],
            [2, 21, 20000, 25.6, "21", "2020-02-02 20:00:00+00:00", "2020-02-02 20:00:00+00:00"],
            [3, 31, 30000, 35.6, "31", "2020-02-02 20:00:00+00:00", "2020-02-02 20:00:00+00:00"],
            [3, 32, 30010, 37.6, "32", "2020-02-02 20:00:00+00:00", "2020-02-02 20:00:01+00:00"],
            [2, 22, 20010, 27.6, "22", "2020-02-02 20:00:01+00:00", "2020-02-02 20:00:01+00:00"],
            [2, 23, 20012, 212.6, "23", "2020-02-02 20:00:02+00:00", "2020-02-02 20:00:03+00:00"],
            [1, 6, 10050, 27.34, "16", "2020-02-02 20:00:06+00:00", "2020-02-02 20:00:08+00:00"]
          ]},
          {"table_name":"test17_substream", "data": [
            [2, 24, 20050, 27.34, "24", "2020-02-02 20:00:03+00:00", "2020-02-02 20:00:03+00:00"],
            [2, 25, 20042, 213.6, "25", "2020-02-02 20:00:04+00:00", "2020-02-02 20:00:05+00:00"],
            [2, 26, 20050, 227.34, "26", "2020-02-02 20:00:05+00:00", "2020-02-02 20:00:08+00:00"]
          ]},
          {"table_name":"test17_substream", "data": [
            [3, 33, 30012, 312.6, "33", "2020-02-02 20:00:00+00:00", "2020-02-02 20:00:08+00:00"],
            [3, 34, 30050, 37.34, "34", "2020-02-02 20:00:00+00:00", "2020-02-02 20:00:03+00:00"],
            [1, 4, 10050, 7.34, "4", "2020-02-02 20:00:05+00:00", "2020-02-02 20:00:03+00:00"],
            [1, 5, 10042, 13.6, "5", "2020-02-02 20:00:05+00:00", "2020-02-02 20:00:05+00:00"],
            [3, 35, 30042, 313.6, "35", "2020-02-02 20:00:00+00:00", "2020-02-02 20:00:05+00:00"],
            [3, 36, 30050, 327.34, "36", "2020-02-02 20:00:00+00:00", "2020-02-02 20:00:02+00:00"]
          ]},
          {"table_name":"test17_substream", "kill":"1700,1701,1702,1703", "kill_wait": 5, "data": [
            [4, 424, 40050, 427.34, "400", "2020-02-02 20:00:10+00:00", "2020-02-02 20:00:10+00:00"]
          ]}
      ]
      }
      ],
      "expected_results": [
        {
          "query_id":"1700",
          "expected_results":[
            [1, 21], [2, 141], [3, 201], [4, 424]
          ]
        },
        {
          "query_id":"1701",
          "expected_results":[
            [1, 6, 21, 10050, 5.6],
            [2, 6, 141, 20050, 25.6],
            [3, 6, 201, 30050, 35.6],
            [4, 1, 424, 40050, 427.34]
          ]
        },
        {
          "query_id":"1702",
          "expected_results":[
            [1, 6, 21, 10050, 5.6],
            [2, 6, 141, 20050, 25.6],
            [3, 6, 201, 30050, 35.6],
            [4, 1, 424, 40050, 427.34]
          ]
        },
        {
          "query_id":"1703",
          "expected_results":[
            ["2020-02-02 20:00:00+00:00", 1, 4],
            ["2020-02-02 20:00:00+00:00", 2, 21],
            ["2020-02-02 20:00:00+00:00", 3, 201],
            ["2020-02-02 20:00:01+00:00", 2, 22],
            ["2020-02-02 20:00:02+00:00", 2, 23],
            ["2020-02-02 20:00:03+00:00", 2, 24],
            ["2020-02-02 20:00:04+00:00", 2, 25],
            ["2020-02-02 20:00:05+00:00", 1, 9],
            ["2020-02-02 20:00:05+00:00", 2, 26],
            ["2020-02-02 20:00:06+00:00", 1, 8],
            ["2020-02-02 20:00:10+00:00", 4, 424]
          ]
        }
      ]
    },
    {
      "id": 1,
      "tags": ["aggregate_over"],
      "name": "window_aggr_over",
      "description": "tumble/hop aggregation with over functions in same substream",
      "steps":[
        {
          "statements": [
            {"client":"python", "query_id":"1700", "terminate": "manual", "query_type": "stream", "query":"select id, window_start, window_end, sum(val_i) over (partition by id) from tumble(test17_substream, 2s) group by window_start, window_end order by id, window_start"},
            {"client":"python", "query_id":"1701", "terminate": "manual", "query_type": "stream", "query":"select id, window_start, count(val_s) over (partition by id), sum(val_i) over (partition by id), max(val_i64) over (partition by id), min(val_f) over(partition by id) from tumble(test17_substream, 5s) group by window_start order by id, window_start"},
            {"client":"python", "query_id":"1702", "terminate": "manual", "query_type": "stream", "query":"select id, window_start, count(val_s), sum(val_i) over (partition by id), max(val_i64), min(val_f) over(partition by id) from tumble(test17_substream, 5s) partition by id group by window_start order by id, window_start"},
            {"client":"python", "query_id":"1703", "terminate": "manual", "query_type": "stream", "query":"select to_timezone(val_date, 'UTC'), window_end, id, sum(val_i) over (partition by val_date) from tumble(test17_substream, 2s) group by window_end, id order by val_date, window_end, id"}
          ]
        },
        {"inputs": [
          {"table_name":"test17_substream", "wait": 2, "depends_on": "1703", "depends_on_stream":"test17_substream", "data": [
            [1, 1, 10000, 5.6, "11", "2020-02-02 20:00:00+00:00", "2020-02-02 20:00:00+00:00"],
            [1, 2, 10010, 7.6, "12", "2020-02-02 20:00:06+00:00", "2020-02-02 20:00:01+00:00"],
            [1, 3, 10012, 12.6, "13", "2020-02-02 20:00:00+00:00", "2020-02-02 20:00:03+00:00"],
            [2, 21, 20000, 25.6, "21", "2020-02-02 20:00:00+00:00", "2020-02-02 20:00:00+00:00"],
            [3, 31, 30000, 35.6, "31", "2020-02-02 20:00:00+00:00", "2020-02-02 20:00:00+00:00"],
            [3, 32, 30010, 37.6, "32", "2020-02-02 20:00:00+00:00", "2020-02-02 20:00:01+00:00"],
            [2, 22, 20010, 27.6, "22", "2020-02-02 20:00:01+00:00", "2020-02-02 20:00:01+00:00"],
            [2, 23, 20012, 212.6, "23", "2020-02-02 20:00:02+00:00", "2020-02-02 20:00:03+00:00"],
            [1, 6, 10050, 27.34, "16", "2020-02-02 20:00:06+00:00", "2020-02-02 20:00:08+00:00"]
          ]},
          {"table_name":"test17_substream", "data": [
            [2, 24, 20050, 27.34, "24", "2020-02-02 20:00:03+00:00", "2020-02-02 20:00:03+00:00"],
            [2, 25, 20042, 213.6, "25", "2020-02-02 20:00:04+00:00", "2020-02-02 20:00:05+00:00"],
            [2, 26, 20050, 227.34, "26", "2020-02-02 20:00:05+00:00", "2020-02-02 20:00:08+00:00"]
          ]},
          {"table_name":"test17_substream", "data": [
            [3, 33, 30012, 312.6, "33", "2020-02-02 20:00:00+00:00", "2020-02-02 20:00:08+00:00"],
            [3, 34, 30050, 37.34, "34", "2020-02-02 20:00:00+00:00", "2020-02-02 20:00:03+00:00"],
            [1, 4, 10050, 7.34, "4", "2020-02-02 20:00:05+00:00", "2020-02-02 20:00:03+00:00"],
            [1, 5, 10042, 13.6, "5", "2020-02-02 20:00:05+00:00", "2020-02-02 20:00:05+00:00"],
            [3, 35, 30042, 313.6, "35", "2020-02-02 20:00:00+00:00", "2020-02-02 20:00:05+00:00"],
            [3, 36, 30050, 327.34, "36", "2020-02-02 20:00:00+00:00", "2020-02-02 20:00:02+00:00"]
          ]},
          {"table_name":"test17_substream", "data": [
            [4, 424, 40050, 427.34, "400", "2020-02-02 20:00:10+00:00", "2020-02-02 20:00:10+00:00"]
          ]}
        ]
        },
        {"statements": [
          {"client":"python", "wait": 5, "run_mode":"table", "query_type": "table", "query":"kill query where query_id = '1700'"},
          {"client":"python", "run_mode":"table", "query_type": "table", "query":"kill query where query_id = '1701'"},
          {"client":"python", "run_mode":"table", "query_type": "table", "query":"kill query where query_id = '1702'"},
          {"client":"python", "run_mode":"table", "query_type": "table", "query":"kill query where query_id = '1703'"}
        ]}
      ],
      "expected_results": [
        {
          "query_id":"1700",
          "expected_results":[
            [1, "2020-02-02 20:00:00+00:00", "2020-02-02 20:00:02+00:00", 3],
            [1, "2020-02-02 20:00:02+00:00", "2020-02-02 20:00:04+00:00", 3],
            [2, "2020-02-02 20:00:00+00:00", "2020-02-02 20:00:02+00:00", 43],
            [2, "2020-02-02 20:00:02+00:00", "2020-02-02 20:00:04+00:00", 47],
            [2, "2020-02-02 20:00:04+00:00", "2020-02-02 20:00:06+00:00", 25],
            [3, "2020-02-02 20:00:00+00:00", "2020-02-02 20:00:02+00:00", 63],
            [3, "2020-02-02 20:00:02+00:00", "2020-02-02 20:00:04+00:00", 70],
            [3, "2020-02-02 20:00:04+00:00", "2020-02-02 20:00:06+00:00", 35]
          ]
        },
        {
          "query_id":"1701",
          "expected_results":[
            [1, "2020-02-02 20:00:00+00:00", 3, 6, 10012, 5.6],
            [2, "2020-02-02 20:00:00+00:00", 4, 90, 20050, 25.6],
            [3, "2020-02-02 20:00:00+00:00", 4, 133, 30050, 35.6]
          ]
        },
        {
          "query_id":"1702",
          "expected_results":[
            [1, "2020-02-02 20:00:00+00:00", 3, 6, 10012, 5.6],
            [2, "2020-02-02 20:00:00+00:00", 4, 90, 20050, 25.6],
            [3, "2020-02-02 20:00:00+00:00", 4, 133, 30050, 35.6]
          ]
        },
        {
          "query_id":"1703",
          "expected_results":[
            ["2020-02-02 20:00:00+00:00", "2020-02-02 20:00:02+00:00", 1, 1],
            ["2020-02-02 20:00:00+00:00", "2020-02-02 20:00:02+00:00", 2, 21],
            ["2020-02-02 20:00:00+00:00", "2020-02-02 20:00:02+00:00", 3, 63],
            ["2020-02-02 20:00:06+00:00", "2020-02-02 20:00:02+00:00", 1, 2],
            ["2020-02-02 20:00:00+00:00", "2020-02-02 20:00:04+00:00", 1, 3],
            ["2020-02-02 20:00:00+00:00", "2020-02-02 20:00:04+00:00", 3, 70],
            ["2020-02-02 20:00:00+00:00", "2020-02-02 20:00:06+00:00", 3, 35]
          ]
        }
      ]
    },
    {
      "id": 2,
      "tags": ["non_aggregate_over", "bug"],
      "name": "non_aggr_over",
      "description": "non-aggregation with over functions in same substream",
      "steps":[
        {
          "statements": [
            {"client":"python", "query_id":"1700", "terminate": "manual", "query_type": "stream", "query":"select id, val_i, lags(val_i, 1, 3) over (partition by id) from test17_substream order by id"},
            {"client":"python", "query_id":"1701", "terminate": "manual", "query_type": "stream", "query":"select window_start, id, val_s, lag(val_s) over(partition by id, window_start), row_number() over(partition by id, window_start) from tumble(test17_substream, 2s) order by window_start, id"},
            {"client":"python", "query_id":"1702", "terminate": "manual", "query_type": "stream", "query":"select window_start, id, val_s, lag(val_s), row_number() from tumble(test17_substream, 2s) partition by id, window_start order by window_start, id"},
            {"client":"python", "query_id":"1703", "terminate": "manual", "query_type": "stream", "query":"select * from (select window_end, id, row_number() over (partition by window_end, id) as row from tumble(test17_substream, 10s) order by window_end, id) where row < 3"}
          ]
        },
        {"inputs": [
          {"table_name":"test17_substream", "wait": 2, "depends_on": "1703","depends_on_stream":"test17_substream", "data": [
            [1, 1, 10000, 5.6, "11", "2020-02-02 20:00:00+00:00", "2020-02-02 20:00:00+00:00"],
            [1, 2, 10010, 7.6, "12", "2020-02-02 20:00:06+00:00", "2020-02-02 20:00:01+00:00"],
            [1, 3, 10012, 12.6, "13", "2020-02-02 20:00:00+00:00", "2020-02-02 20:00:03+00:00"],
            [2, 21, 20000, 25.6, "21", "2020-02-02 20:00:00+00:00", "2020-02-02 20:00:00+00:00"],
            [3, 31, 30000, 35.6, "31", "2020-02-02 20:00:00+00:00", "2020-02-02 20:00:00+00:00"],
            [3, 32, 30010, 37.6, "32", "2020-02-02 20:00:00+00:00", "2020-02-02 20:00:01+00:00"],
            [2, 22, 20010, 27.6, "22", "2020-02-02 20:00:01+00:00", "2020-02-02 20:00:01+00:00"],
            [2, 23, 20012, 212.6, "23", "2020-02-02 20:00:02+00:00", "2020-02-02 20:00:03+00:00"],
            [1, 6, 10050, 27.34, "16", "2020-02-02 20:00:06+00:00", "2020-02-02 20:00:08+00:00"]
          ]},
          {"table_name":"test17_substream", "data": [
            [2, 24, 20050, 27.34, "24", "2020-02-02 20:00:03+00:00", "2020-02-02 20:00:03+00:00"],
            [2, 25, 20042, 213.6, "25", "2020-02-02 20:00:04+00:00", "2020-02-02 20:00:05+00:00"],
            [2, 26, 20050, 227.34, "26", "2020-02-02 20:00:05+00:00", "2020-02-02 20:00:08+00:00"]
          ]},
          {"table_name":"test17_substream", "data": [
            [3, 33, 30012, 312.6, "33", "2020-02-02 20:00:00+00:00", "2020-02-02 20:00:08+00:00"],
            [3, 34, 30050, 37.34, "34", "2020-02-02 20:00:00+00:00", "2020-02-02 20:00:03+00:00"],
            [1, 4, 10050, 7.34, "4", "2020-02-02 20:00:05+00:00", "2020-02-02 20:00:03+00:00"],
            [1, 5, 10042, 13.6, "5", "2020-02-02 20:00:05+00:00", "2020-02-02 20:00:05+00:00"],
            [3, 35, 30042, 313.6, "35", "2020-02-02 20:00:00+00:00", "2020-02-02 20:00:05+00:00"],
            [3, 36, 30050, 327.34, "36", "2020-02-02 20:00:00+00:00", "2020-02-02 20:00:02+00:00"]
          ]},
          {"table_name":"test17_substream", "data": [
            [4, 424, 40050, 427.34, "400", "2020-02-02 20:00:10+00:00", "2020-02-02 20:00:10+00:00"]
          ]}
        ]
        },
        {"statements": [
          {"client":"python", "wait": 2, "run_mode":"table", "query_type": "table", "query":"kill query where query_id = '1700'"},
          {"client":"python", "run_mode":"table", "query_type": "table", "query":"kill query where query_id = '1701'"},
          {"client":"python", "run_mode":"table", "query_type": "table", "query":"kill query where query_id = '1702'"},
          {"client":"python", "run_mode":"table", "query_type": "table", "query":"kill query where query_id = '1703'"}
        ]}
      ],
      "expected_results": [
        {
          "query_id":"1700",
          "expected_results":[
            [1, 1, "[0, 0, 0]"],
            [1, 2, "[1, 0, 0]"],
            [1, 3, "[2, 1, 0]"],
            [1, 6, "[3, 2, 1]"],
            [2, 21, "[0, 0, 0]"],
            [2, 22, "[21, 0, 0]"],
            [2, 23, "[22, 21, 0]"],
            [3, 31, "[0, 0, 0]"],
            [3, 32, "[31, 0, 0]"],
            [2, 24, "[23, 22, 21]"],
            [2, 25, "[24, 23, 22]"],
            [2, 26, "[25, 24, 23]"],
            [1, 4, "[6, 3, 2]"],
            [1, 5, "[4, 6, 3]"],
            [3, 33, "[32, 31, 0]"],
            [3, 34, "[33, 32, 31]"],
            [3, 35, "[34, 33, 32]"],
            [3, 36, "[35, 34, 33]"],
            [4, 424, "[0, 0, 0]"]
          ]
        },
        {
          "query_id":"1701",
          "expected_results":[
            ["2020-02-02 20:00:00+00:00", 1, "11", "", 0],
            ["2020-02-02 20:00:00+00:00", 1, "12", "11", 1],
            ["2020-02-02 20:00:00+00:00", 2, "21", "", 0],
            ["2020-02-02 20:00:00+00:00", 2, "22", "21", 1],
            ["2020-02-02 20:00:00+00:00", 3, "31", "", 0],
            ["2020-02-02 20:00:00+00:00", 3, "32", "31", 1],
            ["2020-02-02 20:00:02+00:00", 1, "13", "", 0],
            ["2020-02-02 20:00:02+00:00", 2, "23", "", 0],
            ["2020-02-02 20:00:08+00:00", 1, "16", "", 0],
            ["2020-02-02 20:00:02+00:00", 2, "24", "23", 1],
            ["2020-02-02 20:00:04+00:00", 2, "25", "", 0],
            ["2020-02-02 20:00:08+00:00", 2, "26", "", 0],
            ["2020-02-02 20:00:02+00:00", 1, "4", "13", 1],
            ["2020-02-02 20:00:02+00:00", 3, "34", "", 0],
            ["2020-02-02 20:00:02+00:00", 3, "36", "34", 1],
            ["2020-02-02 20:00:04+00:00", 1, "5", "", 0],
            ["2020-02-02 20:00:04+00:00", 3, "35", "", 0],
            ["2020-02-02 20:00:08+00:00", 3, "33", "", 0],
            ["2020-02-02 20:00:10+00:00", 4, "400", "", 0]
          ]
        },
        {
          "query_id":"1702",
          "expected_results":[
            ["2020-02-02 20:00:00+00:00", 1, "11", "", 0],
            ["2020-02-02 20:00:00+00:00", 1, "12", "11", 1],
            ["2020-02-02 20:00:00+00:00", 2, "21", "", 0],
            ["2020-02-02 20:00:00+00:00", 2, "22", "21", 1],
            ["2020-02-02 20:00:00+00:00", 3, "31", "", 0],
            ["2020-02-02 20:00:00+00:00", 3, "32", "31", 1],
            ["2020-02-02 20:00:02+00:00", 1, "13", "", 0],
            ["2020-02-02 20:00:02+00:00", 2, "23", "", 0],
            ["2020-02-02 20:00:08+00:00", 1, "16", "", 0],
            ["2020-02-02 20:00:02+00:00", 2, "24", "23", 1],
            ["2020-02-02 20:00:04+00:00", 2, "25", "", 0],
            ["2020-02-02 20:00:08+00:00", 2, "26", "", 0],
            ["2020-02-02 20:00:02+00:00", 1, "4", "13", 1],
            ["2020-02-02 20:00:02+00:00", 3, "34", "", 0],
            ["2020-02-02 20:00:02+00:00", 3, "36", "34", 1],
            ["2020-02-02 20:00:04+00:00", 1, "5", "", 0],
            ["2020-02-02 20:00:04+00:00", 3, "35", "", 0],
            ["2020-02-02 20:00:08+00:00", 3, "33", "", 0],
            ["2020-02-02 20:00:10+00:00", 4, "400", "", 0]
          ]
        },
        {
          "query_id":"1703",
          "expected_results":[
            ["2020-02-02 20:00:10+00:00", 1, 0],
            ["2020-02-02 20:00:10+00:00", 1, 1],
            ["2020-02-02 20:00:10+00:00", 1, 2],
            ["2020-02-02 20:00:10+00:00", 2, 0],
            ["2020-02-02 20:00:10+00:00", 2, 1],
            ["2020-02-02 20:00:10+00:00", 2, 2],
            ["2020-02-02 20:00:10+00:00", 3, 0],
            ["2020-02-02 20:00:10+00:00", 3, 1],
            ["2020-02-02 20:00:10+00:00", 3, 2],
            ["2020-02-02 20:00:20+00:00", 4, 0]
          ]
        }
      ]
    },
    {
      "id": 3,
      "tags": ["complex"],
      "name": "complex over",
      "description": "complex over functions in same substream",
      "steps":[
        {
          "statements": [
            {"client":"python", "query_type": "table", "query":"drop stream if exists test17_substream_3"},
            {"client":"python", "query_type": "table", "wait": 2, "query":"create stream test17_substream_3(id int, value int, t datetime64(3))"},
            {"client":"python", "query_id":"1700", "terminate": "manual", "query_type": "stream", "depends_on_stream":"test17_substream_3", "query":"select window_start, window_end, id, value, value - 1, max(value) over (partition by id, value), emit_version() from tumble(test17_substream_3, t, 2s) partition by id, value group by window_start, window_end"},
            {"client":"python", "query_type": "table", "wait": 4, "query":"insert into test17_substream_3(id, value, t) values(1, 100, '2020-01-01 10:00:00')(1, 200, '2020-01-01 10:00:01')(1, 100, '2020-01-01 10:00:02')(1, 100, '2020-01-01 10:00:03')(1, 200, '2020-01-01 10:00:04')(1, 100, '2020-01-01 10:00:05')"},
            {"client":"python", "query_type": "table", "kill": 1700, "kill_wait": 3,"query":"insert into test17_substream_3(id, value, t) values(2, 100, '2020-01-01 10:00:00')(2, 200, '2020-01-01 10:00:01')(2, 100, '2020-01-01 10:00:02')(2, 100, '2020-01-01 10:00:03')(2, 200, '2020-01-01 10:00:04')(2, 100, '2020-01-01 10:00:05')"}
          ]
        }
      ],
      "expected_results": [
        {
          "query_id":"1700",
          "expected_results":[
            ["2020-01-01 10:00:00", "2020-01-01 10:00:02", 1, 100, 99, 100, 0],
            ["2020-01-01 10:00:02", "2020-01-01 10:00:04", 1, 100, 99, 100, 1],
            ["2020-01-01 10:00:00", "2020-01-01 10:00:02", 1, 200, 199, 200, 0],
            ["2020-01-01 10:00:00", "2020-01-01 10:00:02", 2, 100, 99, 100, 0],
            ["2020-01-01 10:00:02", "2020-01-01 10:00:04", 2, 100, 99, 100, 1],
            ["2020-01-01 10:00:00", "2020-01-01 10:00:02", 2, 200, 199, 200, 0]
          ]
        }
      ]
    },
    {
      "id": 4,
      "tags": ["error over"],
      "name": "error over",
      "description": "error over functions in same substream",
      "steps":[
        {
          "statements": [
            {"client":"python", "query_id":"1700", "query_end_timer":3, "query_type": "stream", "query":"select window_start, window_end, id, val_i, val_i - 1, lag(val_i), max(val_i) over (partition by id), emit_version() from tumble(test17_substream, 2s) partition by id group by window_start, window_end"}
          ]
        }
      ],
      "expected_results": [
        {
          "query_id":"1700", "expected_results":"error_code:48"
        }
      ]
    }
  ]
}