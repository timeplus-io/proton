{
    "test_suite_name": "changelog_stream1",
    "tag": "smoke",

    "test_suite_config":{   
        "tests_2_run": {"ids_2_run": ["all"], "tags_2_run":[], "tags_2_skip":{"default":["todo", "to_support", "change", "sample", "native_not_support"],"cluster": ["view", "cluster_table_bug"]}}
    },
    "comments": "Tests covering the single shard changelog stream query smoke cases.",
    "tests":[
        {
            "id": 23,
            "tags": ["changelog(table)", "append-only", "Dynamic data enrichment join", "native_not_support"],
            "name": "append-only left all join changelog(table)(partial primary join)",
            "description": "append-only left all join changelog(table)(partial primary join)",
            "steps": [
                {
                    "statements": [
                        {"client":"python", "query_type":"table", "query":"drop stream if exists test14_append_stream1_1"},
                        {"client":"python", "query_type":"table", "query":"drop stream if exists test14_append_stream2_1"},
                        {"client":"python", "query_type": "table", "exist":"test14_append_stream1_1", "exist_wait":2, "wait":1, "query":"create stream if not exists test14_append_stream1_1 (i int, k1 int, k2 string)"},
                        {"client":"python", "query_type": "table", "exist":"test14_append_stream2_1", "exist_wait":2, "wait":1, "query":"create stream if not exists test14_append_stream2_1 (j int, kk1 int, kk2 string)"},
                        {"client":"python", "query_type": "stream", "query_id":"1423", "wait":1, "terminate":"manual", "query":"select a.i, a.k1, a.k2, b.j, b.kk1, b.kk2, _tp_delta from test14_append_stream1_1 as a  left all join changelog(test14_append_stream2_1, kk1, kk2) as b on a.k1 = b.kk1"},
                        {"client":"python", "query_type": "table", "depends_on":"1423", "wait":1, "query": "insert into test14_append_stream2_1(j, kk1, kk2) values (2, 1, 'kk')"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test14_append_stream1_1(i, k1, k2) values (1, 1, 'k')"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test14_append_stream2_1(j, kk1, kk2) values (4, 1, 'kk2')"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test14_append_stream2_1(j, kk1, kk2) values (4, 1, 'kk')"},
                        {"client":"python", "query_type": "table", "kill":"1423", "kill_wait":5, "wait":1, "query": "insert into test14_append_stream1_1(i, k1, k2) values (3, 2, 'k')"}
                    ]
                }
            ],
            "expected_results": [
                {
                    "query_id":"1423",
                    "expected_results":[
                        [1, 1, "k", 2, 1, "kk", 1],
                        [1, 1, "k", 4, 1, "kk2", 1],
                        [1, 1, "k", 2, 1, "kk", -1],
                        [1, 1, "k", 4, 1, "kk", 1],
                        [3, 2, "k", 0, 0, "", 0]
                    ]
                }
            ]
        },
        {
            "id": 24,
            "tags": ["changelog(table)", "append-only", "Dynamic data enrichment join", "native_not_support"],
            "name": "append-only left all join changelog(table)(no primary join)",
            "description": "append-only left all join changelog(table)(no primary join)",
            "steps": [
                {
                    "statements": [
                        {"client":"python", "query_type":"table", "query":"drop stream if exists test14_append_stream1_1"},
                        {"client":"python", "query_type":"table", "query":"drop stream if exists test14_append_stream2_1"},
                        {"client":"python", "query_type": "table", "exist":"test14_append_stream1_1", "exist_wait":2, "wait":1, "query":"create stream if not exists test14_append_stream1_1 (i int, k1 int, k2 string)"},
                        {"client":"python", "query_type": "table", "exist":"test14_append_stream2_1", "exist_wait":2, "wait":1, "query":"create stream if not exists test14_append_stream2_1 (j int, kk1 int, kk2 string)"},
                        {"client":"python", "query_type": "stream", "query_id":"1424", "wait":1, "terminate":"manual", "query":"select a.i, a.k1, a.k2, b.j, b.kk1, b.kk2, _tp_delta from test14_append_stream1_1 as a left all join changelog(test14_append_stream2_1, kk1, kk2) as b on a.i = b.j"},
                        {"client":"python", "query_type": "table", "depends_on":"1424", "wait":1, "query": "insert into test14_append_stream2_1(j, kk1, kk2) values (1, 2, 'k2')"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test14_append_stream1_1(i, k1, k2) values (1, 1, 'k')"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test14_append_stream2_1(j, kk1, kk2) values (2, 2, 'k2')"},
                        {"client":"python", "query_type": "table", "kill":"1424", "kill_wait":3, "wait":1, "query": "insert into test14_append_stream1_1(i, k1, k2) values (3, 1, 'k')"}
                    ]
                }
            ],
            "expected_results": [
                {
                    "query_id":"1424",
                    "expected_results":[
                        [1, 1, "k", 1, 2, "k2", 1],
                        [1, 1, "k", 1, 2, "k2", -1],
                        [3, 1, "k", 0, 0, "", 0]
                    ]
                }
            ]
        },
        {
            "id": 25,
            "tags": ["changelog_kv", "append-only", "Dynamic data enrichment join"],
            "name": "append-only inner all join changelog_kv(all primary join)",
            "description": "append-only inner all join changelog_kv(all primary join)",
            "steps": [
                {
                    "statements": [
                        {"client":"python", "query_type":"table", "query":"drop stream if exists test14_append_stream1_1"},
                        {"client":"python", "query_type":"table", "query":"drop stream if exists test14_append_stream2_1"},
                        {"client":"python", "query_type": "table", "exist":"test14_append_stream1_1", "exist_wait":2, "wait":1, "query":"create stream if not exists test14_append_stream1_1 (i int, k1 int, k2 string)"},
                        {"client":"python", "query_type": "table", "exist":"test14_append_stream2_1", "exist_wait":2, "wait":1, "query":"create stream if not exists test14_append_stream2_1 (j int, kk1 int, kk2 string) primary key (kk1, kk2) settings mode='changelog_kv'"},
                        {"client":"python", "query_type": "stream", "query_id":"1425", "wait":1, "terminate":"manual", "query":"select a.i, a.k1, a.k2, b.j, b.kk1, b.kk2, _tp_delta from test14_append_stream1_1 as a inner all join test14_append_stream2_1 as b on a.k1 = b.kk1 and a.k2 = b.kk2"},
                        {"client":"python", "query_type": "table", "depends_on":"1425", "wait":1, "query": "insert into test14_append_stream2_1(j, kk1, kk2) values (2, 1, 'k')"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test14_append_stream1_1(i, k1, k2) values (1, 1, 'k')"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test14_append_stream2_1(j, kk1, kk2, _tp_delta) values (2, 1, 'k', -1)"},
                        {"client":"python", "query_type": "table", "kill":"1425", "kill_wait":3, "wait":1, "query": "insert into test14_append_stream1_1(i, k1, k2) values (3, 1, 'k')"}
                    ]
                }
            ],
            "expected_results": [
                {
                    "query_id":"1425",
                    "expected_results":[
                        [1, 1, "k", 2, 1, "k", 1]
                    ]
                }
            ]
        },
        {
            "id": 26,
            "tags": ["changelog_kv", "append-only", "Dynamic data enrichment join"],
            "name": "append-only inner all join changelog_kv(no primary join)",
            "description": "append-only inner all join changelog_kv(no primary join)",
            "steps": [
                {
                    "statements": [
                        {"client":"python", "query_type":"table", "query":"drop stream if exists test14_append_stream1_1"},
                        {"client":"python", "query_type":"table", "query":"drop stream if exists test14_append_stream2_1"},
                        {"client":"python", "query_type": "table", "exist":"test14_append_stream1_1", "exist_wait":2, "wait":1, "query":"create stream if not exists test14_append_stream1_1 (i int, k1 int, k2 string)"},
                        {"client":"python", "query_type": "table", "exist":"test14_append_stream2_1", "exist_wait":2, "wait":1, "query":"create stream if not exists test14_append_stream2_1 (j int, kk1 int, kk2 string) primary key (kk1, kk2) settings mode='changelog_kv'"},
                        {"client":"python", "query_type": "stream", "query_id":"1426", "wait":1, "terminate":"manual", "query":"select a.i, a.k1, a.k2, b.j, b.kk1, b.kk2, _tp_delta from test14_append_stream1_1 as a inner all join test14_append_stream2_1 as b on a.i = b.j"},
                        {"client":"python", "query_type": "table", "depends_on":"1426", "wait":1, "query": "insert into test14_append_stream2_1(j, kk1, kk2) values (1, 2, 'k2')"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test14_append_stream1_1(i, k1, k2) values (1, 1, 'k')"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test14_append_stream2_1(j, kk1, kk2, _tp_delta) values (1, 2, 'k2', -1)"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test14_append_stream2_1(j, kk1, kk2) values (2, 2, 'k2')"},
                        {"client":"python", "query_type": "table", "kill":"1426", "kill_wait":3, "wait":1, "query": "insert into test14_append_stream1_1(i, k1, k2) values (2, 2, 'k')"}
                    ]
                }
            ],
            "expected_results": [
                {
                    "query_id":"1426",
                    "expected_results":[
                        [1, 1, "k", 1, 2, "k2", 1],
                        [2, 2, "k", 2, 2, "k2", 1]
                    ]
                }
            ]
        },
        {
            "id": 27,
            "tags": ["changelog_kv", "append-only", "Dynamic data enrichment join"],
            "name": "append-only left all join changelog_kv(all primary join)",
            "description": "append-only left all join changelog_kv(all primary join)",
            "steps": [
                {
                    "statements": [
                        {"client":"python", "query_type":"table", "query":"drop stream if exists test14_append_stream1_1"},
                        {"client":"python", "query_type":"table", "query":"drop stream if exists test14_append_stream2_1"},
                        {"client":"python", "query_type": "table", "exist":"test14_append_stream1_1", "exist_wait":2, "wait":1, "query":"create stream if not exists test14_append_stream1_1 (i int, k1 int, k2 string)"},
                        {"client":"python", "query_type": "table", "exist":"test14_append_stream2_1", "exist_wait":2, "wait":1, "query":"create stream if not exists test14_append_stream2_1 (j int, kk1 int, kk2 string) primary key (kk1, kk2) settings mode='changelog_kv'"},
                        {"client":"python", "query_type": "stream", "query_id":"1427", "wait":1, "terminate":"manual", "query":"select a.i, a.k1, a.k2, b.j, b.kk1, b.kk2, _tp_delta from test14_append_stream1_1 as a left all join test14_append_stream2_1 as b on a.k1 = b.kk1 and a.k2 = b.kk2"},
                        {"client":"python", "query_type": "table", "depends_on":"1427", "wait":1, "query": "insert into test14_append_stream2_1(j, kk1, kk2) values (2, 1, 'k')"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test14_append_stream1_1(i, k1, k2) values (1, 1, 'k')"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test14_append_stream2_1(j, kk1, kk2, _tp_delta) values (2, 1, 'k', -1)"},
                        {"client":"python", "query_type": "table", "kill":"1427", "kill_wait":3, "wait":1, "query": "insert into test14_append_stream1_1(i, k1, k2) values (3, 1, 'k')"}
                    ]
                }
            ],
            "expected_results": [
                {
                    "query_id":"1427",
                    "expected_results":[
                        [1, 1, "k", 2, 1, "k", 1],
                        [3, 1, "k", 0, 0, "", 0]
                    ]
                }
            ]
        },
        {
            "id": 28,
            "tags": ["changelog_kv", "append-only", "Dynamic data enrichment join"],
            "name": "append-only left all join changelog_kv(partial primary join)",
            "description": "append-only left all join changelog_kv(partial primary join)",
            "steps": [
                {
                    "statements": [
                        {"client":"python", "query_type":"table", "query":"drop stream if exists test14_append_stream1_1"},
                        {"client":"python", "query_type":"table", "query":"drop stream if exists test14_append_stream2_1"},
                        {"client":"python", "query_type": "table", "exist":"test14_append_stream1_1", "exist_wait":2, "wait":1, "query":"create stream if not exists test14_append_stream1_1 (i int, k1 int, k2 string)"},
                        {"client":"python", "query_type": "table", "exist":"test14_append_stream2_1", "exist_wait":2, "wait":1, "query":"create stream if not exists test14_append_stream2_1 (j int, kk1 int, kk2 string) primary key (kk1, kk2) settings mode='changelog_kv'"},
                        {"client":"python", "query_type": "stream", "query_id":"1428", "wait":1, "terminate":"manual", "query":"select a.i, a.k1, a.k2, b.j, b.kk1, b.kk2, _tp_delta from test14_append_stream1_1 as a left all join test14_append_stream2_1 as b on a.k1 = b.kk1"},
                        {"client":"python", "query_type": "table", "depends_on":"1428", "wait":1, "query": "insert into test14_append_stream2_1(j, kk1, kk2) values (2, 1, 'kk')"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test14_append_stream1_1(i, k1, k2) values (1, 1, 'k')"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test14_append_stream2_1(j, kk1, kk2, _tp_delta) values (2, 1, 'kk', -1)"},
                        {"client":"python", "query_type": "table", "kill":"1428", "kill_wait":3, "wait":1, "query": "insert into test14_append_stream1_1(i, k1, k2) values (3, 1, 'k')"}
                    ]
                }
            ],
            "expected_results": [
                {
                    "query_id":"1428",
                    "expected_results":[
                        [1, 1, "k", 2, 1, "kk", 1],
                        [3, 1, "k", 0, 0, "", 0]
                    ]
                }
            ]
        },
        {
            "id": 29,
            "tags": ["changelog_kv", "append-only", "Dynamic data enrichment join"],
            "name": "append-only left all join changelog_kv(no primary join)",
            "description": "append-only left all join changelog_kv(no primary join)",
            "steps": [
                {
                    "statements": [
                        {"client":"python", "query_type":"table", "query":"drop stream if exists test14_append_stream1_1"},
                        {"client":"python", "query_type":"table", "query":"drop stream if exists test14_append_stream2_1"},
                        {"client":"python", "query_type": "table", "exist":"test14_append_stream1_1", "exist_wait":2, "wait":1, "query":"create stream if not exists test14_append_stream1_1 (i int, k1 int, k2 string)"},
                        {"client":"python", "query_type": "table", "exist":"test14_append_stream2_1", "exist_wait":2, "wait":1, "query":"create stream if not exists test14_append_stream2_1 (j int, kk1 int, kk2 string) primary key (kk1, kk2) settings mode='changelog_kv'"},
                        {"client":"python", "query_type": "stream", "query_id":"1429", "wait":1, "terminate":"manual", "query":"select a.i, a.k1, a.k2, b.j, b.kk1, b.kk2, _tp_delta from test14_append_stream1_1 as a left all join test14_append_stream2_1 as b on a.i = b.j"},
                        {"client":"python", "query_type": "table", "depends_on":"1429", "wait":1, "query": "insert into test14_append_stream2_1(j, kk1, kk2) values (1, 2, 'k2')"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test14_append_stream1_1(i, k1, k2) values (1, 1, 'k')"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test14_append_stream2_1(j, kk1, kk2, _tp_delta) values (1, 2, 'k2', -1)"},
                        {"client":"python", "query_type": "table", "kill":"1429", "kill_wait":3, "wait":1, "query": "insert into test14_append_stream1_1(i, k1, k2) values (2, 2, 'k')"}
                    ]
                }
            ],
            "expected_results": [
                {
                    "query_id":"1429",
                    "expected_results":[
                        [1, 1, "k", 1, 2, "k2", 1],
                        [2, 2, "k", 0, 0, "", 0]
                    ]
                }
            ]
        },
        {
            "id": 30,
            "tags": ["changelog", "append-only", "multiple stream joins"],
            "name": "changelog inner all join changelog inner all join changelog",
            "description": "changelog inner all join changelog inner all join changelog",
            "steps": [
                {
                    "statements": [
                        {"client":"python", "query_type":"table", "query":"drop stream if exists test14_append_stream1_1"},
                        {"client":"python", "query_type":"table", "query":"drop stream if exists test14_append_stream2_1"},
                        {"client":"python", "query_type":"table", "query":"drop stream if exists test14_append_stream3_1"},
                        {"client":"python", "query_type": "table", "exist":"test14_append_stream1_1", "exist_wait":2, "wait":1, "query":"create stream if not exists test14_append_stream1_1 (i int, k1 int, k2 string) settings mode='changelog'"},
                        {"client":"python", "query_type": "table", "exist":"test14_append_stream2_1", "exist_wait":2, "wait":1, "query":"create stream if not exists test14_append_stream2_1 (j int, kk1 int, kk2 string) settings mode='changelog'"},
                        {"client":"python", "query_type": "table", "exist":"test14_append_stream3_1", "exist_wait":2, "wait":1, "query":"create stream if not exists test14_append_stream3_1 (k int, kkk1 int, kkk2 string) settings mode='changelog'"},
                        {"client":"python", "query_type": "stream", "query_id":"1430", "wait":1, "terminate":"manual", "query":"select a.i, a.k1, a.k2, b.j, b.kk1, b.kk2, c.k, c.kkk1, c.kkk2, _tp_delta from test14_append_stream1_1 as a inner all join test14_append_stream2_1 as b on a.k1 = b.kk1 and a.k2 = b.kk2 inner all join test14_append_stream3_1 as c on a.k1 = c.kkk1 and a.k2 = c.kkk2"},
                        {"client":"python", "query_type": "table", "depends_on":"1430", "wait":1, "query": "insert into test14_append_stream1_1(i, k1, k2) values (1, 1, 'k')"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test14_append_stream2_1(j, kk1, kk2) values (2, 1, 'k')"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test14_append_stream3_1(k, kkk1, kkk2) values (3, 1, 'k')"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test14_append_stream2_1(j, kk1, kk2, _tp_delta) values (2, 1, 'k', -1)"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test14_append_stream1_1(i, k1, k2) values (4, 1, 'k')"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test14_append_stream3_1(k, kkk1, kkk2) values (5, 1, 'k')"},
                        {"client":"python", "query_type": "table", "kill":"1430", "kill_wait":3, "wait":1, "query": "insert into test14_append_stream2_1(j, kk1, kk2) values (6, 1, 'k')"}
                    ]
                }
            ],
            "expected_results": [
                {
                    "query_id":"1430",
                    "expected_results":[
                        [1, 1, "k", 2, 1, "k", 3, 1, "k", 1],
                        [1, 1, "k", 2, 1, "k", 3, 1, "k", -1],
                        [1, 1, "k", 6, 1, "k", 3, 1, "k", 1],
                        [1, 1, "k", 6, 1, "k", 5, 1, "k", 1],
                        [4, 1, "k", 6, 1, "k", 3, 1, "k", 1],
                        [4, 1, "k", 6, 1, "k", 5, 1, "k", 1]
                    ]
                }
            ]
        },
        {
            "id": 31,
            "tags": ["changelog", "append-only", "changelog(table)","multiple stream joins"],
            "name": "append-only inner all join changelog(table)) inner all join changelog(all primary key)",
            "description": "append-only inner all join changelog(table)) inner all join changelog(all primary key)",
            "steps": [
                {
                    "statements": [
                        {"client":"python", "query_type":"table", "query":"drop stream if exists test14_append_stream1_1"},
                        {"client":"python", "query_type":"table", "query":"drop stream if exists test14_append_stream2_1"},
                        {"client":"python", "query_type":"table", "query":"drop stream if exists test14_append_stream3_1"},
                        {"client":"python", "query_type": "table", "exist":"test14_append_stream1_1", "exist_wait":2, "wait":1, "query":"create stream if not exists test14_append_stream1_1 (i int, k1 int, k2 string)"},
                        {"client":"python", "query_type": "table", "exist":"test14_append_stream2_1", "exist_wait":2, "wait":1, "query":"create stream if not exists test14_append_stream2_1 (j int, kk1 int, kk2 string)"},
                        {"client":"python", "query_type": "table", "exist":"test14_append_stream3_1", "exist_wait":2, "wait":1, "query":"create stream if not exists test14_append_stream3_1 (k int, kkk1 int, kkk2 string) settings mode='changelog'"},
                        {"client":"python", "query_type": "stream", "query_id":"1431", "wait":1, "terminate":"manual", "query":"select a.i, a.k1, a.k2, b.j, b.kk1, b.kk2, c.k, c.kkk1, c.kkk2, _tp_delta from test14_append_stream1_1 as a inner all join changelog(test14_append_stream2_1, kk1, kk2) as b on a.k1 = b.kk1 and a.k2 = b.kk2 inner all join test14_append_stream3_1 as c on a.k1 = c.kkk1 and a.k2 = c.kkk2"},
                        {"client":"python", "query_type": "table", "depends_on":"1431", "wait":1, "query": "insert into test14_append_stream3_1(k, kkk1, kkk2) values (3, 1, 'k')"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test14_append_stream2_1(j, kk1, kk2) values (2, 1, 'k')"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test14_append_stream1_1(i, k1, k2) values (1, 1, 'k')"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test14_append_stream2_1(j, kk1, kk2) values (4, 1, 'k')"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test14_append_stream3_1(k, kkk1, kkk2, _tp_delta) values (3, 1, 'k', -1)"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test14_append_stream1_1(i, k1, k2) values (1, 1, 'k')"},
                        {"client":"python", "query_type": "table", "kill":"1431", "kill_wait":3, "wait":1, "query": "insert into test14_append_stream3_1(k, kkk1, kkk2) values (5, 1, 'k')"}
                    ]
                }
            ],
            "expected_results": [
                {
                    "query_id":"1431",
                    "expected_results":[
                        [1, 1, "k", 2, 1, "k", 3, 1, "k", 1]
                    ]
                }
            ]
        },
        {
            "id": 32,
            "tags": ["changelog", "append-only", "changelog(table)","multiple stream joins"],
            "name": "append-only inner all join changelog(table)) inner all join changelog(partial primary key)",
            "description": "append-only inner all join changelog(table)) inner all join changelog(partial primary key)",
            "steps": [
                {
                    "statements": [
                        {"client":"python", "query_type":"table", "query":"drop stream if exists test14_append_stream1_1"},
                        {"client":"python", "query_type":"table", "query":"drop stream if exists test14_append_stream2_1"},
                        {"client":"python", "query_type":"table", "query":"drop stream if exists test14_append_stream3_1"},
                        {"client":"python", "query_type": "table", "exist":"test14_append_stream1_1", "exist_wait":2, "wait":1, "query":"create stream if not exists test14_append_stream1_1 (i int, k1 int, k2 string)"},
                        {"client":"python", "query_type": "table", "exist":"test14_append_stream2_1", "exist_wait":2, "wait":1, "query":"create stream if not exists test14_append_stream2_1 (j int, kk1 int, kk2 string)"},
                        {"client":"python", "query_type": "table", "exist":"test14_append_stream3_1", "exist_wait":2, "wait":1, "query":"create stream if not exists test14_append_stream3_1 (k int, kkk1 int, kkk2 string) settings mode='changelog'"},
                        {"client":"python", "query_type": "stream", "query_id":"1432", "wait":1, "terminate":"manual", "query":"select a.i, a.k1, a.k2, b.j, b.kk1, b.kk2, c.k, c.kkk1, c.kkk2, _tp_delta from test14_append_stream1_1 as a inner all join changelog(test14_append_stream2_1, kk1, kk2) as b on a.k1 = b.kk1 inner all join test14_append_stream3_1 as c on b.kk1 = c.kkk1 and b.kk2 = c.kkk2"},
                        {"client":"python", "query_type": "table", "depends_on":"1432", "wait":1, "query": "insert into test14_append_stream3_1(k, kkk1, kkk2) values (3, 1, 'k')"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test14_append_stream2_1(j, kk1, kk2) values (2, 1, 'k')"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test14_append_stream1_1(i, k1, k2) values (1, 1, 'k')"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test14_append_stream3_1(k, kkk1, kkk2, _tp_delta) values (3, 1, 'k', -1)"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test14_append_stream2_1(j, kk1, kk2) values (5, 1, 'k')"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test14_append_stream2_1(j, kk1, kk2) values (4, 1, 'k1')"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test14_append_stream1_1(i, k1, k2) values (1, 1, 'k')"},
                        {"client":"python", "query_type": "table", "kill":"1432", "kill_wait":3, "wait":1, "query": "insert into test14_append_stream3_1(k, kkk1, kkk2) values (5, 1, 'k')"}
                    ]
                }
            ],
            "expected_results": [
                {
                    "query_id":"1432",
                    "expected_results":[
                        [1, 1, "k", 2, 1, "k", 3, 1, "k", 1]
                    ]
                }
            ]
        },
        {
            "id": 33,
            "tags": ["changelog", "append-only", "changelog(table)","multiple stream joins"],
            "name": "append-only inner all join changelog(table)) inner all join changelog(no primary key)",
            "description": "append-only inner all join changelog(table)) inner all join changelog(no primary key)",
            "steps": [
                {
                    "statements": [
                        {"client":"python", "query_type":"table", "query":"drop stream if exists test14_append_stream1_1"},
                        {"client":"python", "query_type":"table", "query":"drop stream if exists test14_append_stream2_1"},
                        {"client":"python", "query_type":"table", "query":"drop stream if exists test14_append_stream3_1"},
                        {"client":"python", "query_type": "table", "exist":"test14_append_stream1_1", "exist_wait":2, "wait":1, "query":"create stream if not exists test14_append_stream1_1 (i int, k1 int, k2 string)"},
                        {"client":"python", "query_type": "table", "exist":"test14_append_stream2_1", "exist_wait":2, "wait":1, "query":"create stream if not exists test14_append_stream2_1 (j int, kk1 int, kk2 string)"},
                        {"client":"python", "query_type": "table", "exist":"test14_append_stream3_1", "exist_wait":2, "wait":1, "query":"create stream if not exists test14_append_stream3_1 (k int, kkk1 int, kkk2 string) settings mode='changelog'"},
                        {"client":"python", "query_type": "stream", "query_id":"1433", "wait":1, "terminate":"manual", "query":"select a.i, a.k1, a.k2, b.j, b.kk1, b.kk2, c.k, c.kkk1, c.kkk2, _tp_delta from test14_append_stream1_1 as a inner all join changelog(test14_append_stream2_1, kk1, kk2) as b on a.k1 = b.kk1 inner all join test14_append_stream3_1 as c on b.kk1 = c.kkk1 and b.kk2 = c.kkk2"},
                        {"client":"python", "query_type": "table", "depends_on":"1433", "wait":1, "query": "insert into test14_append_stream3_1(k, kkk1, kkk2) values (3, 1, 'k')"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test14_append_stream2_1(j, kk1, kk2) values (2, 1, 'k')"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test14_append_stream1_1(i, k1, k2) values (1, 1, 'k')"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test14_append_stream2_1(j, kk1, kk2) values (4, 1, 'k')"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test14_append_stream1_1(i, k1, k2) values (1, 1, 'k')"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test14_append_stream3_1(k, kkk1, kkk2, _tp_delta) values (3, 1, 'k', -1)"},
                        {"client":"python", "query_type": "table", "kill":"1433", "kill_wait":3, "wait":1, "query": "insert into test14_append_stream3_1(k, kkk1, kkk2) values (5, 1, 'k')"}
                    ]
                }
            ],
            "expected_results": [
                {
                    "query_id":"1433",
                    "expected_results":[
                        [1, 1, "k", 2, 1, "k", 3, 1, "k", 1],
                        [1, 1, "k", 4, 1, "k", 3, 1, "k", 1]
                    ]
                }
            ]
        },
        {
            "id": 34,
            "tags": ["changelog", "append-only", "versioned_kv","multiple stream joins"],
            "name": "append-only inner all join versioned_kv inner all join changelog(all primary keys join)",
            "description": "append-only inner all join versioned_kv inner all join changelog(all primary keys join)",
            "steps": [
                {
                    "statements": [
                        {"client":"python", "query_type":"table", "query":"drop stream if exists test14_append_stream1_1"},
                        {"client":"python", "query_type":"table", "query":"drop stream if exists test14_append_stream2_1"},
                        {"client":"python", "query_type":"table", "query":"drop stream if exists test14_append_stream3_1"},
                        {"client":"python", "query_type": "table", "exist":"test14_append_stream1_1", "exist_wait":2, "wait":1, "query":"create stream if not exists test14_append_stream1_1 (i int, k1 int, k2 string)"},
                        {"client":"python", "query_type": "table", "exist":"test14_append_stream2_1", "exist_wait":2, "wait":1, "query":"create stream if not exists test14_append_stream2_1 (j int, kk1 int, kk2 string) primary key(kk1, kk2) settings mode='versioned_kv'"},
                        {"client":"python", "query_type": "table", "exist":"test14_append_stream3_1", "exist_wait":2, "wait":1, "query":"create stream if not exists test14_append_stream3_1 (k int, kkk1 int, kkk2 string) settings mode='changelog'"},
                        {"client":"python", "query_type": "stream", "query_id":"1434", "wait":1, "terminate":"manual", "query":"select a.i, a.k1, a.k2, b.j, b.kk1, b.kk2, c.k, c.kkk1, c.kkk2, _tp_delta from test14_append_stream1_1 as a inner all join test14_append_stream2_1 as b on a.k1 = b.kk1 inner all join test14_append_stream3_1 as c on b.kk1 = c.kkk1 and b.kk2 = c.kkk2"},
                        {"client":"python", "query_type": "table", "depends_on":"1434", "wait":1, "query": "insert into test14_append_stream3_1(k, kkk1, kkk2) values (3, 1, 'k')"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test14_append_stream2_1(j, kk1, kk2) values (2, 1, 'k')"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test14_append_stream1_1(i, k1, k2) values (1, 1, 'k')"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test14_append_stream2_1(j, kk1, kk2) values (4, 1, 'k')"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test14_append_stream1_1(i, k1, k2) values (1, 1, 'k')"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test14_append_stream3_1(k, kkk1, kkk2, _tp_delta) values (3, 1, 'k', -1)"},
                        {"client":"python", "query_type": "table", "kill":"1434", "kill_wait":3, "wait":1, "query": "insert into test14_append_stream3_1(k, kkk1, kkk2) values (5, 1, 'k')"}
                    ]
                }
            ],
            "expected_results": [
                {
                    "query_id":"1434",
                    "expected_results":[
                        [1, 1, "k", 2, 1, "k", 3, 1, "k", 1],
                        [1, 1, "k", 4, 1, "k", 3, 1, "k", 1]
                    ]
                }
            ]
        },
        {
            "id": 35,
            "tags": ["changelog", "append-only", "versioned_kv","multiple stream joins"],
            "name": "append-only inner all join versioned_kv inner all join changelog(partial primary keys join)",
            "description": "append-only inner all join versioned_kv inner all join changelog(partial primary keys join)",
            "steps": [
                {
                    "statements": [
                        {"client":"python", "query_type":"table", "query":"drop stream if exists test14_append_stream1_1"},
                        {"client":"python", "query_type":"table", "query":"drop stream if exists test14_append_stream2_1"},
                        {"client":"python", "query_type":"table", "query":"drop stream if exists test14_append_stream3_1"},
                        {"client":"python", "query_type": "table", "exist":"test14_append_stream1_1", "exist_wait":2, "wait":1, "query":"create stream if not exists test14_append_stream1_1 (i int, k1 int, k2 string)"},
                        {"client":"python", "query_type": "table", "exist":"test14_append_stream2_1", "exist_wait":2, "wait":1, "query":"create stream if not exists test14_append_stream2_1 (j int, kk1 int, kk2 string) primary key (kk1, kk2) settings mode='versioned_kv'"},
                        {"client":"python", "query_type": "table", "exist":"test14_append_stream3_1", "exist_wait":2, "wait":1, "query":"create stream if not exists test14_append_stream3_1 (k int, kkk1 int, kkk2 string) settings mode='changelog'"},
                        {"client":"python", "query_type": "stream", "query_id":"1435", "wait":1, "terminate":"manual", "query":"select a.i, a.k1, a.k2, b.j, b.kk1, b.kk2, c.k, c.kkk1, c.kkk2, _tp_delta from test14_append_stream1_1 as a inner all join test14_append_stream2_1 as b on a.k1 = b.kk1 inner all join test14_append_stream3_1 as c on b.kk1 = c.kkk1 and b.kk2 = c.kkk2"},
                        {"client":"python", "query_type": "table", "depends_on":"1435", "wait":1, "query": "insert into test14_append_stream3_1(k, kkk1, kkk2) values (3, 1, 'k')"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test14_append_stream2_1(j, kk1, kk2) values (2, 1, 'k')"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test14_append_stream1_1(i, k1, k2) values (1, 1, 'k')"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test14_append_stream2_1(j, kk1, kk2) values (4, 1, 'k1')"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test14_append_stream2_1(j, kk1, kk2) values (5, 1, 'k')"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test14_append_stream1_1(i, k1, k2) values (1, 1, 'k')"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test14_append_stream3_1(k, kkk1, kkk2, _tp_delta) values (3, 1, 'k', -1)"},
                        {"client":"python", "query_type": "table", "kill":"1435", "kill_wait":3, "wait":1, "query": "insert into test14_append_stream3_1(k, kkk1, kkk2) values (5, 1, 'k')"}
                    ]
                }
            ],
            "expected_results": [
                {
                    "query_id":"1435",
                    "expected_results":[
                        [1, 1, "k", 2, 1, "k", 3, 1, "k", 1],
                        [1, 1, "k", 5, 1, "k", 3, 1, "k", 1]
                    ]
                }
            ]
        },
        {
            "id": 36,
            "tags": ["changelog", "append-only", "versioned_kv","multiple stream joins"],
            "name": "append-only inner all join versioned_kv inner all join changelog(no primary keys join)",
            "description": "append-only inner all join versioned_kv inner all join changelog(no primary keys join)",
            "steps": [
                {
                    "statements": [
                        {"client":"python", "query_type":"table", "query":"drop stream if exists test14_append_stream1_1"},
                        {"client":"python", "query_type":"table", "query":"drop stream if exists test14_append_stream2_1"},
                        {"client":"python", "query_type":"table", "query":"drop stream if exists test14_append_stream3_1"},
                        {"client":"python", "query_type": "table", "exist":"test14_append_stream1_1", "exist_wait":2, "wait":1, "query":"create stream if not exists test14_append_stream1_1 (i int, k1 int, k2 string) primary key (k1, k2) settings mode='versioned_kv'"},
                        {"client":"python", "query_type": "table", "exist":"test14_append_stream2_1", "exist_wait":2, "wait":1, "query":"create stream if not exists test14_append_stream2_1 (j int, kk1 int, kk2 string) primary key (kk1, kk2) settings mode='versioned_kv'"},
                        {"client":"python", "query_type": "table", "exist":"test14_append_stream3_1", "exist_wait":2, "wait":1, "query":"create stream if not exists test14_append_stream3_1 (k int, kkk1 int, kkk2 string) settings mode='changelog'"},
                        {"client":"python", "query_type": "stream", "query_id":"1436", "wait":1, "terminate":"manual", "query":"select a.i, a.k1, a.k2, b.j, b.kk1, b.kk2, c.k, c.kkk1, c.kkk2, _tp_delta from test14_append_stream1_1 as a inner all join test14_append_stream2_1 as b on a.k1 = b.kk1 inner all join test14_append_stream3_1 as c on b.kk1 = c.kkk1 and b.kk2 = c.kkk2"},
                        {"client":"python", "query_type": "table", "depends_on":"1436", "wait":1, "query": "insert into test14_append_stream3_1(k, kkk1, kkk2) values (3, 1, 'k')"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test14_append_stream2_1(j, kk1, kk2) values (2, 1, 'k')"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test14_append_stream1_1(i, k1, k2) values (1, 1, 'k')"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test14_append_stream2_1(j, kk1, kk2) values (4, 1, 'k')"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test14_append_stream1_1(i, k1, k2) values (1, 1, 'k')"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test14_append_stream2_1(j, kk1, kk2) values (5, 2, 'k')"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test14_append_stream1_1(i, k1, k2) values (1, 1, 'k')"},
                        {"client":"python", "query_type": "table", "kill":"1436", "kill_wait":3, "wait":1, "query": "insert into test14_append_stream3_1(k, kkk1, kkk2, _tp_delta) values (3, 1, 'k', -1)"}
                    ]
                }
            ],
            "expected_results": [
                {
                    "query_id":"1436",
                    "expected_results":[
                        [1, 1, "k", 2, 1, "k", 3, 1, "k", 1],
                        [1, 1, "k", 2, 1, "k", 3, 1, "k", -1],
                        [1, 1, "k", 4, 1, "k", 3, 1, "k", 1],
                        [1, 1, "k", 4, 1, "k", 3, 1, "k", -1],
                        [1, 1, "k", 4, 1, "k", 3, 1, "k", 1],
                        [1, 1, "k", 4, 1, "k", 3, 1, "k", -1],
                        [1, 1, "k", 4, 1, "k", 3, 1, "k", 1],
                        [1, 1, "k", 4, 1, "k", 3, 1, "k", -1]
                    ]
                }
            ]
        },
        {
            "id": 37,
            "tags": ["versioned_kv","multiple stream joins"],
            "name": "versioned_kv inner all join versioned_kv inner all join versioned_kv(all primary keys join)",
            "description": "append-only inner all join versioned_kv inner all join changelog(all primary keys join)",
            "steps": [
                {
                    "statements": [
                        {"client":"python", "query_type":"table", "query":"drop stream if exists test14_append_stream1_1"},
                        {"client":"python", "query_type":"table", "query":"drop stream if exists test14_append_stream2_1"},
                        {"client":"python", "query_type":"table", "query":"drop stream if exists test14_append_stream3_1"},
                        {"client":"python", "query_type": "table", "exist":"test14_append_stream1_1", "exist_wait":2, "wait":1, "query":"create stream if not exists test14_append_stream1_1 (i int, k1 int, k2 string) primary key (k1, k2) settings mode='versioned_kv'"},
                        {"client":"python", "query_type": "table", "exist":"test14_append_stream2_1", "exist_wait":2, "wait":1, "query":"create stream if not exists test14_append_stream2_1 (j int, kk1 int, kk2 string) primary key (kk1, kk2) settings mode='versioned_kv'"},
                        {"client":"python", "query_type": "table", "exist":"test14_append_stream3_1", "exist_wait":2, "wait":1, "query":"create stream if not exists test14_append_stream3_1 (k int, kkk1 int, kkk2 string) primary key (kkk1, kkk2) settings mode='versioned_kv'"},
                        {"client":"python", "query_type": "stream", "query_id":"1437", "wait":1, "terminate":"manual", "query":"select a.i, a.k1, a.k2, b.j, b.kk1, b.kk2, c.k, c.kkk1, c.kkk2, _tp_delta from test14_append_stream1_1 as a inner all join test14_append_stream2_1 as b on a.k1 = b.kk1 and a.k2 = b.kk2 inner all join test14_append_stream3_1 as c on b.kk1 = c.kkk1 and a.kk2 = c.kkk2"},
                        {"client":"python", "query_type": "table", "depends_on":"1437", "wait":1, "query": "insert into test14_append_stream1_1(i, k1, k2) values (1, 1, 'k')"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test14_append_stream2_1(j, kk1, kk2) values (2, 1, 'k')"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test14_append_stream3_1(k, kkk1, kkk2) values (3, 1, 'k')"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test14_append_stream2_1(j, kk1, kk2) values (4, 1, 'k')"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test14_append_stream1_1(i, k1, k2) values (1, 1, 'k')"},
                        {"client":"python", "query_type": "table", "kill":"1437", "kill_wait":3, "wait":1, "query": "insert into test14_append_stream3_1(k, kkk1, kkk2) values (5, 1, 'k')"}
                    ]
                }
            ],
            "expected_results": [
                {
                    "query_id":"1437",
                    "expected_results":[
                        [1, 1, "k", 2, 1, "k", 3, 1, "k", 1],
                        [1, 1, "k", 2, 1, "k", 3, 1, "k", -1],
                        [1, 1, "k", 4, 1, "k", 3, 1, "k", 1],
                        [1, 1, "k", 4, 1, "k", 3, 1, "k", -1],
                        [1, 1, "k", 4, 1, "k", 3, 1, "k", 1],
                        [1, 1, "k", 4, 1, "k", 3, 1, "k", -1],
                        [1, 1, "k", 4, 1, "k", 5, 1, "k", 1]
                    ]
                }
            ]
        },
        {
            "id": 38,
            "tags": ["versioned_kv","multiple stream joins"],
            "name": "versioned_kv inner all join versioned_kv inner all join versioned_kv(partial primary keys join)",
            "description": "append-only inner all join versioned_kv inner all join changelog(partial primary keys join)",
            "steps": [
                {
                    "statements": [
                        {"client":"python", "query_type":"table", "query":"drop stream if exists test14_append_stream1_1"},
                        {"client":"python", "query_type":"table", "query":"drop stream if exists test14_append_stream2_1"},
                        {"client":"python", "query_type":"table", "query":"drop stream if exists test14_append_stream3_1"},
                        {"client":"python", "query_type": "table", "exist":"test14_append_stream1_1", "exist_wait":2, "wait":1, "query":"create stream if not exists test14_append_stream1_1 (i int, k1 int, k2 string) primary key (k1, k2) settings mode='versioned_kv'"},
                        {"client":"python", "query_type": "table", "exist":"test14_append_stream2_1", "exist_wait":2, "wait":1, "query":"create stream if not exists test14_append_stream2_1 (j int, kk1 int, kk2 string) primary key (kk1, kk2) settings mode='versioned_kv'"},
                        {"client":"python", "query_type": "table", "exist":"test14_append_stream3_1", "exist_wait":2, "wait":1, "query":"create stream if not exists test14_append_stream3_1 (k int, kkk1 int, kkk2 string) primary key (kkk1, kkk2) settings mode='versioned_kv'"},
                        {"client":"python", "query_type": "stream", "query_id":"1438", "wait":1, "terminate":"manual", "query":"select a.i, a.k1, a.k2, b.j, b.kk1, b.kk2, c.k, c.kkk1, c.kkk2, _tp_delta from test14_append_stream1_1 as a inner all join test14_append_stream2_1 as b on a.k1 = b.kk1 inner all join test14_append_stream3_1 as c on b.kk1 = c.kkk1 and b.kk2 = c.kkk2"},
                        {"client":"python", "query_type": "table", "depends_on":"1438", "wait":1, "query": "insert into test14_append_stream3_1(k, kkk1, kkk2) values (3, 1, 'k')"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test14_append_stream2_1(j, kk1, kk2) values (2, 1, 'k')"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test14_append_stream1_1(i, k1, k2) values (1, 1, 'k')"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test14_append_stream2_1(j, kk1, kk2) values (4, 1, 'k1')"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test14_append_stream2_1(j, kk1, kk2) values (5, 1, 'k')"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test14_append_stream1_1(i, k1, k2) values (1, 1, 'k')"},
                        {"client":"python", "query_type": "table", "kill":"1438", "kill_wait":3, "wait":1, "query": "insert into test14_append_stream3_1(k, kkk1, kkk2) values (6, 1, 'k1')"}
                    ]
                }
            ],
            "expected_results": [
                {
                    "query_id":"1438",
                    "expected_results":[
                        [1, 1, "k", 2, 1, "k", 3, 1, "k", 1],
                        [1, 1, "k", 2, 1, "k", 3, 1, "k", -1],
                        [1, 1, "k", 5, 1, "k", 3, 1, "k", 1],
                        [1, 1, "k", 5, 1, "k", 3, 1, "k", -1],
                        [1, 1, "k", 5, 1, "k", 3, 1, "k", 1],
                        [1, 1, "k", 4, 1, "k1", 6, 1, "k1", 1]
                    ]
                }
            ]
        }


    ]
}