{
    "test_suite_name": "changelog_stream",
    "tag": "smoke",

    "test_suite_config":{
        "setup": {
            "statements": [
                {"client":"python", "query_type": "table","wait":1, "query":"drop stream if exists changelog_stream"},
        {"client":"python", "query_type": "table", "wait":2, "query":"create stream if not exists changelog_stream(i int) settings mode='changelog'"},
        {"client":"python", "query_type": "table","wait":1, "query":"drop stream if exists test14_changelog_kv_stream"},
        {"client":"python", "query_type": "table", "wait":2, "query":"create stream if not exists test14_changelog_kv_stream(i int, s string) primary key s settings mode='changelog_kv'"}
            ]
        },    
        "tests_2_run": {"ids_2_run": ["all"], "tags_2_run":[], "tags_2_skip":{"default":["todo", "to_support", "change", "bug", "sample", "native_not_support"],"cluster": ["view", "cluster_table_bug"]}}
    },
    "comments": "Tests covering the single shard changelog stream query smoke cases.",
    "tests": [
        {
            "id": 0,
            "tags": ["changelog_stream"],
      "name": "single shard changelog stream",
      "description": "single shard changelog stream creation and query",
            "steps":[
                {
                    "statements": [
            {"client":"python","query_id":"1400", "depends_on_stream":"changelog_stream","query_end_timer":7, "query_type": "stream", "query":"select i, _tp_delta from changelog_stream;"},
            {"client":"python", "query_type": "table","depends_on":1400, "wait":2, "query": "insert into changelog_stream(i) values (1)"},
            {"client":"python", "query_type": "table", "wait":1, "query": "insert into changelog_stream(i, _tp_delta) values (1, -1)"}
                    ]
                }
            ],
            "expected_results": [
                {
                    "query_id":"1400",
                    "expected_results":[
            [1, 1], [1, -1]
                    ]
                }
            ]
        },
        {
            "id": 1,
      "tags": ["test14_changelog_kv_stream"],
            "name": "single shard changelog_kv stream",
            "description": "single shard changelog_kv stream creation and query",
            "steps":[
                {
                    "statements": [
            {"client":"python", "query_type": "table", "wait":1,"depends_on_stream":"test14_changelog_kv_stream", "query": "insert into test14_changelog_kv_stream(i, s) values (1, 'a')"},
            {"client":"python", "query_type": "table", "wait":1,"depends_on_stream":"test14_changelog_kv_stream", "query": "insert into test14_changelog_kv_stream(i, s) values (2, 'b')"},
            {"client":"python", "query_type": "table", "wait":1,"depends_on_stream":"test14_changelog_kv_stream", "query": "insert into test14_changelog_kv_stream(i, s, _tp_delta) values (1, 'a', -1), (2, 'b', -1), (3, 'b', 1), (4, 'c', 1)"},
            {"client":"python","query_id":"1401", "wait":2, "depends_on_stream":"test14_changelog_kv_stream","query_end_timer":10, "query_type": "stream", "query":"select i, s, _tp_delta from test14_changelog_kv_stream;"},
            {"client":"python", "query_type": "table", "depends_on":1401, "wait":1,"depends_on_stream":"test14_changelog_kv_stream", "query": "insert into test14_changelog_kv_stream(i, s) values (5, 'd')"},
            {"client":"python", "query_type": "table", "wait":2,"depends_on_stream":"test14_changelog_kv_stream", "query": "insert into test14_changelog_kv_stream(i, s, _tp_delta) values (4, 'c', -1)"}
                    ]
                }
            ],
            "expected_results": [
                {
                    "query_id":"1401",
                    "expected_results":[
                        [3, "b", 1], [4, "c", 1], [5, "d", 1], [4, "c", -1]
                    ]
                }
            ]
        },
        {
            "id": 2,
            "tags": ["changelog_stream"],
            "name": "single shard changelog stream via rest",
            "description": "single shard changelog stream creation via rest",
            "steps":[
                {
                    "statements": [
                        {"client":"python", "query_type": "table","wait":1, "query":"drop stream if exists changelog_stream_rest"},
                        {"client":"rest", "query_type": "table", "wait": 2, "rest_type": "raw", "query_url":"/proton/v1/ddl/streams", "query_id": "1402","http_method": "POST",
                        "data" : {"name": "changelog_stream_rest", "columns": [{"name": "i", "type": "int"}], "mode": "changelog"}}
                    ]
                }
            ],
            "expected_results": [
                {
                    "query_id":"1402",
                    "expected_results": {"request_id": "1402"}
                }
            ]
        },
        {
            "id": 3,
            "tags": ["changelog_stream"],
            "name": "single shard changelog_kv stream via rest",
            "description": "single shard changelog_kv stream creation via rest",
            "steps":[
                {
                    "statements": [
            {"client":"python", "query_type": "table","wait":1, "query":"drop stream if exists test14_changelog_kv_stream_rest"},
                        {"client":"rest", "query_type": "table", "wait": 2, "rest_type": "raw", "query_url":"/proton/v1/ddl/streams", "query_id": "1403","http_method": "POST",
              "data" : {"name": "test14_changelog_kv_stream_rest", "columns": [{"name": "i", "type": "int"}, {"name": "k", "type": "string"}], "mode": "changelog_kv", "primary_key": "k"}}
                    ]
                }
            ],
            "expected_results": [
                {
                    "query_id":"1403",
                    "expected_results": {"request_id": "1403"}
                }
            ]
        },
        {
            "id": 4,
            "tags": ["changelog_kv_aggr"],
            "name": "aggr_func_count_and_sum_changelog_kv",
            "description": "aggregation function count and sum changelog_kv",
            "steps":[
                {
                    "statements": [
                        {"client":"python", "query_type": "table", "query":"drop stream if exists test14_changelog_kv_stream"},
                        {"client":"python", "query_type": "table", "exist":"test14_changelog_kv_stream", "exist_wait":2, "wait":1, "query":"create stream if not exists test14_changelog_kv_stream(id int, val float) primary key id settings mode='changelog_kv'"}, 
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test14_changelog_kv_stream(id, val) values (1, 1.1), (2, 2.2), (3, 3.3)"},
                        {"client":"python", "query_type": "stream", "query_id":"1404", "depends_on_stream":"test14_changelog_kv_stream", "wait":1, "terminate":"manual", "query":"select count(val), min(val), max(val), sum(val), avg(val) from test14_changelog_kv_stream emit periodic 1s"},
                        {"client":"python", "query_type": "stream", "query_id":"1404-2", "depends_on_stream":"test14_changelog_kv_stream", "wait":1, "terminate":"manual", "query":"select count_if(val, val > 2), min_if(val, val > 2), max_if(val, val > 2), sum_if(val, val > 2), avg_if(val, val > 2) from test14_changelog_kv_stream emit periodic 1s"},
                        {"client":"python", "query_type": "table", "depends_on":"1404-2", "wait":1, "query": "insert into test14_changelog_kv_stream(id, val) values (4, 4.4), (5, 5.5)"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test14_changelog_kv_stream(id, val, _tp_delta) values (3, 3.3, -1)"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test14_changelog_kv_stream(id, val, _tp_delta) values (1, 1.1, -1)"},
                        {"client":"python", "query_type": "table", "kill":"1404,1404-2", "kill_wait":3, "wait":1, "query": "insert into test14_changelog_kv_stream(id, val, _tp_delta) values (5, 5.5, -1)"}
                    ]
                }
            ],
            "expected_results": [
                {
                    "query_id":"1404",
                    "expected_results":[
                        ["3", "1.1", "3.3", "6.6", "2.2"],
                        ["5", "1.1", "5.5", "16.5", "3.3"],
                        ["4", "1.1", "5.5", "13.2", "3.3"],
                        ["3", "2.2", "5.5", "12.1", "4.0333333"],
                        ["2", "2.2", "4.4", "6.6", "3.3"]
                    ]
                },
                {
                    "query_id":"1404-2",
                    "expected_results":[
                        ["2", "2.2", "3.3", "5.5", "2.75"],
                        ["4", "2.2", "5.5", "15.4", "3.85"],
                        ["3", "2.2", "5.5", "12.1", "4.0333333"],
                        ["3", "2.2", "5.5", "12.1", "4.0333333"],
                        ["2", "2.2", "4.4", "6.6", "3.3"]
                    ]
                }
            ]
        },
        {
            "id": 5,
            "tags": ["changelog_kv_aggr", "native_not_support", "bug"],
            "name": "aggr_func_count_distinct_and_count_if_changelog_kv",
            "description": "aggregation function count_distinct and count_if changelog_kv",
            "steps":[
                {
                    "statements": [
                    {"client":"python", "query_type": "table", "query":"drop stream if exists test14_changelog_kv_stream"},
                    {"client":"python", "query_type": "table", "exist":"test14_changelog_kv_stream", "exist_wait":2, "wait":1, "query":"create stream if not exists test14_changelog_kv_stream(id int, val float) primary key id settings mode='changelog_kv'"}, 
                    {"client":"python", "query_type": "table", "wait":1, "query": "insert into test14_changelog_kv_stream(id, val) values (1, 1.1), (2, 2.2), (3, 3.3)"},
                    {"client":"python", "query_type": "stream", "query_id":"1405", "depends_on_stream":"test14_changelog_kv_stream", "wait":1, "terminate":"manual", "query":"select count(1), count_distinct(val), count_if(val > 2) from test14_changelog_kv_stream emit periodic 1s"},
                    {"client":"python", "query_type": "table", "depends_on":"1405", "wait":1, "query": "insert into test14_changelog_kv_stream(id, val) values (4, 4.4), (5, 5.5)"},
                    {"client":"python", "query_type": "table", "wait":1, "query": "insert into test14_changelog_kv_stream(id, _tp_delta) values (3, -1)"},
                    {"client":"python", "query_type": "table", "wait":1, "query": "insert into test14_changelog_kv_stream(id, _tp_delta) values (1, -1)"},
                    {"client":"python", "query_type": "table", "kill":"1405", "kill_wait":3, "wait":1, "query": "insert into test14_changelog_kv_stream(id, _tp_delta) values (5, -1)"}
                    ]
                }
            ],
            "expected_results": [
                {
                    "query_id":"1405",
                    "expected_results":[
                        ["3", "3", "2"],
                        ["5", "5", "4"],
                        ["4", "4", "3"],
                        ["3", "3", "3"],
                        ["2", "2", "2"]
                    ]
                }
            ]
        },
        {
            "id": 6,
            "tags": ["changelog_kv_aggr", "native_not_support", "bug"],
            "name": "aggr_func_unique_exact_and_unique_exact_changelog_kv",
            "description": "aggregation function unique_exact and unique_exact changelog_kv",
            "steps":[
                {
                    "statements": [
                    {"client":"python", "query_type": "table", "query":"drop stream if exists test14_changelog_kv_stream"},
                    {"client":"python", "query_type": "table", "exist":"test14_changelog_kv_stream", "exist_wait":2, "wait":1, "query":"create stream if not exists test14_changelog_kv_stream(id int, val float) primary key id settings mode='changelog_kv'"}, 
                    {"client":"python", "query_type": "table", "wait":1, "query": "insert into test14_changelog_kv_stream(id, val) values (1, 1.1), (2, 2.2), (3, 3.3)"},
                    {"client":"python", "query_type": "stream", "query_id":"1406", "depends_on_stream":"test14_changelog_kv_stream", "wait":1, "terminate":"manual", "query":"select unique(id), unique_exact(val), unique_exact_if(val > 2) from test14_changelog_kv_stream emit periodic 1s"},
                    {"client":"python", "query_type": "table", "depends_on":"1406", "wait":1, "query": "insert into test14_changelog_kv_stream(id, val) values (4, 4.4), (5, 5.5)"},
                    {"client":"python", "query_type": "table", "wait":1, "query": "insert into test14_changelog_kv_stream(id, _tp_delta) values (2, -1)"},
                    {"client":"python", "query_type": "table", "kill":"1406", "kill_wait":3, "wait":1, "query": "insert into test14_changelog_kv_stream(id, _tp_delta) values (3, -1)"}
                    ]
                }
            ],
            "expected_results": [
                {
                    "query_id":"1406",
                    "expected_results":[
                        ["3", "2", "1"],
                        ["5", "3", "2"],
                        ["4", "3", "2"],
                        ["3", "2", "1"]
                    ]
                }
            ]
        },
        {
            "id": 7,
            "tags": ["changelog_kv_aggr", "native_not_support", "bug"],
            "name": "aggr_func_median_and_quantile_changelog_kv",
            "description": "aggregation function median and quantile changelog_kv",
            "steps":[
                {
                    "statements": [
                    {"client":"python", "query_type": "table", "query":"drop stream if exists test14_changelog_kv_stream"},
                    {"client":"python", "query_type": "table", "exist":"test14_changelog_kv_stream", "exist_wait":2, "wait":1, "query":"create stream if not exists test14_changelog_kv_stream(id int, val float) primary key id settings mode='changelog_kv'"}, 
                    {"client":"python", "query_type": "table", "wait":1, "query": "insert into test14_changelog_kv_stream(id, val) values (1, 1.1), (2, 2.2), (3, 3.3)"},
                    {"client":"python", "query_type": "stream", "query_id":"1407", "depends_on_stream":"test14_changelog_kv_stream", "wait":1, "terminate":"manual", "query":"select median(val), quantile(val, 0.5) from test14_changelog_kv_stream emit periodic 1s"},
                    {"client":"python", "query_type": "table", "depends_on":"1407", "wait":1, "query": "insert into test14_changelog_kv_stream(id, val) values (4, 4.4), (5, 5.5)"},
                    {"client":"python", "query_type": "table", "kill":"1407", "kill_wait":3, "wait":1, "query": "insert into test14_changelog_kv_stream(id, _tp_delta) values (2, -1) (3, -1)"}
                    ]
                }
            ],
            "expected_results": [
                {
                    "query_id":"1407",
                    "expected_results":[
                        ["2.2", "2.2"],
                        ["3.3", "3.3"],
                        ["4.4", "4.4"]
                    ]
                }
            ]
        },
        {
            "id": 8,
            "tags": ["changelog_kv_aggr", "native_not_support", "bug"],
            "name": "aggr_func_top_k_changelog_kv",
            "description": "aggregation function top_k changelog_kv",
            "steps":[
                {
                    "statements": [
                    {"client":"python", "query_type": "table", "query":"drop stream if exists test14_changelog_kv_stream"},
                    {"client":"python", "query_type": "table", "exist":"test14_changelog_kv_stream", "exist_wait":2, "wait":1, "query":"create stream if not exists test14_changelog_kv_stream(id int, val float) primary key id settings mode='changelog_kv'"}, 
                    {"client":"python", "query_type": "table", "wait":1, "query": "insert into test14_changelog_kv_stream(id, val) values (1, 1.1), (1, 2.2), (3, 3.3)"},
                    {"client":"python", "query_type": "stream", "query_id":"1408", "depends_on_stream":"test14_changelog_kv_stream", "wait":1, "terminate":"manual", "query":"select top_k(id, 2) from test14_changelog_kv_stream emit periodic 1s"},
                    {"client":"python", "query_type": "table", "depends_on":"1408", "wait":1, "query": "insert into test14_changelog_kv_stream(id, val) values (4, 4.4), (4, 5.5)"},
                    {"client":"python", "query_type": "table", "kill":"1408", "kill_wait":3, "wait":1, "query": "insert into test14_changelog_kv_stream(id, _tp_delta) values (1, -1)"}
                    ]
                }
            ],
            "expected_results": [
                {
                    "query_id":"1408",
                    "expected_results":[
                        ["(1, 2),(3, 1)"],
                        ["(1, 2),(4, 2)"],
                        ["(4, 2),(3, 1)"]
                    ]
                }
            ]
        },
        {
            "id": 9,
            "tags": ["changelog_kv_aggr", "native_not_support", "bug"],
            "name": "aggr_func_min_k_and_max_k_changelog_kv",
            "description": "aggregation function min_k and max_k changelog_kv",
            "steps":[
                {
                    "statements": [
                    {"client":"python", "query_type": "table", "query":"drop stream if exists test14_changelog_kv_stream"},
                    {"client":"python", "query_type": "table", "exist":"test14_changelog_kv_stream", "exist_wait":2, "wait":1, "query":"create stream if not exists test14_changelog_kv_stream(id int, val float) primary key id settings mode='changelog_kv'"}, 
                    {"client":"python", "query_type": "table", "wait":1, "query": "insert into test14_changelog_kv_stream(id, val) values (1, 1.1), (1, 2.2), (3, 3.3)"},
                    {"client":"python", "query_type": "stream", "query_id":"1409", "depends_on_stream":"test14_changelog_kv_stream", "wait":1, "terminate":"manual", "query":"select min_k(val, 2, id), max_k(val, 2, id) from test14_changelog_kv_stream emit periodic 1s"},
                    {"client":"python", "query_type": "table", "depends_on":"1409", "wait":1, "query": "insert into test14_changelog_kv_stream(id, val) values (4, 4.4), (4, 5.5)"},
                    {"client":"python", "query_type": "table", "kill":"1409", "kill_wait":3, "wait":1, "query": "insert into test14_changelog_kv_stream(id, _tp_delta) values (1, -1) (5, -1)"}
                    ]
                }
            ],
            "expected_results": [
                {
                    "query_id":"1409",
                    "expected_results":[
                        [["(1.1, 1), (2.2, 2)"], ["(3.3, 3), (2.2, 2)"]],
                        [["(1.1, 1), (2.2, 2)"], ["(5.5, 5), (4.4, 4)"]],
                        [["(2.2, 2), (3.3, 3)"], ["(4.4, 4), (3.3, 3)"]]
                    ]
                }
            ]
        },
        {
            "id": 10,
            "tags": ["changelog_kv", "bidirectional-join"],
            "name": "changelog-kv_inner_join_changelog-kv",
            "description": "changelog-kv inner all join changelog-kv",
            "steps":[
                {
                    "statements": [
                        {"client":"python", "query_type": "table", "query":"drop stream if exists changelog_kv_stream1"},
                        {"client":"python", "query_type": "table", "query":"drop stream if exists changelog_kv_stream2"},
                        {"client":"python", "query_type": "table", "exist":"changelog_kv_stream1", "exist_wait":2, "wait":1, "query":"create stream if not exists changelog_kv_stream1(i int, s string) primary key s settings mode='changelog_kv'"}, 
                        {"client":"python", "query_type": "table", "exist":"changelog_kv_stream2", "exist_wait":2, "wait":1, "query":"create stream if not exists changelog_kv_stream2(ii int, ss string) primary key ss settings mode='changelog_kv'"}, 
                        {"client":"python", "query_type": "stream", "query_id":"1410", "wait":1, "terminate":"manual", "query":"select i, s, ii, ss, _tp_delta from changelog_kv_stream1 inner join changelog_kv_stream2 on i == ii"},
                        {"client":"python", "query_type": "table", "depends_on":"1410", "wait":1, "query": "insert into changelog_kv_stream1 (i, s) values (1, 's1')"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into changelog_kv_stream2 (ii, ss) values (1, 'ss1')"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into changelog_kv_stream1 (i, s) values (1, 's2')"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into changelog_kv_stream1 (i, s, _tp_delta) values (1, 's1', -1)"},
                        {"client":"python", "query_type": "table", "kill":"1410", "kill_wait":3, "wait":1, "query": "insert into changelog_kv_stream2 (ii, ss) values (1, 'ss2')"}
                    ]
                }
            ],
            "expected_results": [
                {
                    "query_id":"1410",
                    "expected_results":[
                        [1, "s1", 1, "ss1", 1],
                        [1, "s2", 1, "ss1", 1],
                        [1, "s1", 1, "ss1", 1],
                        [1, "s2", 1, "ss2", 1]
                    ]
                }
            ]
        }
    ]
}