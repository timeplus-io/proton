{
    "test_suite_name": "query_state7",
    "tag": "smoke",
    "test_suite_config":{
        "setup": {
            "statements": [
                {"client":"python", "query_type": "table", "wait":1, "query":"drop view if exists test19_state_view7"},
                {"client":"python", "query_type": "table", "wait":1, "query":"drop view if exists test19_state_mv7"},
                {"client":"python", "query_type": "table", "wait":1, "query":"drop stream if exists test19_state_stream7"},
                {"client":"python", "query_type": "table", "query":"drop stream if exists view_join"},
                {"client":"python", "query_type": "table", "wait":1, "query":"create stream view_join (id string, type string)"},
                {"client":"python", "query_type": "table", "depends_on_stream":"view_join", "wait":1, "query": "insert into view_join(id, type) values ('dev1', 'roof'), ('dev2', 'field'), ('dev3', 'window'), ('dev4', 'wall') ('dev5', 'roof'), ('dev6', 'window'), ('dev7', 'wall'), ('dev8', 'floor')"}
            ]
        },
        "tests_2_run": {"ids_2_run": ["all"], "tags_2_run":[], "tags_2_skip":{"default":["todo", "to_support", "change", "bug", "sample", "native_not_support"],"cluster": ["view", "cluster_table_bug"]}}
    }, 
    "comments": "Tests covering query state checkpointing smoke test cases",
    "tests": [
        {
            "id": 164,
            "tags": ["query_state", "view", "dedup"],
            "name": "dedup on stream as view",
            "description": "dedup on stream as view state checkpoint",
            "steps":[
                {
                    "statements": [
                        {"client":"python", "query_type": "table", "wait":1, "query":"drop view if exists test19_state_view7"},
                        {"client":"python", "query_type": "table", "wait":1, "query":"drop stream if exists test19_state_stream7"},
                        {"client":"python", "query_type": "table", "exist":"test19_state_stream7", "exist_wait":2, "wait":1, "query":"create stream test19_state_stream7(id int, value int, time datetime64(3,'UTC'))"},
                        {"client":"python", "query_type": "table", "exist":"test19_state_view7", "exist_wait":2, "wait":1, "query":"create view if not exists test19_state_view7 as select id, value, time, to_string(time) as time_string from dedup(test19_state_stream7, id, value, to_string(time))"},
                        {"client":"python", "query_type": "stream", "query_id":"19164",  "wait":1, "terminate":"manual", "query":"subscribe to select emit_version(), id, count(), window_start, window_end from tumble(test19_state_view7, time, 5s) group by id, window_start, window_end settings checkpoint_interval=1"},
                        {"client":"python", "query_type": "table", "depends_on":"19164", "wait":1,"query":"insert into test19_state_stream7(id, value, time) values (1, 10, '2020-01-01 00:00:00'), (2, 10, '2020-01-01 00:00:00'), (3, 10, '2020-01-01 00:00:00'), (1, 10, '2020-01-01 00:00:00'), (2, 10, '2020-01-01 00:00:00'), (3, 10, '2020-01-01 00:00:00'), (1, 10, '2020-01-01 00:00:05'), (1, 10, '2020-01-01 00:00:06')"},
                        {"client":"python", "query_type": "table", "kill":"19164", "kill_wait":3, "wait":1,"query":"insert into test19_state_stream7(id, value, time) values (1, 10, '2020-01-01 00:00:07'), (2, 10, '2020-01-01 00:00:07'), (3, 10, '2020-01-01 00:00:07'), (1, 10, '2020-01-01 00:00:07'), (2, 10, '2020-01-01 00:00:07'), (3, 10, '2020-01-01 00:00:07'), (1, 10, '2020-01-01 00:00:11'), (1, 10, '2020-01-01 00:00:12')"},
                        {"client":"python", "query_type": "table", "wait":1, "query":"unsubscribe to '19164'"}
                    ]
                }
            ],

            "expected_results": [
                {
                    "query_id":"19164", 
                    "expected_results":[
                        ["0", "3", 1, "2020-01-01 00:00:00+00:00", "2020-01-01 00:00:05+00:00"],
                        ["0", "2", 1, "2020-01-01 00:00:00+00:00", "2020-01-01 00:00:05+00:00"],
                        ["0", "1", 1, "2020-01-01 00:00:00+00:00", "2020-01-01 00:00:05+00:00"],
                        ["1", "3", 1, "2020-01-01 00:00:05+00:00", "2020-01-01 00:00:10+00:00"],
                        ["1", "2", 1, "2020-01-01 00:00:05+00:00", "2020-01-01 00:00:10+00:00"],
                        ["1", "1", 3, "2020-01-01 00:00:05+00:00", "2020-01-01 00:00:10+00:00"]
                    ]
                }
            ]
        },
        {
            "id": 165,
            "tags": ["query_state", "view", "dedup"],
            "name": "dedup on stream as view",
            "description": "dedup on stream as view, recover query view from state checkpoint",
            "steps":[
                {
                    "statements": [
                        {"client":"python", "query_type": "table", "wait":1, "query":"drop view if exists test19_state_view7"},
                        {"client":"python", "query_type": "table", "wait":1, "query":"drop stream if exists test19_state_stream7"},
                        {"client":"python", "query_type": "table", "exist":"test19_state_stream7", "exist_wait":2, "wait":1, "query":"create stream test19_state_stream7(id int, value int, time datetime64(3,'UTC'))"},
                        {"client":"python", "query_type": "table", "exist":"test19_state_view7", "exist_wait":2, "wait":1, "query":"create view if not exists test19_state_view7 as select id, value, time, to_string(time) as time_string from dedup(test19_state_stream7, id, value, to_string(time))"},
                        {"client":"python", "query_type": "stream", "query_id":"19165",  "wait":1, "terminate":"manual", "query":"subscribe to select emit_version(), id, count(), window_start, window_end from tumble(test19_state_view7, time, 5s) group by id, window_start, window_end settings checkpoint_interval=1"},
                        {"client":"python", "query_type": "table", "depends_on":"19165", "kill":"19165", "kill_wait":3, "wait":1,"query":"insert into test19_state_stream7(id, value, time) values (1, 10, '2020-01-01 00:00:00'), (2, 10, '2020-01-01 00:00:00'), (3, 10, '2020-01-01 00:00:00'), (1, 10, '2020-01-01 00:00:00'), (2, 10, '2020-01-01 00:00:00'), (3, 10, '2020-01-01 00:00:00'), (1, 10, '2020-01-01 00:00:05'), (1, 10, '2020-01-01 00:00:06')"}
                    ]
                },
                {
                    "statements": [
                        {"client":"python", "query_type": "table", "wait":1,"query":"insert into test19_state_stream7(id, value, time) values (1, 10, '2020-01-01 00:00:07'), (2, 10, '2020-01-01 00:00:07'), (3, 10, '2020-01-01 00:00:07'), (1, 10, '2020-01-01 00:00:07'), (2, 10, '2020-01-01 00:00:07'), (3, 10, '2020-01-01 00:00:07'), (1, 10, '2020-01-01 00:00:11'), (1, 10, '2020-01-01 00:00:12')"},
                        {"client":"python", "query_type": "stream","query_id":"19165-1", "terminate": "manual","wait":2, "query":"recover from '19165'"},
                        {"client":"python", "query_type": "table", "depends_on":"19165",  "wait":1, "query": "kill query where query_id='19165' sync"},
                        {"client":"python", "query_type": "table", "wait":1, "query":"unsubscribe to '19165'"}
                    ]
                }
            ],
            "expected_results": [
                {
                    "query_id":"19165", 
                    "expected_results":[
                        ["0", "3", 1, "2020-01-01 00:00:00+00:00", "2020-01-01 00:00:05+00:00"],
                        ["0", "2", 1, "2020-01-01 00:00:00+00:00", "2020-01-01 00:00:05+00:00"],
                        ["0", "1", 1, "2020-01-01 00:00:00+00:00", "2020-01-01 00:00:05+00:00"]
                    ]
                },
                {
                    "query_id":"19165-1", 
                    "expected_results":[
                        ["1", "3", 1, "2020-01-01 00:00:05+00:00", "2020-01-01 00:00:10+00:00"],
                        ["1", "2", 1, "2020-01-01 00:00:05+00:00", "2020-01-01 00:00:10+00:00"],
                        ["1", "1", 3, "2020-01-01 00:00:05+00:00", "2020-01-01 00:00:10+00:00"]
                    ]
                }
            ]
        },
        {
            "id": 166,
            "tags": ["query_state", "view", "dedup"],
            "name": "dedup on stream by calculated field as key as view",
            "description": "dedup on stream by calculated field as key as view state checkpoint",
            "steps":[
                {
                    "statements": [
                        {"client":"python", "query_type": "table", "wait":1, "query":"drop view if exists test19_state_view7"},
                        {"client":"python", "query_type": "table", "wait":1, "query":"drop stream if exists test19_state_stream7"},
                        {"client":"python", "query_type": "table", "exist":"test19_state_stream7", "exist_wait":2, "wait":1, "query":"create stream test19_state_stream7(id int, value int, time datetime64(3,'UTC'))"},
                        {"client":"python", "query_type": "table", "exist":"test19_state_view7", "exist_wait":2, "wait":1, "query":"create view if not exists test19_state_view7 as select id, value, time, to_string(time) as time_string from dedup(test19_state_stream7, id, value, to_string(time))"},
                        {"client":"python", "query_type": "stream", "query_id":"19166",  "wait":1, "terminate":"manual", "query":"subscribe to select emit_version(), id, count(), window_start, window_end from tumble(test19_state_view7, time, 5s) group by id, window_start, window_end settings checkpoint_interval=1"},
                        {"client":"python", "query_type": "table", "depends_on":"19166", "wait":1,"query":"insert into test19_state_stream7(id, value, time) values (1, 10, '2020-01-01 00:00:00'), (2, 10, '2020-01-01 00:00:00'), (3, 10, '2020-01-01 00:00:00'), (1, 10, '2020-01-01 00:00:00'), (2, 10, '2020-01-01 00:00:00'), (3, 10, '2020-01-01 00:00:00'), (1, 10, '2020-01-01 00:00:05'), (1, 10, '2020-01-01 00:00:06')"},
                        {"client":"python", "query_type": "table", "kill":"19166", "kill_wait":3, "wait":1,"query":"insert into test19_state_stream7(id, value, time) values (1, 10, '2020-01-01 00:00:07'), (2, 10, '2020-01-01 00:00:07'), (3, 10, '2020-01-01 00:00:07'), (1, 10, '2020-01-01 00:00:07'), (2, 10, '2020-01-01 00:00:07'), (3, 10, '2020-01-01 00:00:07'), (1, 10, '2020-01-01 00:00:11'), (1, 10, '2020-01-01 00:00:12')"},
                        {"client":"python", "query_type": "table", "wait":1, "query":"unsubscribe to '19166'"}
                    ]
                }
            ],

            "expected_results": [
                {
                    "query_id":"19166", 
                    "expected_results":[
                        ["0", "3", 1, "2020-01-01 00:00:00+00:00", "2020-01-01 00:00:05+00:00"],
                        ["0", "2", 1, "2020-01-01 00:00:00+00:00", "2020-01-01 00:00:05+00:00"],
                        ["0", "1", 1, "2020-01-01 00:00:00+00:00", "2020-01-01 00:00:05+00:00"],
                        ["1", "3", 1, "2020-01-01 00:00:05+00:00", "2020-01-01 00:00:10+00:00"],
                        ["1", "2", 1, "2020-01-01 00:00:05+00:00", "2020-01-01 00:00:10+00:00"],
                        ["1", "1", 3, "2020-01-01 00:00:05+00:00", "2020-01-01 00:00:10+00:00"]
                    ]
                }
            ]
        },
        {
            "id": 167,
            "tags": ["query_state", "view", "dedup"],
            "name": "dedup on stream as view",
            "description": "dedup on stream as view, recover query view from state checkpoint",
            "steps":[
                {
                    "statements": [
                        {"client":"python", "query_type": "table", "wait":1, "query":"drop view if exists test19_state_view7"},
                        {"client":"python", "query_type": "table", "wait":1, "query":"drop stream if exists test19_state_stream7"},
                        {"client":"python", "query_type": "table", "exist":"test19_state_stream7", "exist_wait":2, "wait":1, "query":"create stream test19_state_stream7(id int, value int, time datetime64(3,'UTC'))"},
                        {"client":"python", "query_type": "table", "exist":"test19_state_view7", "exist_wait":2, "wait":1, "query":"create view if not exists test19_state_view7 as select id, value, time, to_string(time) as time_string from dedup(test19_state_stream7, id, value, to_string(time))"},
                        {"client":"python", "query_type": "stream", "query_id":"19167",  "wait":1, "terminate":"manual", "query":"subscribe to select emit_version(), id, count(), window_start, window_end from tumble(test19_state_view7, time, 5s) group by id, window_start, window_end settings checkpoint_interval=1"},
                        {"client":"python", "query_type": "table", "depends_on":"19167", "kill":"19167", "kill_wait":3, "wait":1,"query":"insert into test19_state_stream7(id, value, time) values (1, 10, '2020-01-01 00:00:00'), (2, 10, '2020-01-01 00:00:00'), (3, 10, '2020-01-01 00:00:00'), (1, 10, '2020-01-01 00:00:00'), (2, 10, '2020-01-01 00:00:00'), (3, 10, '2020-01-01 00:00:00'), (1, 10, '2020-01-01 00:00:05'), (1, 10, '2020-01-01 00:00:06')"}
                    ]
                },
                {
                    "statements": [
                        {"client":"python", "query_type": "table", "wait":1,"query":"insert into test19_state_stream7(id, value, time) values (1, 10, '2020-01-01 00:00:07'), (2, 10, '2020-01-01 00:00:07'), (3, 10, '2020-01-01 00:00:07'), (1, 10, '2020-01-01 00:00:07'), (2, 10, '2020-01-01 00:00:07'), (3, 10, '2020-01-01 00:00:07'), (1, 10, '2020-01-01 00:00:11'), (1, 10, '2020-01-01 00:00:12')"},
                        {"client":"python", "query_type": "stream","query_id":"19167-1", "terminate": "manual","wait":2, "query":"recover from '19167'"},
                        {"client":"python", "query_type": "table", "depends_on":"19167",  "wait":1, "query": "kill query where query_id='19167' sync"},
                        {"client":"python", "query_type": "table", "wait":1, "query":"unsubscribe to '19167'"}
                    ]
                }
            ],

            "expected_results": [
                {
                    "query_id":"19167", 
                    "expected_results":[
                        ["0", "3", 1, "2020-01-01 00:00:00+00:00", "2020-01-01 00:00:05+00:00"],
                        ["0", "2", 1, "2020-01-01 00:00:00+00:00", "2020-01-01 00:00:05+00:00"],
                        ["0", "1", 1, "2020-01-01 00:00:00+00:00", "2020-01-01 00:00:05+00:00"]
                    ]
                },
                {
                    "query_id":"19167-1", 
                    "expected_results":[
                        ["1", "3", 1, "2020-01-01 00:00:05+00:00", "2020-01-01 00:00:10+00:00"],
                        ["1", "2", 1, "2020-01-01 00:00:05+00:00", "2020-01-01 00:00:10+00:00"],
                        ["1", "1", 3, "2020-01-01 00:00:05+00:00", "2020-01-01 00:00:10+00:00"]
                    ]
                }
            ]
        },
        {
            "id": 168,
            "tags": ["query_state", "view", "dedup"],
            "name": "tumble aggr based on tail join table view",
            "description": "tumble aggr based on tail join table view state checkpoint",
            "steps":[
                {
                    "statements": [
                        {"client":"python", "query_type": "table", "wait":1, "query":"drop view if exists test19_state_view7"},
                        {"client":"python", "query_type": "table", "wait":1, "query":"drop stream if exists test19_state_stream7"},
                        {"client":"python", "query_type": "table", "exist":"test19_state_stream7", "exist_wait":2, "wait":1, "query":"create stream test19_state_stream7 (id string, location string, value float, timestamp datetime64(3) default now64(3))"},
                        {"client":"python", "query_type": "table", "exist":"test19_state_view7", "exist_wait":2, "wait":1, "query":"create view if not exists test19_state_view7 as select a.id, b.type, a.value, a.timestamp from test19_state_stream7 as a join table(view_join) as b on a.id = b.id"},
                        {"client":"python", "query_type": "stream", "query_id":"19168",  "wait":1, "terminate":"manual", "query":"subscribe to select emit_version(), id, type, count(), sum(value), min(value), max(value), window_start, window_end from tumble(test19_state_view7, timestamp, 5s) group by id, type, window_start, window_end settings checkpoint_interval=1"},
                        {"client":"python", "query_type": "table", "depends_on":"19168", "wait":1, "query":"insert into test19_state_stream7(id, location, value, timestamp) values ('dev1', 'ca', 58.3, '2020-02-02 20:00:01')"},
                        {"client":"python", "query_type": "table", "wait":1, "query":"insert into test19_state_stream7(id, location, value, timestamp) values ('dev1', 'ca', 59, '2020-02-02 20:00:02')"},
                        {"client":"python", "query_type": "table", "wait":1, "query":"insert into test19_state_stream7(id, location, value, timestamp) values ('dev2', 'ca', 66, '2020-02-02 20:00:03')"},
                        {"client":"python", "query_type": "table", "wait":1, "query":"insert into test19_state_stream7(id, location, value, timestamp) values ('dev1', 'ca', 77, '2020-02-02 20:00:04')"},
                        {"client":"python", "query_type": "table", "kill": "19168", "kill_wait":3, "wait":1, "query":"insert into test19_state_stream7(id, location, value, timestamp) values ('dev2', 'ca', 69, '2020-02-02 20:00:05')"},
                        {"client":"python", "query_type": "table", "wait":3, "query":"unsubscribe to '19168'"}
                    ]
                }
            ],
            "expected_results": [
                {
                    "query_id":"19168", 
                    "expected_results":[
                        ["0", "dev1", "roof", 3, 194.3, 58.3, 77, "2020-02-02 20:00:00", "2020-02-02 20:00:05"],
                        ["0", "dev2", "field", 1, 66, 66, 66, "2020-02-02 20:00:00", "2020-02-02 20:00:05"]
                    ]
                }
            ]
        },
        {
            "id": 169,
            "tags": ["query_state", "view"],
            "name": "recover tumble aggr based on tail join table view",
            "description": "recover tumble aggr based on tail join table view from state checkpoint",
            "steps":[
                {
                    "statements": [
                        {"client":"python", "query_type": "table", "wait":1, "query":"drop view if exists test19_state_view7"},
                        {"client":"python", "query_type": "table", "wait":1, "query":"drop stream if exists test19_state_stream7"},
                        {"client":"python", "query_type": "table", "exist":"test19_state_stream7", "exist_wait":2, "wait":1, "query":"create stream test19_state_stream7 (id string, location string, value float, timestamp datetime64(3) default now64(3))"},
                        {"client":"python", "query_type": "table", "exist":"test19_state_view7", "exist_wait":2, "wait":1, "query":"create view if not exists test19_state_view7 as select a.id, b.type as id_type, a.value, a.timestamp from test19_state_stream7 as a join table(view_join) as b on a.id = b.id"},
                        {"client":"python", "query_type": "stream", "query_id":"19169",  "wait":1, "terminate":"manual", "query":"subscribe to select emit_version(), id, id_type, count(), sum(value), min(value), max(value), window_start, window_end from tumble(test19_state_view7, timestamp, 5s) group by id, id_type, window_start, window_end settings checkpoint_interval=1"},
                        {"client":"python", "query_type": "table", "depends_on":"19169", "wait":1, "query":"insert into test19_state_stream7(id, location, value, timestamp) values ('dev1', 'ca', 58.3, '2020-02-02 20:00:01')"},
                        {"client":"python", "query_type": "table", "wait":1, "query":"insert into test19_state_stream7(id, location, value, timestamp) values ('dev1', 'ca', 59, '2020-02-02 20:00:02')"},
                        {"client":"python", "query_type": "table", "wait":1, "query":"insert into test19_state_stream7(id, location, value, timestamp) values ('dev2', 'ca', 66, '2020-02-02 20:00:03')"},
                        {"client":"python", "query_type": "table", "wait":1, "query":"insert into test19_state_stream7(id, location, value, timestamp) values ('dev1', 'ca', 77, '2020-02-02 20:00:04')"},
                        {"client":"python", "query_type": "table", "kill": "19169", "kill_wait":3, "wait":1, "query":"insert into test19_state_stream7(id, location, value, timestamp) values ('dev2', 'ca', 69, '2020-02-02 20:00:05')"}
                    ]
                },
                {
                    "statements": [
                        {"client":"python", "query_type": "table", "wait":1, "query":"insert into test19_state_stream7(id, location, value, timestamp) values ('dev3', 'ca', 55, '2020-02-02 20:00:07')"},
                        {"client":"python", "query_type": "table", "wait":1, "query":"insert into test19_state_stream7(id, location, value, timestamp) values ('dev2', 'ca', 55, '2020-02-02 20:00:08')"},
                        {"client":"python", "query_type": "table", "wait":1, "query":"insert into test19_state_stream7(id, location, value, timestamp) values ('dev3', 'ca', 72, '2020-02-02 20:00:09')"},
                        {"client":"python", "query_type": "table", "wait":1,"query":"insert into test19_state_stream7(id, location, value, timestamp) values ('dev4', 'ca', 77, '2020-02-02 20:00:10')"},
                        {"client":"python", "query_type": "stream","query_id":"19169-1", "terminate": "manual","wait":4, "query":"recover from '19169'"},
                        {"client":"python", "query_type": "table", "depends_on":"19169", "wait":1, "query": "kill query where query_id='19169' sync"},
                        {"client":"python", "query_type": "table", "wait":1, "query":"unsubscribe to '19169'"}
                    ]
                }
            ],

            "expected_results": [
                {
                    "query_id":"19169", 
                    "expected_results":[
                        ["0", "dev1", "roof", 3, 194.3, 58.3, 77, "2020-02-02 20:00:00", "2020-02-02 20:00:05"],
                        ["0", "dev2", "field", 1, 66, 66, 66, "2020-02-02 20:00:00", "2020-02-02 20:00:05"]
                    ]
                },
                {
                    "query_id":"19169-1", 
                    "expected_results":[
                        ["1", "dev3", "window", 2, 127, 55, 72, "2020-02-02 20:00:05", "2020-02-02 20:00:10"],
                        ["1", "dev2", "field", 2, 124, 55, 69, "2020-02-02 20:00:05", "2020-02-02 20:00:10"]
                    ]
                }
            ]
        },
        {
            "id": 170,
            "tags": ["query_state", "view", "dedup"],
            "name": "global sum based on tail join table view",
            "description": "global sum based on tail join table view state checkpoint",
            "steps":[
                {
                    "statements": [
                        {"client":"python", "query_type": "table", "wait":1, "query":"drop view if exists test19_state_view7"},
                        {"client":"python", "query_type": "table", "wait":1, "query":"drop stream if exists test19_state_stream7"},
                        {"client":"python", "query_type": "table", "exist":"test19_state_stream7", "exist_wait":2, "wait":1, "query":"create stream test19_state_stream7 (id string, location string, value float, timestamp datetime64(3) default now64(3))"},
                        {"client":"python", "query_type": "table", "exist":"test19_state_view7", "exist_wait":2, "wait":1, "query":"create view if not exists test19_state_view7 as select a.id, b.type, a.value, a.timestamp from test19_state_stream7 as a join table(view_join) as b on a.id = b.id"},
                        {"client":"python", "query_type": "stream", "query_id":"19170", "wait":1, "terminate":"manual", "query":"subscribe to select id, type, count(value) from test19_state_view7 group by id, type order by id, type settings checkpoint_interval=1"},
                        {"client":"python", "query_type": "table", "depends_on":"19170", "wait":1, "query":"insert into test19_state_stream7(id, location, value, timestamp) values ('dev1', 'ca', 58.3, '2020-02-02 20:00:01') ('dev1', 'ca', 59, '2020-02-02 20:00:02') ('dev2', 'ca', 66, '2020-02-02 20:00:03') ('dev1', 'ca', 77, '2020-02-02 20:00:04')"},
                        {"client":"python", "query_type": "table", "wait":3, "query":"unsubscribe to '19170'"}
                    ]
                }
            ],
            "expected_results": [
                {
                    "query_id":"19170", 
                    "expected_results":[
                        ["dev1", "roof", "3"], 
                        ["dev2", "field", "1"]
                    ]
                }
            ]
        },
        {
            "id": 171,
            "tags": ["query_state", "view"],
            "name": "recover global sum based on tail join table view",
            "description": "recover global sum based on tail join table view from state checkpoint",
            "steps":[
                {
                    "statements": [
                        {"client":"python", "query_type": "table", "wait":1, "query":"drop view if exists test19_state_view7"},
                        {"client":"python", "query_type": "table", "wait":1, "query":"drop stream if exists test19_state_stream7"},
                        {"client":"python", "query_type": "table", "exist":"test19_state_stream7", "exist_wait":2, "wait":1, "query":"create stream test19_state_stream7 (id string, location string, value float, timestamp datetime64(3) default now64(3))"},
                        {"client":"python", "query_type": "table", "exist":"test19_state_view7", "exist_wait":2, "wait":1, "query":"create view if not exists test19_state_view7 as select a.id, b.type, a.value, a.timestamp from test19_state_stream7 as a join table(view_join) as b on a.id = b.id"},
                        {"client":"python", "query_type": "stream", "query_id":"19171",  "wait":1, "terminate":"manual", "query":"subscribe to select id, type, count(value) from test19_state_view7 group by id, type order by id, type settings checkpoint_interval=1"},
                        {"client":"python", "query_type": "table", "depends_on":"19171", "kill": "19171", "kill_wait":3, "wait":1, "query":"insert into test19_state_stream7(id, location, value, timestamp) values ('dev1', 'ca', 58.3, '2020-02-02 20:00:01') ('dev1', 'ca', 59, '2020-02-02 20:00:02') ('dev2', 'ca', 66, '2020-02-02 20:00:03') ('dev1', 'ca', 77, '2020-02-02 20:00:04') "}
                    ]
                },
                {
                    "statements": [
                        {"client":"python", "query_type": "table", "kill": "19171", "kill_wait":3, "wait":3, "query":"insert into test19_state_stream7(id, location, value, timestamp) values ('dev2', 'ca', 69, '2020-02-02 20:00:05') ('dev3', 'ca', 55, '2020-02-02 20:00:07') ('dev2', 'ca', 55, '2020-02-02 20:00:08') ('dev3', 'ca', 72, '2020-02-02 20:00:09')"},
                        {"client":"python", "query_type": "stream","query_id":"19171-1", "terminate": "manual","wait":4, "query":"recover from '19171'"},
                        {"client":"python", "query_type": "table", "depends_on":"19171", "wait":1, "query": "kill query where query_id='19171' sync"},
                        {"client":"python", "query_type": "table", "wait":1, "query":"unsubscribe to '19171'"}
                    ]
                }
            ],

            "expected_results": [
                {
                    "query_id":"19171", 
                    "expected_results":[
                        ["dev1", "roof", "3"], 
                        ["dev2", "field", "1"]
                    ]
                },
                {
                    "query_id":"19171-1", 
                    "expected_results":[
                        ["dev1", "roof", "3"], 
                        ["dev2", "field", "3"], 
                        ["dev3", "window", "2"]
                    ]
                }
            ]
        },
        {
            "id": 172,
            "tags": ["query_state", "materialized view"],
            "name": "streaming tail from materialized view as 5s tumble window aggr",
            "description": "streaming tail from materialized view as tumble window aggregation state checkpoint",
            "steps":[
                {
                    "statements": [
                        {"client":"python", "query_type": "table", "wait":1, "query":"drop view if exists test19_state_mv7"},
                        {"client":"python", "query_type": "table", "wait":1, "query":"drop view if exists test19_state_view7"},
                        {"client":"python", "query_type": "table", "wait":1, "query":"drop stream if exists test19_state_stream7"},
                        {"client":"python", "query_type": "table", "exist":"test19_state_stream7", "exist_wait":2, "wait":1, "query":"create stream test19_state_stream7 (id string, location string, value float, timestamp datetime64(3) default now64(3))"},
                        {"client":"python", "query_type": "table", "exist":"test19_state_mv7", "exist_wait":2, "wait":1, "query":"create materialized view test19_state_mv7 as select id, sum(value) as sum_value, window_start as win_start, window_end as win_end from tumble(test19_state_stream7, timestamp, 5s) group by id, window_start, window_end"},
                        {"client":"python", "query_type": "stream", "query_id":"19172", "wait":1, "terminate":"manual", "query":"subscribe to select id, sum_value, win_start, win_end from test19_state_mv7 settings checkpoint_interval=1"},
                        {"client":"python", "query_type": "table", "depends_on":"19172", "wait":1, "query": "insert into test19_state_stream7(id, location, value, timestamp) values ('dev1', 'ca', 58.3, '2020-02-02 20:00:01') ('dev1', 'ca', 59, '2020-02-02 20:00:02') ('dev2', 'ca', 66, '2020-02-02 20:00:03')"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test19_state_stream7(id, location, value, timestamp) values ('dev1', 'ca', 77, '2020-02-02 20:00:04') ('dev2', 'ca', 69, '2020-02-02 20:00:05') ('dev3', 'ca', 55, '2020-02-02 20:00:07')"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test19_state_stream7(id, location, value, timestamp) values ('dev3', 'ca', 55, '2020-02-02 20:00:07') ('dev2', 'ca', 69, '2020-02-02 20:00:08') ('dev3', 'ca', 72, '2020-02-02 20:00:09')"},  
                        {"client":"python", "query_type": "table", "kill":"19172", "kill_wait":3, "wait":1, "query": "insert into test19_state_stream7(id, location, value, timestamp) values ('dev6', 'ca', 66, '2020-02-02 20:00:11')"},                      
                        {"client":"python", "query_type": "table", "wait":3, "query":"unsubscribe to '19172'"},
                        {"client":"python", "query_type": "table", "query":"drop view if exists test19_state_mv7"}
                    ]
                }
            ],
            "expected_results": [
                {
                    "query_id":"19172", 
                    "expected_results":[
                        ["dev1", "194.3", "2020-02-02 20:00:00", "2020-02-02 20:00:05"], 
                        ["dev2", "66.0", "2020-02-02 20:00:00", "2020-02-02 20:00:05"], 
                        ["dev3", "182.0", "2020-02-02 20:00:05", "2020-02-02 20:00:10"], 
                        ["dev2", "138.0", "2020-02-02 20:00:05", "2020-02-02 20:00:10"]
                    ]
                }
            ]
        },
        {
            "id": 173,
            "tags": ["query_state", "materialized view"],
            "name": "recover streaming tail from materialized view as 5s tumble window aggr",
            "description": "recover streaming tail from materialized view as 5s tumble window aggrfrom state checkpoint",
            "steps":[
                {
                    "statements": [
                        {"client":"python", "query_type": "table", "wait":1, "query":"drop view if exists test19_state_mv7"},
                        {"client":"python", "query_type": "table", "wait":1, "query":"drop view if exists test19_state_view7"},
                        {"client":"python", "query_type": "table", "wait":1, "query":"drop stream if exists test19_state_stream7"},
                        {"client":"python", "query_type": "table", "exist":"test19_state_stream7", "exist_wait":2, "wait":1, "query":"create stream test19_state_stream7 (id string, location string, value float, timestamp datetime64(3) default now64(3))"},
                        {"client":"python", "query_type": "table", "exist":"test19_state_mv7", "exist_wait":2, "wait":1, "query":"create materialized view test19_state_mv7 as select id, sum(value) as sum_value, window_start as win_start, window_end as win_end from tumble(test19_state_stream7, timestamp, 5s) group by id, window_start, window_end"},
                        {"client":"python", "query_type": "stream", "query_id":"19173", "wait":1, "terminate":"manual", "query":"subscribe to select id, sum_value, win_start, win_end from test19_state_mv7 settings checkpoint_interval=1"},
                        {"client":"python", "query_type": "table", "depends_on":"19173", "wait":1, "query": "insert into test19_state_stream7(id, location, value, timestamp) values ('dev1', 'ca', 58.3, '2020-02-02 20:00:01') ('dev1', 'ca', 59, '2020-02-02 20:00:02') ('dev2', 'ca', 66, '2020-02-02 20:00:03')"},
                        {"client":"python", "query_type": "table", "kill":"19173", "kill_wait":3, "wait":1, "query": "insert into test19_state_stream7(id, location, value, timestamp) values ('dev1', 'ca', 77, '2020-02-02 20:00:04') ('dev2', 'ca', 69, '2020-02-02 20:00:05') ('dev3', 'ca', 55, '2020-02-02 20:00:07')"}
                    ]
                },
                {
                    "statements": [
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test19_state_stream7(id, location, value, timestamp) values ('dev3', 'ca', 55, '2020-02-02 20:00:07') ('dev2', 'ca', 69, '2020-02-02 20:00:08') ('dev3', 'ca', 72, '2020-02-02 20:00:09')"},  
                        {"client":"python", "query_type": "table", "kill":"19173", "kill_wait":3, "wait":1, "query": "insert into test19_state_stream7(id, location, value, timestamp) values ('dev6', 'ca', 66, '2020-02-02 20:00:11')"},                      
                        {"client":"python", "query_type": "stream","query_id":"19173-1", "terminate": "manual","wait":4, "query":"recover from '19173'"},
                        {"client":"python", "query_type": "table", "depends_on":"19173", "wait":1, "query": "kill query where query_id='19173' sync"},
                        {"client":"python", "query_type": "table", "wait":1, "query":"unsubscribe to '19173'"},
                        {"client":"python", "query_type": "table", "query":"drop view if exists test19_state_mv7"}
                    ]
                }
            ],

            "expected_results": [
                {
                    "query_id":"19173", 
                    "expected_results":[
                        ["dev1", "194.3", "2020-02-02 20:00:00", "2020-02-02 20:00:05"], 
                        ["dev2", "66.0", "2020-02-02 20:00:00", "2020-02-02 20:00:05"]
                    ]
                },
                {
                    "query_id":"19173-1", 
                    "expected_results":[
                        ["dev3", "182.0", "2020-02-02 20:00:05", "2020-02-02 20:00:10"], 
                        ["dev2", "138.0", "2020-02-02 20:00:05", "2020-02-02 20:00:10"]
                    ]
                }
            ]
        },
        {
            "id": 174,
            "tags": ["query_state", "materialized view"],
            "name": "streaming tail from materialized view as 5s hop window aggr",
            "description": "streaming tail from materialized view as hop window aggregation state checkpoint",
            "steps":[
                {
                    "statements": [
                        {"client":"python", "query_type": "table", "wait":1, "query":"drop view if exists test19_state_mv7"},
                        {"client":"python", "query_type": "table", "wait":1, "query":"drop view if exists test19_state_view7"},
                        {"client":"python", "query_type": "table", "wait":1, "query":"drop stream if exists test19_state_stream7"},
                        {"client":"python", "query_type": "table", "exist":"test19_state_stream7", "exist_wait":2, "wait":1, "query":"create stream test19_state_stream7 (id string, location string, value float, timestamp datetime64(3) default now64(3))"},
                        {"client":"python", "query_type": "table", "exist":"test19_state_mv7", "exist_wait":2, "wait":1, "query":"create materialized view test19_state_mv7 as select id, count(value) as sum_value, window_start as win_start, window_end as win_end from hop(test19_state_stream7, timestamp, 3s, 5s) group by id, window_start, window_end"},
                        {"client":"python", "query_type": "stream", "query_id":"19174", "wait":1, "terminate":"manual", "query":"subscribe to select id, sum_value, win_start, win_end from test19_state_mv7 settings checkpoint_interval=1"},
                        {"client":"python", "query_type": "table", "depends_on":"19174", "wait":1, "query": "insert into test19_state_stream7(id, location, value, timestamp) values ('dev1', 'ca', 57.3, '2020-02-02 20:00:00')"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test19_state_stream7(id, location, value, timestamp) values ('dev2', 'ca', 58.3, '2020-02-02 20:00:03')"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test19_state_stream7(id, location, value, timestamp) values ('dev6', 'ca', 66, '2020-02-02 20:00:04')"},  
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test19_state_stream7(id, location, value, timestamp) values ('dev6', 'ca', 69, '2020-02-02 20:00:06')"},                      
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test19_state_stream7(id, location, value, timestamp) values ('dev8', 'ca', 68, '2020-02-02 20:00:07')"},  
                        {"client":"python", "query_type": "table", "kill":"19174", "kill_wait":3, "wait":1, "query": "insert into test19_state_stream7(id, location, value, timestamp) values ('dev8', 'ca', 67, '2020-02-02 20:00:10')"},
                        {"client":"python", "query_type": "table", "wait":3, "query":"unsubscribe to '19174'"},
                        {"client":"python", "query_type": "table", "query":"drop view if exists test19_state_mv7"}
                    ]
                }
            ],
            "expected_results": [
                {
                    "query_id":"19174", 
                    "expected_results":[
                        ["dev1", "1", "2020-02-02 19:59:57", "2020-02-02 20:00:02"],
                        ["dev2", "1", "2020-02-02 20:00:00", "2020-02-02 20:00:05"],
                        ["dev1", "1", "2020-02-02 20:00:00", "2020-02-02 20:00:05"],
                        ["dev6", "1", "2020-02-02 20:00:00", "2020-02-02 20:00:05"],
                        ["dev2", "1", "2020-02-02 20:00:03", "2020-02-02 20:00:08"],
                        ["dev8", "1", "2020-02-02 20:00:03", "2020-02-02 20:00:08"],
                        ["dev6", "2", "2020-02-02 20:00:03", "2020-02-02 20:00:08"]
                    ]
                }
            ]
        },
        {
            "id": 175,
            "tags": ["query_state", "materialized view"],
            "name": "recover streaming tail from materialized view as 5s hop window aggr",
            "description": "recover streaming tail from materialized view as hop window aggregation state checkpoint",
            "steps":[
                {
                    "statements": [
                        {"client":"python", "query_type": "table", "wait":1, "query":"drop view if exists test19_state_mv7"},
                        {"client":"python", "query_type": "table", "wait":1, "query":"drop view if exists test19_state_view7"},
                        {"client":"python", "query_type": "table", "wait":1, "query":"drop stream if exists test19_state_stream7"},
                        {"client":"python", "query_type": "table", "exist":"test19_state_stream7", "exist_wait":2, "wait":1, "query":"create stream test19_state_stream7 (id string, location string, value float, timestamp datetime64(3) default now64(3))"},
                        {"client":"python", "query_type": "table", "exist":"test19_state_mv7", "exist_wait":2, "wait":1, "query":"create materialized view test19_state_mv7 as select id, count(value) as sum_value, window_start as win_start, window_end as win_end from hop(test19_state_stream7, timestamp, 3s, 5s) group by id, window_start, window_end"},
                        {"client":"python", "query_type": "stream", "query_id":"19175", "wait":1, "terminate":"manual", "query":"subscribe to select id, sum_value, win_start, win_end from test19_state_mv7 settings checkpoint_interval=1"},
                        {"client":"python", "query_type": "table", "depends_on":"19175", "wait":1, "query": "insert into test19_state_stream7(id, location, value, timestamp) values ('dev1', 'ca', 57.3, '2020-02-02 20:00:00')"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test19_state_stream7(id, location, value, timestamp) values ('dev2', 'ca', 58.3, '2020-02-02 20:00:03')"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test19_state_stream7(id, location, value, timestamp) values ('dev6', 'ca', 66, '2020-02-02 20:00:04')"},
                        {"client":"python", "query_type": "table", "kill":"19175", "kill_wait":3, "wait":1, "query": "insert into test19_state_stream7(id, location, value, timestamp) values ('dev6', 'ca', 69, '2020-02-02 20:00:06')"}
                    ]
                },
                {
                    "statements": [
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test19_state_stream7(id, location, value, timestamp) values ('dev8', 'ca', 68, '2020-02-02 20:00:07')"},  
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test19_state_stream7(id, location, value, timestamp) values ('dev8', 'ca', 67, '2020-02-02 20:00:10')"},
                        {"client":"python", "query_type": "stream","query_id":"19175-1", "terminate": "manual","wait":4, "query":"recover from '19175'"},
                        {"client":"python", "query_type": "table", "depends_on":"19175", "wait":1, "query": "kill query where query_id='19175' sync"},
                        {"client":"python", "query_type": "table", "wait":1, "query":"unsubscribe to '19175'"},
                        {"client":"python", "query_type": "table", "query":"drop view if exists test19_state_mv7"}
                    ]
                }
            ],

            "expected_results": [
                {
                    "query_id":"19175", 
                    "expected_results":[
                        ["dev1", "1", "2020-02-02 19:59:57", "2020-02-02 20:00:02"],
                        ["dev2", "1", "2020-02-02 20:00:00", "2020-02-02 20:00:05"],
                        ["dev1", "1", "2020-02-02 20:00:00", "2020-02-02 20:00:05"],
                        ["dev6", "1", "2020-02-02 20:00:00", "2020-02-02 20:00:05"]
                    ]
                },
                {
                    "query_id":"19175-1", 
                    "expected_results":[
                        ["dev2", "1", "2020-02-02 20:00:03", "2020-02-02 20:00:08"],
                        ["dev8", "1", "2020-02-02 20:00:03", "2020-02-02 20:00:08"],
                        ["dev6", "2", "2020-02-02 20:00:03", "2020-02-02 20:00:08"]
                    ]
                }
            ]
        },
        {
            "id": 176,
            "tags": ["query_state", "materialized view"],
            "name": "materialized view with union selects",
            "description": "materialized view with union selects state checkpoint",
            "steps":[
                {
                    "statements": [
                        {"client":"python", "query_type": "table", "wait":1, "query":"drop view if exists test19_state_mv7"},
                        {"client":"python", "query_type": "table", "wait":1, "query":"drop stream if exists test19_state_stream7"},
                        {"client":"python", "query_type": "table", "exist":"test19_state_stream7", "exist_wait":2, "wait":1, "query":"create stream test19_state_stream7 (id string, location string, value float, timestamp datetime64(3) default now64(3))"},
                        {"client":"python", "query_type": "table", "exist":"test19_state_mv7", "exist_wait":2, "wait":1, "query":"create materialized view test19_state_mv7 as (select id, sum(value) as sum_value from test19_state_stream7 group by id limit 4 union select id, sum(value) as sum_value from test19_state_stream7 group by id limit 4)"},
                        {"client":"python", "query_type": "stream", "query_id":"19176", "wait":1, "terminate":"manual", "query":"subscribe to select id, sum_value from test19_state_mv7 settings checkpoint_interval=1"},
                        {"client":"python", "query_type": "table", "depends_on":"19176", "wait":1, "query": "insert into test19_state_stream7(id, location, value, timestamp) values ('dev1', 'ca', 57.3, '2020-02-02 20:00:00')('dev2', 'ca', 58.3, '2020-02-02 20:00:03')"},
                        {"client":"python", "query_type": "table", "kill":"19176", "kill_wait":3, "wait":2, "query": "insert into test19_state_stream7(id, location, value, timestamp) values ('dev1', 'ca', 69, '2020-02-02 20:00:06')('dev4', 'ca', 67, '2020-02-02 20:00:10')"},
                        {"client":"python", "query_type": "table", "wait":2, "query":"unsubscribe to '19176'"},
                        {"client":"python", "query_type": "table", "query":"drop view if exists test19_state_mv7"}
                    ]
                }
            ],
            "expected_results": [
                {
                    "query_id":"19176", 
                    "expected_results":[
                        ["dev1", "57.3"],
                        ["dev2", "58.3"],
                        ["dev1", "57.3"],
                        ["dev2", "58.3"],
                        ["dev1", "126.3"],
                        ["dev2", "58.3"],
                        ["dev1", "126.3"],
                        ["dev2", "58.3"]
                    ]
                }
            ]
        },
        {
            "id": 177,
            "tags": ["query_state", "materialized view"],
            "name": "recover streaming tail from materialized view as 5s hop window aggr",
            "description": "recover streaming tail from materialized view as hop window aggregation state checkpoint",
            "steps":[
                {
                    "statements": [
                        {"client":"python", "query_type": "table", "wait":1, "query":"drop view if exists test19_state_mv7"},
                        {"client":"python", "query_type": "table", "wait":1, "query":"drop stream if exists test19_state_stream7"},
                        {"client":"python", "query_type": "table", "exist":"test19_state_stream7", "exist_wait":2, "wait":1, "query":"create stream test19_state_stream7 (id string, location string, value float, timestamp datetime64(3) default now64(3))"},
                        {"client":"python", "query_type": "table", "exist":"test19_state_mv7", "exist_wait":2, "wait":1, "query":"create materialized view test19_state_mv7 as (select id, sum(value) as sum_value from test19_state_stream7 group by id union select id, sum(value) as sum_value from test19_state_stream7 group by id)"},
                        {"client":"python", "query_type": "stream", "query_id":"19177", "wait":1, "terminate":"manual", "query":"subscribe to select id, sum_value from test19_state_mv7 settings checkpoint_interval=1"},
                        {"client":"python", "query_type": "table", "depends_on":"19177", "kill":"19177", "kill_wait":3, "wait":1, "query": "insert into test19_state_stream7(id, location, value, timestamp) values ('dev1', 'ca', 57.3, '2020-02-02 20:00:00')('dev2', 'ca', 58.3, '2020-02-02 20:00:03')"}
                    ]
                },
                {
                    "statements": [
                        {"client":"python", "query_type": "table", "query": "insert into test19_state_stream7(id, location, value, timestamp) values ('dev2', 'ca', 69, '2020-02-02 20:00:06')('dev4', 'ca', 67, '2020-02-02 20:00:10')"},
                        {"client":"python", "query_type": "stream","query_id":"19177-1", "terminate": "manual","wait":1, "query":"recover from '19177'"},
                        {"client":"python", "query_type": "table", "wait":3, "query": "kill query where query_id='19177' sync"},
                        {"client":"python", "query_type": "table", "wait":1, "query":"unsubscribe to '19177'"},
                        {"client":"python", "query_type": "table", "query":"drop view if exists test19_state_mv7"}
                    ]
                }
            ],

            "expected_results": [
                {
                    "query_id":"19177", 
                    "expected_results":[
                        ["dev1", "57.3"],
                        ["dev2", "58.3"],
                        ["dev1", "57.3"],
                        ["dev2", "58.3"]
                    ]
                },
                {
                    "query_id":"19177-1", 
                    "expected_results":[
                        ["dev1", "57.3"],
                        ["dev2", "127.3"],
                        ["dev4", "67"],
                        ["dev1", "57.3"],
                        ["dev2", "127.3"],
                        ["dev4", "67"]
                    ]
                }
            ]
        }
    ]
}