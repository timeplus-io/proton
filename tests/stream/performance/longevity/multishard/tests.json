{
    "comments":
        "Tests covering the steam query smoke cases.",
    "test_suite_config": {
        "proton_ci_mode": "local",
        "table_schemas":[

            {
                "name": "ttp_multishard",
                "type": "table",
                "reset": "False",
                "query_parameters":"logstore_retention_ms=3600000",
                "config": "setting_1",
                "columns": [
                    {
                        "name": "lpn",
                        "type": "string"
                    },
                    {
                        "name": "vno",
                        "type": "string"
                    },
                    {
                        "name": "drc",
                        "type": "string"
                    },
                    {
                        "name": "drcCode",
                        "type": "int32"
                    },
                    {
                        "name": "wgs84Lat",
                        "type": "float32"
                    },
                    {
                        "name": "wgs84Lon",
                        "type": "float32"
                    },
                    {
                        "name": "gcj02Lat",
                        "type": "float32"
                    },
                    {
                        "name": "gcj02Lon",
                        "type": "float32"
                    },
                    {
                        "name": "province",
                        "type": "nullable(string)"
                    },
                    {
                        "name": "city",
                        "type": "nullable(string)"
                    },                    
                    {
                        "name": "country",
                        "type": "nullable(string)"
                    },
                    {
                        "name": "spd",
                        "type": "float32"
                    },
                    {
                        "name": "mil",
                        "type": "float32"
                    },
                    {
                        "name": "adr",
                        "type": "float32"
                    },                    
                    {
                        "name": "time",
                        "type": "string"
                    },                                                                                                                                                                                                                                                
                    {
                        "name": "perf_event_time",
                        "type": "datetime64(3, 'Asia/Shanghai')",
                        "default": "now64(3, 'Asia/Shanghai')"
                    },                      
                    {
                        "name": "_perf_row_id",
                        "type": "string"
                    },                  
                    {
                        "name": "_perf_ingest_time",
                        "type": "string"
                    }
                ],
                "ttl_expression": "to_datetime(_tp_time) + INTERVAL 1 HOUR"
            }                       


        ],
        "setup": {

        },
        "tests_2_run": {"ids_2_run": [8], "tags_2_run":[], "tags_2_skip":["bug", "todo", "to_support"]} 
    },

    "tests": [

        {
            "id": 7,
            "tags": ["debug-ingestion only"],
            "name": "longevity - proton, with query time easy json volume, 80 streams",
            "description": "tail query latency w/single source",
            "db_engine":"proton",
            "input_info_table": "input_info",
            "steps":[
                {"statements": [
                    {"client":"python","config_set": "setting_1","workers": 2, "interval":1, "query_type": "table", "query":"drop view if exists ttp_multishard_v$"},                    
                    {"client":"python","config_set": "setting_1","workers": 2, "interval":1, "query_type": "table", "query":"drop stream if exists ttp_multi_shard_$"},
                    {"client":"python","config_set": "setting_1","workers": 2, "interval":1, "query_type": "table", "query":"CREATE STREAM if not exists ttp_multi_shard_$(`lpn` string, `vno` string, `drc` string, `drcCode` int32, `wgs84Lat` float32, `wgs84Lon` float32, `gcj02Lat` float32, `gcj02Lon` float32, `province` nullable(string), `city` nullable(string), `country` nullable(string), `spd` float32, `mil` float32, `time` string, `adr` string, perf_event_time datetime64(3) default now64(3,'Asia/Shanghai'), _perf_row_id string, _perf_ingest_time string) TTL to_datetime(_tp_time) + INTERVAL 24 HOUR SETTINGS shards=10, logstore_retention_bytes = '21474836480', logstore_retention_ms = '00000'"}
                ]},
                    

                {"inputs": [
                    {"table_name": "ttp_multi_shard_$","wait":5,"input_id": 210,"table_schema_ref":"ttp_multishard", "workers":2, "data_source":"file", "data_set_path":"ttp", "data_set_file": "ttp.csv", "random_fields": "lpn", "random_ranges":"2000", "table_schema_file":"table_schema.json -todo", 
                        "ingest_interval":1,"interval_model":"random - todo", "time_incre_interval":0.5, "data_set_play_mode":"sequence", "rows_2_play": 3000, "batch_size":5, "loop_times":-1, "result_keep":"False","input_record_table":"input_record"},
                    {"table_name": "ttp_multi_shard_$","wait":5,"input_id": 211,"table_schema_ref":"ttp_multishard", "client":"rest", "workers":2, "data_source":"file", "data_set_path":"ttp", "data_set_file": "ttp.csv", "table_schema_file":"table_schema.json -todo", 
                        "ingest_interval":1,"interval_model":"random - todo", "time_incre_interval":0.5, "data_set_play_mode":"sequence", "rows_2_play": 100, "batch_size":1, "loop_times":-1, "result_keep":"False","input_record_table":"input_record"},
                    {"table_name": "ttp_multi_shard_$","wait":5,"input_id": 212,"table_schema_ref":"ttp_multishard", "$start_from": 0,"$end_at":1, "client":"rest", "workers":2,"worker_mode":"round_robin", "data_source":"file", "data_set_path":"ttp", "data_set_file": "ttp.csv", "table_schema_file":"table_schema.json -todo", 
                        "ingest_interval":1,"interval_model":"random - todo", "time_incre_interval":0.5, "data_set_play_mode":"sequence", "rows_2_play": 100, "batch_size":1, "loop_times":-1, "result_keep":"False","input_record_table":"input_record"}

                ]}

            ]               
        },        

        {
            "id": 8,
            "tags": ["debug"],
            "name": "longevity - proton, with query time easy json volume, 80 streams",
            "description": "tail query latency w/single source",
            "db_engine":"proton",
            "input_info_table": "input_info",
            "steps":[
                {"statements": [
                    {"client":"python","config_set": "setting_1","workers": 1, "interval":1, "query_type": "table", "query":"drop view if exists ttp_multishard_v$"},                    
                    {"client":"python","config_set": "setting_1","workers": 1, "interval":1, "query_type": "table", "query":"drop stream if exists ttp_multi_shard_$"},
                    {"client":"python","config_set": "setting_1","workers": 1, "interval":1, "query_type": "table", "query":"CREATE STREAM if not exists ttp_multi_shard_$(`lpn` string, `vno` string, `drc` string, `drcCode` int32, `wgs84Lat` float32, `wgs84Lon` float32, `gcj02Lat` float32, `gcj02Lon` float32, `province` nullable(string), `city` nullable(string), `country` nullable(string), `spd` float32, `mil` float32, `time` string, `adr` string, perf_event_time datetime64(3) default now64(3,'Asia/Shanghai'), _perf_row_id string, _perf_ingest_time string) TTL to_datetime(_tp_time) + INTERVAL 24 HOUR SETTINGS shards = 16, logstore_retention_bytes = '21474836480', logstore_retention_ms = '00000'"},
                    {"client":"python","config_set": "setting_1", "wait":3, "interval":2, "workers": 5, "query_type": "table", "query":"create view if not exists mv_truck_track_$ as (select * from ttp_multi_shard_0 where date_diff(minute,_tp_time,now()) < 30)"},
                    {"client":"python","config_set": "setting_1", "wait":3, "interval":2, "workers": 5, "query_type": "table", "query":"SELECT lpn, latest(spd) AS last_spd1, latest(wgs84Lat) AS lat1, latest(wgs84Lon) AS lon1, sum(spd) AS sum_spd, count(*) AS cnt FROM `mv_truck_track_0` PARTITION BY lpn EMIT PERIODIC 5s SETTINGS seek_to = '-2d', max_threads = 10"},
                    {"client":"python","config_set": "setting_1", "wait":3, "interval":2, "workers": 5, "query_type": "table", "query":"WITH get_datapoints_cnt_per_lpn AS (SELECT lpn, latest(spd) AS last_spd1, latest(wgs84Lat) AS lat1, latest(wgs84Lon) AS lon1, sum(spd) AS sum_spd, count(*) AS cnt FROM mv_truck_track_0 PARTITION BY lpn EMIT PERIODIC 5s SETTINGS seek_to = '-2d', max_threads = 10) SELECT *, lag(sum_spd) OVER (PARTITION BY lpn) AS last_sum_spd, lag(cnt) OVER (PARTITION BY lpn) AS last_cnt FROM get_datapoints_cnt_per_lpn settings max_threads = 10"},
                    {"client":"python","config_set": "setting_1", "wait":3, "interval":2, "workers": 1, "query_type": "table", "query":"create view if not exists ttp_multishard_v0 as (WITH get_datapoints_cnt_per_lpn AS(SELECT lpn, latest(spd) AS last_spd1, latest(wgs84Lat) AS lat1, latest(wgs84Lon) AS lon1, sum(spd) AS sum_spd, count(*) AS cnt FROM mv_truck_track_$ PARTITION BY lpn EMIT PERIODIC 5s SETTINGS max_threads = 35), get_last_count AS(SELECT *, lag(sum_spd) OVER (PARTITION BY lpn) AS last_sum_spd, lag(cnt) OVER (PARTITION BY lpn) AS last_cnt FROM get_datapoints_cnt_per_lpn settings max_threads = 31), get_per_30s AS(SELECT *, cnt - last_cnt AS cnt_per_30s, sum_spd - last_sum_spd AS sum_spd_per_30s FROM get_last_count) SELECT lpn, window_start AS windowStart, window_end AS windowEnd, latest(last_spd1) AS last_spd, latest(lat1) AS lat, latest(lon1) AS lon, sum(cnt_per_30s) AS cnt_per_1m, sum(sum_spd_per_30s) AS sum_spd_per_1m, if(cnt_per_1m = 0, 'OFF', if(sum_spd_per_1m = 0, 'IDLE', 'RUNNING')) AS status FROM hop(get_per_30s, now64(3, 'UTC'), 1s, 5s) partition by lpn GROUP BY window_start, window_end) settings max_threads = 31"},
                    {"client":"python","config_set": "setting_1", "wait": 10, "interval":1, "depends_on_stream":"ttp_multishard_v$", "query_id":201, "run_mode":"process", "loop_times": 1, "workers": 5, "query_type": "stream", "terminate":"auto","query_end_timer": 30, "query":"select * from ttp_multishard_v0", "result_keep":"False", "query_result_table":"query_result_03", "query_record_table":"query_record_01"},
                    {"client":"python", "config_set": "setting_1", "wait": 10, "query_id": 202, "run_mode":"process", "loop_times": 1, "workers": 10, "query_type": "stream", "terminate":"auto", "query_end_timer": 30, "query":"select * from ttp_multi_shard_0 where spd >0", "result_keep":"False", "query_result_table":"query_result_03", "query_record_table":"query_record_01"},
                    {"client":"python", "config_set": "setting_1", "wait": 10, "query_id": 203, "run_mode":"process", "loop_times": 1, "workers": 10, "query_type": "stream", "terminate":"auto", "query_end_timer": 30, "query":"select count_distinct(lpn) FROM (SELECT lpn, max(_tp_time) as lastSeen FROM ttp_multi_shard_0 group by lpn having lastSeen>date_sub(now(),10s) emit periodic 5s settings seek_to='-24h')", "result_keep":"False", "query_result_table":"query_result_03", "query_record_table":"query_record_01"},
                    {"client":"python","config_set": "setting_1","workers": 10,"query_id": 204, "interval":1, "loop_times": -1, "query_type": "table", "query":"select * from table(ttp_multi_shard_0) where spd >0"}

                ]},
                    
                {"inputs": [
                    {"table_name": "ttp_multi_shard_0", "depends_on_stream":"ttp_multishard_v0", "wait":3, "input_id": 210,"table_schema_ref":"ttp_multishard", "workers":6, "data_source":"file", "data_set_path":"ttp", "data_set_file": "ttp.csv", "random_fields": "lpn", "random_ranges":"2000", "table_schema_file":"table_schema.json -todo", 
                        "ingest_interval":1,"interval_model":"random - todo", "time_incre_interval":0.5, "data_set_play_mode":"sequence", "rows_2_play": 3000, "batch_size":5, "loop_times":-1, "result_keep":"False","input_record_table":"input_record"},
                    {"table_name": "ttp_multi_shard_0","wait":3,"input_id": 211,"table_schema_ref":"ttp_multishard", "client":"rest", "workers":6, "data_source":"file", "data_set_path":"ttp", "data_set_file": "ttp.csv", "table_schema_file":"table_schema.json -todo", 
                        "ingest_interval":1,"interval_model":"random - todo", "time_incre_interval":0.5, "data_set_play_mode":"sequence", "rows_2_play": 100, "batch_size":1, "loop_times":-1, "result_keep":"False","input_record_table":"input_record"},
                    {"table_name": "ttp_multi_shard_0","wait":3,"input_id": 212,"table_schema_ref":"ttp_multishard", "$start_from": 0,"$end_at":1, "client":"rest", "workers":6,"worker_mode":"round_robin", "data_source":"file", "data_set_path":"ttp", "data_set_file": "ttp.csv", "table_schema_file":"table_schema.json -todo", 
                        "ingest_interval":1,"interval_model":"random - todo", "time_incre_interval":0.5, "data_set_play_mode":"sequence", "rows_2_play": 100, "batch_size":1, "loop_times":-1, "result_keep":"False","input_record_table":"input_record"}

                ]}

            ]               
        },
        {
            "id": 9,
            "tags": ["multishard", "bug"],
            "name": "longevity - proton, with query time easy json volume, 80 streams",
            "description": "tail query latency w/single source",
            "db_engine":"proton",
            "input_info_table": "input_info",
            "steps":[
                {"statements": [
                    {"client":"python","config_set": "setting_1","workers": 1, "interval":1, "query_type": "table", "query":"drop view if exists ttp_multishard_v$"},                    
                    {"client":"python","config_set": "setting_1","workers": 1, "interval":1, "query_type": "table", "query":"drop stream if exists ttp_multi_shard_$"},
                    {"client":"python","config_set": "setting_1","workers": 1, "interval":1, "query_type": "table", "query":"CREATE STREAM if not exists ttp_multi_shard_$(`lpn` string, `vno` string, `drc` string, `drcCode` int32, `wgs84Lat` float32, `wgs84Lon` float32, `gcj02Lat` float32, `gcj02Lon` float32, `province` nullable(string), `city` nullable(string), `country` nullable(string), `spd` float32, `mil` float32, `time` string, `adr` string, perf_event_time datetime64(3) default now64(3,'Asia/Shanghai'), _perf_row_id string, _perf_ingest_time string) TTL to_datetime(_tp_time) + INTERVAL 24 HOUR SETTINGS shards = 31, logstore_retention_bytes = '21474836480', logstore_retention_ms = '00000'"},                    
                    {"client":"python","config_set": "setting_1", "wait":3, "interval":2, "workers": 1, "query_type": "table", "query":"create view if not exists ttp_multishard_v$ as (WITH duration AS(SELECT lpn, window_start AS ds, window_end AS de, date_diff('second', ds, de) AS du FROM session(ttp_multi_shard_$, _tp_time, 1s, 40s, [spd > 0, spd = 0]) partition by lpn GROUP BY lpn, window_start, window_end  SETTINGS seek_to = 'earliest', max_threads = 10) SELECT lpn, window_start, window_end, sum(du) FROM hop(duration, de, 10s, 40s) PARTITION BY lpn GROUP BY lpn, window_start, window_end HAVING  sum(du) > 1s) settings max_threads = 10"},
                    {"client":"python","config_set": "setting_1", "wait": 10, "interval":1, "depends_on_stream":"ttp_multishard_v$", "query_id":201, "run_mode":"process", "loop_times": 1, "workers": 1, "query_type": "stream", "terminate":"auto","query_end_timer": 30, "query":"select * from ttp_multishard_v0", "result_keep":"False", "query_result_table":"query_result_03", "query_record_table":"query_record_01"},
                    {"client":"python", "config_set": "setting_1", "wait": 10, "query_id": 202, "run_mode":"process", "loop_times": 1, "workers": 10, "query_type": "stream", "terminate":"auto", "query_end_timer": 30, "query":"select * from ttp_multi_shard_0 where spd >0", "result_keep":"False", "query_result_table":"query_result_03", "query_record_table":"query_record_01"},
                    {"client":"python", "config_set": "setting_1", "wait": 10, "query_id": 203, "run_mode":"process", "loop_times": 1, "workers": 10, "query_type": "stream", "terminate":"auto", "query_end_timer": 30, "query":"select count_distinct(lpn) FROM (SELECT lpn, max(_tp_time) as lastSeen FROM ttp_multi_shard_0 group by lpn having lastSeen>date_sub(now(),10s) emit periodic 5s settings seek_to='-24h')", "result_keep":"False", "query_result_table":"query_result_03", "query_record_table":"query_record_01"},
                    {"client":"python","config_set": "setting_1","workers": 10,"query_id": 204, "interval":1, "loop_times": -1, "query_type": "table", "query":"select * from table(ttp_multi_shard_0) where spd >0"}

                ]},
                    

                {"inputs": [
                    {"table_name": "ttp_multi_shard_0","wait":3, "input_id": 210,"table_schema_ref":"ttp_multishard", "workers":3, "data_source":"file", "data_set_path":"ttp", "data_set_file": "ttp.csv", "random_fields": "lpn", "random_ranges":"2000", "table_schema_file":"table_schema.json -todo", 
                        "ingest_interval":1,"interval_model":"random - todo", "time_incre_interval":0.5, "data_set_play_mode":"sequence", "rows_2_play": 3000, "batch_size":5, "loop_times":-1, "result_keep":"False","input_record_table":"input_record"},
                    {"table_name": "ttp_multi_shard_0","wait":3,"input_id": 211,"table_schema_ref":"ttp_multishard", "client":"rest", "workers":3, "data_source":"file", "data_set_path":"ttp", "data_set_file": "ttp.csv", "table_schema_file":"table_schema.json -todo", 
                        "ingest_interval":1,"interval_model":"random - todo", "time_incre_interval":0.5, "data_set_play_mode":"sequence", "rows_2_play": 100, "batch_size":1, "loop_times":-1, "result_keep":"False","input_record_table":"input_record"},
                    {"table_name": "ttp_multi_shard_0","wait":3,"input_id": 212,"table_schema_ref":"ttp_multishard", "$start_from": 0,"$end_at":1, "client":"rest", "workers":2,"worker_mode":"round_robin", "data_source":"file", "data_set_path":"ttp", "data_set_file": "ttp.csv", "table_schema_file":"table_schema.json -todo", 
                        "ingest_interval":1,"interval_model":"random - todo", "time_incre_interval":0.5, "data_set_play_mode":"sequence", "rows_2_play": 100, "batch_size":1, "loop_times":-1, "result_keep":"False","input_record_table":"input_record"}

                ]}

            ]               
        }          
    ]
}


