{
    "comments":
        "Tests covering the steam query smoke cases.",
    "test_suite_config": {
        "proton_ci_mode": "local",
        "table_schemas":[

            {
                "name": "iris",
                "type": "table",
                "reset": "False",
                "query_parameters":"logstore_retention_ms=3600000",
                "config": "setting_1",
                "columns": [
                    {
                        "name": "sepal_length",
                        "type": "float64"
                    },
                    {
                        "name": "sepal_width",
                        "type": "float64"
                    },
                    {
                        "name": "petal_length",
                        "type": "float64"
                    },
                    {
                        "name": "petal_width",
                        "type": "float64"
                    },
                    {
                        "name": "species",
                        "type": "string"
                    },
                    {
                        "name": "perf_event_time",
                        "type": "datetime64(3)",
                        "default": "now64(3)"
                    },                      
                    {
                        "name": "_perf_row_id",
                        "type": "string"
                    },                  
                    {
                        "name": "_perf_ingest_time",
                        "type": "string"
                    }
                ],
                "ttl_expression": "to_datetime(_tp_time) + INTERVAL 1 HOUR"
            },

            {
                "name": "iris_d",
                "type": "table",
                "config": "setting_1",
                "columns": [
                    {
                        "name": "species",
                        "type": "string"
                    },
                    {
                        "name": "alias",
                        "type": "string"
                    }

            ]}           


        ],
        "setup": {
            "inputs": [
                {"table_name":"iris_d", "data": [
                ["Iris-setosa", "setosa"],
                ["Iris-versicolor", "versicolor"],
                ["Iris-virginica", "virginica"]]
                }              
            ]
        },
        "tests_2_run": {"ids_2_run": [8], "tags_2_run":[], "tags_2_skip":["bug", "todo", "to_support"]} 
    },

    "tests": [
        {
            "id": 0,
            "tags": ["ingest only"],
            "name": "ingest into one stream iris",
            "description": "tail query latency w/single source",
            "db_engine":"proton",
            "input_info_table": "input_info",
            "steps":[                    

                {"inputs": [
                    {"table_name": "iris","input_id": 201,"client":"python", "workers":80, "data_source":"file", "data_set_path":"iris", "data_set_file": "iris.csv", "table_schema_file":"table_schema.json -todo", 
                        "ingest_interval":1,"interval_model":"random - todo", "time_incre_interval":0.5, "data_set_play_mode":"sequence", "rows_2_play": 1000, "batch_size":100, "loop_times":-1, "result_keep":"False","input_record_table":"input_record"},
                    {"table_name": "iris","input_id": 202,"client":"rest", "workers":80, "data_source":"file", "data_set_path":"iris", "data_set_file": "iris1.csv", "table_schema_file":"table_schema.json -todo", 
                        "ingest_interval":1,"interval_model":"random - todo", "time_incre_interval":0.5, "data_set_play_mode":"sequence", "rows_2_play": 1000, "batch_size":100, "loop_times":-1, "result_keep":"False","input_record_table":"input_record1"}                        
                ]}

            ]               
        },        
        {
            "id": 1,
            "tags": ["latency"],
            "name": "tail laterncy - proton",
            "description": "tail query latency w/single source",
            "db_engine":"proton",
            "input_info_table": "input_info",
            "steps":[
                {"statements": [
                    {"client":"python","config_set": "setting_1", "query_type": "table", "query":"drop view if exists iris_global_avg_v"},
                    {"client":"python","config_set": "setting_1", "wait":5, "query_type": "table", "query":"create materialized view iris_global_avg_v as select species, avg(sepal_length) as avg_sepal_length, avg(sepal_width) as avg_sepal_width from iris group by species"},
                    {"client":"python","config_set": "setting_1", "wait": 10, "query_id":"101", "run_mode":"process","workers": 40, "query_type": "stream", "terminate":"auto","query_end_timer": 30, "query":"select * from iris_global_avg_v", "result_keep":"False", "query_result_table":"query_result_03", "query_record_table":"query_record_01"},
                    {"client":"python", "config_set": "setting_1", "wait": 10, "query_id": 102, "run_mode":"process", "workers": 60, "query_type": "stream", "terminate":"auto", "query_end_timer": 30, "query":"select * from iris where sepal_length > 4 and  sepal_length <5", "result_keep":"False", "query_result_table":"query_result_03", "query_record_table":"query_record_01"}


                ]},
                    

                {"inputs": [
                    {"table_name": "iris","input_id": 201, "workers":100, "data_source":"file", "data_set_path":"iris", "data_set_file": "iris.csv", "table_schema_file":"table_schema.json -todo", 
                        "ingest_interval":1,"interval_model":"random - todo", "time_incre_interval":0.5, "data_set_play_mode":"sequence", "rows_2_play": 1000, "batch_size":1, "loop_times":-1, "result_keep":"False","input_record_table":"input_record"}
                ]}

            ]               
        },
        {
            "id": 2,
            "tags": ["latency"],
            "name": "longevity - proton, with query time easy json volume",
            "description": "tail query latency w/single source",
            "db_engine":"proton",
            "input_info_table": "input_info",
            "steps":[
                {"statements": [
                    {"client":"python","config_set": "setting_1","workers": 80, "interval":1, "query_type": "table", "query":"drop view if exists iris_global_sum_v$"},
                    {"client":"python","config_set": "setting_1", "wait":20, "interval":2, "workers": 80, "query_type": "table", "query":"create materialized view iris_global_sum_v$ as select species, sum(sepal_length) as sum_sepal_length, sum(sepal_width) as sum_sepal_width from iris group by species"},
                    {"client":"python","config_set": "setting_1", "wait": 10, "interval":1, "depends_on_stream":"iris_global_avg_v$", "query_id":"101", "run_mode":"process", "loop_times": 1, "workers": 80, "query_type": "stream", "terminate":"auto","query_end_timer": 30, "query":"select * from iris_global_sum_v$", "result_keep":"False", "query_result_table":"query_result_03", "query_record_table":"query_record_01"},
                    {"client":"python","config_set": "setting_1","workers": 80, "interval":1, "query_type": "table", "query":"drop view if exists event_s_tumble_count_v$"},                    
                    {"client":"python","config_set": "setting_1", "wait":20, "interval":5, "workers": 80, "query_type": "table", "query":"create materialized view event_s_tumble_count_v$ as select window_start as ws, window_end as we, json_string:repo.name as repo_name, count() from tumble(event_s, 5s) group by repo_name, window_start, window_end"},
                    {"client":"python","config_set": "setting_1", "wait": 10, "interval":1, "depends_on_stream":"event_s_tumble_count_v$", "query_id":"102", "run_mode":"process", "loop_times": 1, "workers": 80, "query_type": "stream", "terminate":"auto","query_end_timer": 30, "query":"select * from event_s_tumble_count_v$", "result_keep":"False", "query_result_table":"query_result_03", "query_record_table":"query_record_01"},                    
                    {"client":"python", "config_set": "setting_1", "wait": 1, "query_id": 103, "run_mode":"process", "loop_times": 1, "workers": 30, "query_type": "stream", "terminate":"auto", "query_end_timer": 30, "query":"select a.json_string:id as a_id, to_time(a.json_string:created_at) as a_created_at, a.json_string:payload.pull_request.head.repo.owner.id as a_repo_owner_id, b.json_string:id as b_id, to_time(b.json_string:created_at) as b_created_at, b.json_string:payload.pull_request.head.repo.owner.id as b_repo_owner_id, date_diff('second', a._tp_time, b._tp_time) from event_s as a join event_s1 as b on a_id = b_id and to_int64(a_id) > 0 and date_diff_within(10s, a._tp_time, b._tp_time) ", "result_keep":"False", "query_result_table":"query_result_03", "query_record_table":"query_record_01"},
                    {"client":"python", "config_set": "setting_1", "wait": 10, "query_id": 104, "run_mode":"process", "loop_times": 1, "workers": 100, "query_type": "stream", "terminate":"auto", "query_end_timer": 30, "query":"select * from iris where sepal_length > 4 and  sepal_length <5", "result_keep":"False", "query_result_table":"query_result_03", "query_record_table":"query_record_01"},
                    {"client":"python","config_set": "setting_1","workers": 20, "interval":1, "loop_times": -1, "query_type": "table", "query":"select * from table(iris_global_sum_v$)"},
                    {"client":"python","config_set": "setting_1","workers": 20, "interval":1, "loop_times": -1, "query_type": "table", "query":"select count(*) from table(iris)"}

                ]},
                    

                {"inputs": [
                    {"table_name": "iris","input_id": 201, "workers":120, "data_source":"file", "data_set_path":"iris", "data_set_file": "iris.csv", "table_schema_file":"table_schema.json -todo", 
                        "ingest_interval":1,"interval_model":"random - todo", "time_incre_interval":0.5, "data_set_play_mode":"sequence", "rows_2_play": 1000, "batch_size":5, "loop_times":-1, "result_keep":"False","input_record_table":"input_record"},
                    {"table_name": "iris","input_id": 202, "client":"rest", "workers":120, "data_source":"file", "data_set_path":"iris", "data_set_file": "iris.csv", "table_schema_file":"table_schema.json -todo", 
                        "ingest_interval":1,"interval_model":"random - todo", "time_incre_interval":0.5, "data_set_play_mode":"sequence", "rows_2_play": 1000, "batch_size":5, "loop_times":-1, "result_keep":"False","input_record_table":"input_record"},
                    {"table_name": "event_s","input_id": 203, "workers":1, "data_source":"file", "data_set_path":"event", "data_set_file": "event_github.json", "data_set_file_format": "json", "json_column": "json_string", "table_schema_file":"table_schema.json -todo", 
                        "ingest_interval":1,"interval_model":"random - todo", "time_incre_interval":0.5, "data_set_play_mode":"sequence", "rows_2_play": 1000, "batch_size":1, "loop_times":-1, "result_keep":"False","input_record_table":"input_record"},
                    {"table_name": "event_s1","input_id": 204, "workers":1, "data_source":"file", "data_set_path":"event", "data_set_file": "event_github.json", "data_set_file_format": "json", "json_column": "json_string", "table_schema_file":"table_schema.json -todo", 
                        "ingest_interval":1,"interval_model":"random - todo", "time_incre_interval":0.5, "data_set_play_mode":"sequence", "rows_2_play": 1000, "batch_size":1, "loop_times":-1, "result_keep":"False","input_record_table":"input_record"}                           

                ]}

            ]               
        },

        {
            "id": 3,
            "tags": ["latency"],
            "name": "longevity - proton, with query time easy json debug",
            "description": "tail query latency w/single source",
            "db_engine":"proton",
            "input_info_table": "input_info",
            "steps":[
                {"statements": [
                    {"client":"python","config_set": "setting_1","workers": 1, "interval":1, "query_type": "table", "query":"drop view if exists iris_global_sum_v$"},
                    {"client":"python","config_set": "setting_1","workers": 2, "interval":1, "query_type": "table", "query":"create stream if not exists iris_$(sepal_length float64, sepal_width float64, petal_length float64, petal_width float64, species string, perf_event_time datetime64(3) default now64(3), _perf_row_id string, _perf_ingest_time string)"},
                    {"client":"python","config_set": "setting_1", "wait":20, "interval":2, "workers": 1, "query_type": "table", "query":"create materialized view if not exists iris_global_sum_v$ as select species, sum(sepal_length) as sum_sepal_length, sum(sepal_width) as sum_sepal_width from iris_$ group by species"},
                    {"client":"python","config_set": "setting_1", "wait": 1, "interval":1, "depends_on_stream":"iris_global_sum_v$", "query_id":"101", "run_mode":"process", "loop_times": -1, "workers": 1, "query_type": "stream", "terminate":"auto","query_end_timer": 30, "query":"select * from iris_global_sum_v$", "result_keep":"False", "query_result_table":"query_result_03", "query_record_table":"query_record_01"},
                    {"client":"python","config_set": "setting_1","workers": 2, "interval":1, "query_type": "table", "query":"drop view if exists event_s_tumble_count_v$"},                    
                    {"client":"python","config_set": "setting_1", "wait":2, "interval":1, "workers": 2, "query_type": "table", "query":"create materialized view event_s_tumble_count_v$ as select window_start as ws, window_end as we, json_string:repo.name as repo_name, count() from tumble(event_s, 5s) group by repo_name, window_start, window_end"},
                    {"client":"python","config_set": "setting_1", "wait": 2, "interval":1, "depends_on_stream":"event_s_tumble_count_v$", "query_id":"102", "run_mode":"process", "loop_times": -1, "workers": 2, "query_type": "stream", "terminate":"auto","query_end_timer": 30, "query":"select * from event_s_tumble_count_v$", "result_keep":"False", "query_result_table":"query_result_03", "query_record_table":"query_record_01"},                    
                    {"client":"python", "config_set": "setting_1", "wait": 1, "query_id": 103, "run_mode":"process", "loop_times": -1, "workers": 2, "query_type": "stream", "terminate":"auto", "query_end_timer": 30, "query":"select a.json_string:id as a_id, to_time(a.json_string:created_at) as a_created_at, a.json_string:payload.pull_request.head.repo.owner.id as a_repo_owner_id, b.json_string:id as b_id, to_time(b.json_string:created_at) as b_created_at, b.json_string:payload.pull_request.head.repo.owner.id as b_repo_owner_id, date_diff('second', a_created_at, b_created_at) from event_s as a join event_s1 as b on a_id = b_id and to_int64(a_id) > 0 and date_diff_within(10s, a_created_at, b_created_at) ", "result_keep":"False", "query_result_table":"query_result_03", "query_record_table":"query_record_01"},
                    {"client":"python", "config_set": "setting_1", "wait": 1, "query_id": 104, "run_mode":"process", "loop_times": -1, "workers": 2, "query_type": "stream", "terminate":"auto", "query_end_timer": 30, "query":"select * from iris where sepal_length > 4 and  sepal_length <5", "result_keep":"False", "query_result_table":"query_result_03", "query_record_table":"query_record_01"},
                    {"client":"python","config_set": "setting_1","workers": 1, "interval":1, "loop_times": -1, "query_type": "table", "query":"select * from table(iris_global_sum_v$)"},
                    {"client":"python","config_set": "setting_1","workers": 1, "interval":1, "loop_times": -1, "query_type": "table", "query":"select count(*) from table(iris)"}

                ]},
                    

                {"inputs": [
                    {"table_name": "iris_$","input_id": 202,"table_schema_ref":"iris", "client":"rest", "workers":1, "data_source":"file", "data_set_path":"iris", "data_set_file": "iris.csv", "table_schema_file":"table_schema.json -todo", 
                        "ingest_interval":1,"interval_model":"random - todo", "time_incre_interval":0.5, "data_set_play_mode":"sequence", "rows_2_play": 100, "batch_size":1, "loop_times":-1, "result_keep":"False","input_record_table":"input_record"}                       

                ]}

            ]               
        },        


        {
            "id": 4,
            "tags": ["latency"],
            "name": "longevity - proton, with easy json obj large volume",
            "description": "tail query latency w/single source",
            "db_engine":"proton",
            "input_info_table": "input_info",
            "steps":[
                {"statements": [
                    {"client":"python","config_set": "setting_1","workers": 80, "interval":1, "query_type": "table", "query":"drop view if exists iris_global_sum_v$"},
                    {"client":"python","config_set": "setting_1", "wait":20, "interval":2, "workers": 80, "query_type": "table", "query":"create materialized view iris_global_sum_v$ as select species, sum(sepal_length) as sum_sepal_length, sum(sepal_width) as sum_sepal_width from iris group by species"},
                    {"client":"python","config_set": "setting_1", "wait": 10, "interval":1, "depends_on_stream":"iris_global_avg_v$", "query_id":"101", "run_mode":"process", "loop_times": -1, "workers": 80, "query_type": "stream", "terminate":"auto","query_end_timer": 30, "query":"select * from iris_global_sum_v$", "result_keep":"False", "query_result_table":"query_result_03", "query_record_table":"query_record_01"},
                    {"client":"python","config_set": "setting_1","workers": 80, "interval":1, "query_type": "table", "query":"drop view if exists event_tumble_count_v$"},                    
                    {"client":"python","config_set": "setting_1", "wait":20, "interval":5, "workers": 80, "query_type": "table", "query":"create materialized view event_tumble_count_v$ as select window_start as ws, window_end as we, event.type, count() from tumble(event, 5s) group by event.type, window_start, window_end"},
                    {"client":"python", "config_set": "setting_1", "wait": 10, "query_id": 102, "run_mode":"process", "loop_times": -1, "workers": 50, "query_type": "stream", "terminate":"auto", "query_end_timer": 30, "query":"select * from iris where sepal_length > 4 and  sepal_length <5", "result_keep":"False", "query_result_table":"query_result_03", "query_record_table":"query_record_01"},
                    {"client":"python","config_set": "setting_1","workers": 20, "interval":1, "loop_times": -1, "query_type": "table", "query":"select * from table(iris_global_sum_v$)"},
                    {"client":"python","config_set": "setting_1","workers": 20, "interval":1, "loop_times": -1, "query_type": "table", "query":"select count(*) from table(iris)"}

                ]},
                    

                {"inputs": [
                    {"table_name": "iris","input_id": 201, "workers":100, "data_source":"file", "data_set_path":"iris", "data_set_file": "iris.csv", "table_schema_file":"table_schema.json -todo", 
                        "ingest_interval":1,"interval_model":"random - todo", "time_incre_interval":0.5, "data_set_play_mode":"sequence", "rows_2_play": 1000, "batch_size":5, "loop_times":-1, "result_keep":"False","input_record_table":"input_record"},
                    {"table_name": "iris","input_id": 202, "client":"rest", "workers":110, "data_source":"file", "data_set_path":"iris", "data_set_file": "iris.csv", "table_schema_file":"table_schema.json -todo", 
                        "ingest_interval":1,"interval_model":"random - todo", "time_incre_interval":0.5, "data_set_play_mode":"sequence", "rows_2_play": 1000, "batch_size":5, "loop_times":-1, "result_keep":"False","input_record_table":"input_record"},
                    {"table_name": "event","input_id": 203, "workers":110, "data_source":"file", "data_set_path":"event", "data_set_file": "event_github.json", "data_set_file_format": "json", "json_column": "event", "table_schema_file":"table_schema.json -todo", 
                        "ingest_interval":1,"interval_model":"random - todo", "time_incre_interval":0.5, "data_set_play_mode":"sequence", "rows_2_play": 1000, "batch_size":5, "loop_times":-1, "result_keep":"False","input_record_table":"input_record"}

                ]}

            ]               
        },        
        {
            "id": 6,
            "tags": ["latency"],
            "name": "longevity - proton, legecy features, no easy json large volume",
            "description": "tail query latency w/single source",
            "db_engine":"proton",
            "input_info_table": "input_info",
            "steps":[
                {"statements": [
                    {"client":"python","config_set": "setting_1","workers": 120, "interval":1, "query_type": "table", "query":"drop view if exists iris_global_sum_v$"},
                    {"client":"python","config_set": "setting_1", "wait":20, "interval":5, "workers": 120, "query_type": "table", "query":"create materialized view iris_global_sum_v$ as select species, sum(sepal_length) as sum_sepal_length, sum(sepal_width) as sum_sepal_width from iris group by species"},
                    {"client":"python","config_set": "setting_1", "wait": 10, "interval":1, "depends_on_stream":"iris_global_avg_v$", "query_id":"101", "run_mode":"process", "loop_times": -1, "workers": 120, "query_type": "stream", "terminate":"auto","query_end_timer": 30, "query":"select * from iris_global_sum_v$", "result_keep":"False", "query_result_table":"query_result_03", "query_record_table":"query_record_01"},
                    {"client":"python", "config_set": "setting_1", "wait": 10, "query_id": 102, "run_mode":"process", "loop_times": -1, "workers": 50, "query_type": "stream", "terminate":"auto", "query_end_timer": 30, "query":"select * from iris where sepal_length > 4 and  sepal_length <5", "result_keep":"False", "query_result_table":"query_result_03", "query_record_table":"query_record_01"},
                    {"client":"python","config_set": "setting_1","workers": 20, "interval":1, "loop_times": -1, "query_type": "table", "query":"select * from table(iris_global_sum_v$)"},
                    {"client":"python","config_set": "setting_1","workers": 20, "interval":1, "loop_times": -1, "query_type": "table", "query":"select count(*) from table(iris)"}

                ]},
                    

                {"inputs": [
                    {"table_name": "iris","input_id": 201, "workers":100, "data_source":"file", "data_set_path":"iris", "data_set_file": "iris.csv", "table_schema_file":"table_schema.json -todo", 
                        "ingest_interval":1,"interval_model":"random - todo", "time_incre_interval":0.5, "data_set_play_mode":"sequence", "rows_2_play": 1000, "batch_size":5, "loop_times":-1, "result_keep":"False","input_record_table":"input_record"},
                    {"table_name": "iris","input_id": 202, "client":"rest", "workers":220, "data_source":"file", "data_set_path":"iris", "data_set_file": "iris.csv", "table_schema_file":"table_schema.json -todo", 
                        "ingest_interval":1,"interval_model":"random - todo", "time_incre_interval":0.5, "data_set_play_mode":"sequence", "rows_2_play": 1000, "batch_size":5, "loop_times":-1, "result_keep":"False","input_record_table":"input_record"}                        
                ]}

            ]               
        },
        {
            "id": 7,
            "tags": ["latency"],
            "name": "longevity - proton, stream 1000, iris",
            "description": "tail query latency w/single source",
            "db_engine":"proton",
            "input_info_table": "input_info",
            "steps":[
                {"statements": [
                    {"client":"python","config_set": "setting_1","workers": 1000, "interval":1, "query_type": "table", "query":"create stream if not exists iris_$(sepal_length float64, sepal_width float64, petal_length float64, petal_width float64, species string, perf_event_time datetime64(3) default now64(3), _perf_row_id string, _perf_ingest_time string)"},
                    {"client":"python","config_set": "setting_1", "wait":20, "interval":2, "workers": 1000, "query_type": "table", "query":"create materialized view if not exists iris_global_sum_v$ as select species, sum(sepal_length) as sum_sepal_length, sum(sepal_width) as sum_sepal_width from iris_$ group by species"},
                    {"client":"python","config_set": "setting_1", "wait": 10, "interval":1, "depends_on_stream":"iris_global_sum_v$", "query_id":"101", "run_mode":"process", "loop_times": 1, "workers": 1000, "query_type": "stream", "terminate":"auto","query_end_timer": 30, "query":"select * from iris_global_sum_v$", "result_keep":"False", "query_result_table":"query_result_03", "query_record_table":"query_record_01"}                   

                ]},
                    

                {"inputs": [
                    {"table_name": "iris_$","input_id": 202,"table_schema_ref":"iris", "$start_from": 0,"$end_at":999, "client":"rest", "workers":200,"worker_mode":"round_robin", "data_source":"file", "data_set_path":"iris", "data_set_file": "iris.csv", "table_schema_file":"table_schema.json -todo", 
                        "ingest_interval":1,"interval_model":"random - todo", "time_incre_interval":0.5, "data_set_play_mode":"sequence", "rows_2_play": 100, "batch_size":1, "loop_times":-1, "result_keep":"False","input_record_table":"input_record"}                       

                ]}

            ]               
        },
        
        {
            "id": 8,
            "tags": ["latency"],
            "name": "longevity - proton, with query time easy json volume, 80 streams",
            "description": "tail query latency w/single source",
            "db_engine":"proton",
            "input_info_table": "input_info",
            "steps":[
                {"statements": [
                    {"client":"python","config_set": "setting_1","workers": 80, "interval":1, "query_type": "table", "query":"drop view if exists iris_global_sum_v$"},                    
                    {"client":"python","config_set": "setting_1","workers": 80, "interval":1, "query_type": "table", "query":"drop stream if exists iris_$"},
                    {"client":"python","config_set": "setting_1","workers": 80, "interval":1, "query_type": "table", "query":"create stream if not exists iris_$(sepal_length float64, sepal_width float64, petal_length float64, petal_width float64, species string, perf_event_time datetime64(3) default now64(3), _perf_row_id string, _perf_ingest_time string) TTL to_datetime(_tp_time) + INTERVAL 24 HOUR SETTINGS logstore_retention_bytes = '21474836480', logstore_retention_ms = '00000'"},                    
                    {"client":"python","config_set": "setting_1", "wait":20, "interval":2, "workers": 80, "query_type": "table", "query":"create materialized view iris_global_sum_v$ as select species, sum(sepal_length) as sum_sepal_length, sum(sepal_width) as sum_sepal_width from iris_$ group by species"},
                    {"client":"python","config_set": "setting_1", "wait": 10, "interval":1, "depends_on_stream":"iris_global_sum_v$", "query_id":"101", "run_mode":"process", "loop_times": 1, "workers": 80, "query_type": "stream", "terminate":"auto","query_end_timer": 30, "query":"select * from iris_global_sum_v$", "result_keep":"False", "query_result_table":"query_result_03", "query_record_table":"query_record_01"},
                    {"client":"python", "config_set": "setting_1", "wait": 10, "query_id": 105, "run_mode":"process", "loop_times": 1, "workers": 100, "query_type": "stream", "terminate":"auto", "query_end_timer": 30, "query":"select * from iris where sepal_length > 4 and  sepal_length <5", "result_keep":"False", "query_result_table":"query_result_03", "query_record_table":"query_record_01"},
                    {"client":"python","config_set": "setting_1","workers": 10,"query_id": 106, "interval":5, "loop_times": -1, "query_type": "table", "query":"select * from table(iris_global_sum_v$)"},
                    {"client":"python","config_set": "setting_1","workers": 10,"query_id": 107, "interval":20, "loop_times": -1, "query_type": "table", "query":"select count(*) from table(iris_$)"}

                ]},
                    

                {"inputs": [
                    {"table_name": "iris_$","input_id": 111,"table_schema_ref":"iris", "workers":80, "data_source":"file", "data_set_path":"iris", "data_set_file": "iris.csv", "table_schema_file":"table_schema.json -todo", 
                        "ingest_interval":1,"interval_model":"random - todo", "time_incre_interval":0.5, "data_set_play_mode":"sequence", "rows_2_play": 1000, "batch_size":5, "loop_times":-1, "result_keep":"False","input_record_table":"input_record"},
                    {"table_name": "iris_$","input_id": 112,"table_schema_ref":"iris", "client":"rest", "workers":80, "data_source":"file", "data_set_path":"iris", "data_set_file": "iris.csv", "table_schema_file":"table_schema.json -todo", 
                        "ingest_interval":1,"interval_model":"random - todo", "time_incre_interval":0.5, "data_set_play_mode":"sequence", "rows_2_play": 100, "batch_size":1, "loop_times":-1, "result_keep":"False","input_record_table":"input_record"},
                    {"table_name": "iris_$","input_id": 113,"table_schema_ref":"iris", "$start_from": 0,"$end_at":79, "client":"rest", "workers":80,"worker_mode":"round_robin", "data_source":"file", "data_set_path":"iris", "data_set_file": "iris.csv", "table_schema_file":"table_schema.json -todo", 
                        "ingest_interval":1,"interval_model":"random - todo", "time_incre_interval":0.5, "data_set_play_mode":"sequence", "rows_2_play": 100, "batch_size":1, "loop_times":-1, "result_keep":"False","input_record_table":"input_record"}
                ]}

            ]               
        },
        {
            "id": 9,
            "tags": ["8 debug"],
            "name": "longevity - proton, with query time easy json volume, 80 streams",
            "description": "tail query latency w/single source",
            "db_engine":"proton",
            "input_info_table": "input_info",
            "steps":[
                {"statements": [
                    {"client":"python","config_set": "setting_1","workers": 2, "interval":1, "query_type": "table", "query":"drop view if exists iris_global_sum_v$"},                    
                    {"client":"python","config_set": "setting_1","workers": 2, "interval":1, "query_type": "table", "query":"drop stream if exists iris_$"},
                    {"client":"python","config_set": "setting_1","workers": 2, "interval":1, "query_type": "table", "query":"create stream if not exists iris_$(sepal_length float64, sepal_width float64, petal_length float64, petal_width float64, species string, perf_event_time datetime64(3) default now64(3), _perf_row_id string, _perf_ingest_time string) TTL to_datetime(_tp_time) + INTERVAL 24 HOUR SETTINGS logstore_retention_bytes = '21474836480', logstore_retention_ms = '00000'"},                    
                    {"client":"python","config_set": "setting_1", "wait":2, "interval":2, "workers": 2, "query_type": "table", "query":"create materialized view iris_global_sum_v$ as select species, sum(sepal_length) as sum_sepal_length, sum(sepal_width) as sum_sepal_width from iris_$ group by species"},
                    {"client":"python","config_set": "setting_1", "wait": 1, "interval":1, "depends_on_stream":"iris_global_sum_v$", "query_id":"101", "run_mode":"process", "loop_times": 1, "workers": 1, "query_type": "stream", "terminate":"auto","query_end_timer": 30, "query":"select * from iris_global_sum_v$", "result_keep":"False", "query_result_table":"query_result_03", "query_record_table":"query_record_01"},
                    {"client":"python", "config_set": "setting_1", "wait": 10, "query_id": 105, "run_mode":"process", "loop_times": 1, "workers": 1, "query_type": "stream", "terminate":"auto", "query_end_timer": 30, "query":"select * from iris where sepal_length > 4 and  sepal_length <5", "result_keep":"False", "query_result_table":"query_result_03", "query_record_table":"query_record_01"},
                    {"client":"python","config_set": "setting_1","workers": 2,"query_id": 106, "interval":5, "loop_times": -1, "query_type": "table", "query":"select * from table(iris_global_sum_v$)"},
                    {"client":"python","config_set": "setting_1","workers": 2,"query_id": 107, "interval":20, "loop_times": -1, "query_type": "table", "query":"select count(*) from table(iris_$)"}

                ]},
                    

                {"inputs": [
                    {"table_name": "iris_$","input_id": 111,"table_schema_ref":"iris", "workers":1, "data_source":"file", "data_set_path":"iris", "data_set_file": "iris.csv", "table_schema_file":"table_schema.json -todo", 
                        "ingest_interval":1,"interval_model":"random - todo", "time_incre_interval":0.5, "data_set_play_mode":"sequence", "rows_2_play": 1000, "batch_size":5, "loop_times":-1, "result_keep":"False","input_record_table":"input_record"},
                    {"table_name": "iris_$","input_id": 112,"table_schema_ref":"iris", "client":"rest", "workers":1, "data_source":"file", "data_set_path":"iris", "data_set_file": "iris.csv", "table_schema_file":"table_schema.json -todo", 
                        "ingest_interval":1,"interval_model":"random - todo", "time_incre_interval":0.5, "data_set_play_mode":"sequence", "rows_2_play": 100, "batch_size":1, "loop_times":-1, "result_keep":"False","input_record_table":"input_record"},
                    {"table_name": "iris_$","input_id": 113,"table_schema_ref":"iris", "$start_from": 0,"$end_at":1, "client":"rest", "workers":2,"worker_mode":"round_robin", "data_source":"file", "data_set_path":"iris", "data_set_file": "iris.csv", "table_schema_file":"table_schema.json -todo", 
                        "ingest_interval":1,"interval_model":"random - todo", "time_incre_interval":0.5, "data_set_play_mode":"sequence", "rows_2_play": 100, "batch_size":1, "loop_times":-1, "result_keep":"False","input_record_table":"input_record"}
                ]}

            ]               
        },        
        {
            "id": 999,
            "tags": ["old 8 backup"],
            "name": "longevity - proton, with query time easy json volume, 80 streams",
            "description": "tail query latency w/single source",
            "db_engine":"proton",
            "input_info_table": "input_info",
            "steps":[
                {"statements": [
                    {"client":"python","config_set": "setting_1","workers": 80, "interval":1, "query_type": "table", "query":"drop view if exists iris_global_sum_v$"},                    
                    {"client":"python","config_set": "setting_1","workers": 80, "interval":1, "query_type": "table", "query":"drop stream if exists iris_$"},
                    {"client":"python","config_set": "setting_1","workers": 80, "interval":1, "query_type": "table", "query":"create stream if not exists iris_$(sepal_length float64, sepal_width float64, petal_length float64, petal_width float64, species string, perf_event_time datetime64(3) default now64(3), _perf_row_id string, _perf_ingest_time string) TTL to_datetime(_tp_time) + INTERVAL 24 HOUR SETTINGS logstore_retention_bytes = '21474836480', logstore_retention_ms = '00000'"},                    
                    {"client":"python","config_set": "setting_1", "wait":20, "interval":2, "workers": 80, "query_type": "table", "query":"create materialized view iris_global_sum_v$ as select species, sum(sepal_length) as sum_sepal_length, sum(sepal_width) as sum_sepal_width from iris_$ group by species"},
                    {"client":"python","config_set": "setting_1", "wait": 10, "interval":1, "depends_on_stream":"iris_global_sum_v$", "query_id":"101", "run_mode":"process", "loop_times": 1, "workers": 80, "query_type": "stream", "terminate":"auto","query_end_timer": 30, "query":"select * from iris_global_sum_v$", "result_keep":"False", "query_result_table":"query_result_03", "query_record_table":"query_record_01"},
                    {"client":"python","config_set": "setting_1","workers": 80, "interval":1, "query_type": "table", "query":"drop view if exists event_s_tumble_count_v$"},
                    {"client":"python","config_set": "setting_1", "wait":20, "interval":5, "workers": 80, "query_type": "table", "query":"create materialized view event_s_tumble_count_v$ as select window_start as ws, window_end as we, json_string:repo.name as repo_name, count() from tumble(event_s, 5s) group by repo_name, window_start, window_end"},
                    {"client":"python","config_set": "setting_1", "wait": 10, "interval":1, "depends_on_stream":"event_s_tumble_count_v$", "query_id":"102", "run_mode":"process", "loop_times": 1, "workers": 80, "query_type": "stream", "terminate":"auto","query_end_timer": 30, "query":"select * from event_s_tumble_count_v$", "result_keep":"False", "query_result_table":"query_result_03", "query_record_table":"query_record_01"},                    
                    {"client":"python", "config_set": "setting_1", "wait": 1, "query_id": 103, "run_mode":"process", "loop_times": 1, "workers": 20, "query_type": "stream", "terminate":"auto", "query_end_timer": 30, "query":"select a.json_string:id as a_id, to_time(a.json_string:created_at) as a_created_at, a.json_string:payload.pull_request.head.repo.owner.id as a_repo_owner_id, b.json_string:id as b_id, to_time(b.json_string:created_at) as b_created_at, b.json_string:payload.pull_request.head.repo.owner.id as b_repo_owner_id, date_diff('second', a._tp_time, b._tp_time) from event_s as a join event_s1 as b on a_id = b_id and date_diff_within(10s, a._tp_time, b._tp_time) where to_int64(a_id) > 0", "result_keep":"False", "query_result_table":"query_result_03", "query_record_table":"query_record_01"},
                    {"client":"python", "config_set": "setting_1", "wait": 1, "query_id": 104, "run_mode":"process", "loop_times": 1, "workers": 20, "query_type": "stream", "terminate":"auto", "query_end_timer": 30, "query":"select a.json_string:id as a_id, to_time(a.json_string:created_at) as a_created_at, a.json_string:payload.pull_request.head.repo.owner.id as a_repo_owner_id, b.json_string:id as b_id, to_time(b.json_string:created_at) as b_created_at, b.json_string:payload.pull_request.head.repo.owner.id as b_repo_owner_id, date_diff('second', a._tp_time, b._tp_time) from event_s as a join event_s1 as b on a_id = b_id and date_diff_within(10s, a._tp_time, b._tp_time) where to_int64(a_id) > 0", "result_keep":"False", "query_result_table":"query_result_03", "query_record_table":"query_record_01"},
                    {"client":"python", "config_set": "setting_1", "wait": 10, "query_id": 105, "run_mode":"process", "loop_times": 1, "workers": 100, "query_type": "stream", "terminate":"auto", "query_end_timer": 30, "query":"select * from iris where sepal_length > 4 and  sepal_length <5", "result_keep":"False", "query_result_table":"query_result_03", "query_record_table":"query_record_01"},
                    {"client":"python","config_set": "setting_1","workers": 20,"query_id": 106, "interval":5, "loop_times": -1, "query_type": "table", "query":"select * from table(iris_global_sum_v$)"},
                    {"client":"python","config_set": "setting_1","workers": 20,"query_id": 107, "interval":20, "loop_times": -1, "query_type": "table", "query":"select count(*) from table(iris_$)"}

                ]},
                    

                {"inputs": [
                    {"table_name": "iris_$","input_id": 111,"table_schema_ref":"iris", "workers":80, "data_source":"file", "data_set_path":"iris", "data_set_file": "iris.csv", "table_schema_file":"table_schema.json -todo", 
                        "ingest_interval":1,"interval_model":"random - todo", "time_incre_interval":0.5, "data_set_play_mode":"sequence", "rows_2_play": 1000, "batch_size":5, "loop_times":-1, "result_keep":"False","input_record_table":"input_record"},
                    {"table_name": "iris_$","input_id": 112,"table_schema_ref":"iris", "client":"rest", "workers":80, "data_source":"file", "data_set_path":"iris", "data_set_file": "iris.csv", "table_schema_file":"table_schema.json -todo", 
                        "ingest_interval":1,"interval_model":"random - todo", "time_incre_interval":0.5, "data_set_play_mode":"sequence", "rows_2_play": 100, "batch_size":1, "loop_times":-1, "result_keep":"False","input_record_table":"input_record"},
                    {"table_name": "iris_$","input_id": 113,"table_schema_ref":"iris", "$start_from": 0,"$end_at":79, "client":"rest", "workers":80,"worker_mode":"round_robin", "data_source":"file", "data_set_path":"iris", "data_set_file": "iris.csv", "table_schema_file":"table_schema.json -todo", 
                        "ingest_interval":1,"interval_model":"random - todo", "time_incre_interval":0.5, "data_set_play_mode":"sequence", "rows_2_play": 100, "batch_size":1, "loop_times":-1, "result_keep":"False","input_record_table":"input_record"},
                    {"table_name": "event_s","input_id": 114, "table_schema_ref":"event_s", "workers":1, "data_source":"file", "data_set_path":"event", "data_set_file": "event_github.json", "data_set_file_format": "json", "json_column": "json_string", "table_schema_file":"table_schema.json -todo", 
                        "ingest_interval":1,"interval_model":"random - todo", "time_incre_interval":0.5, "data_set_play_mode":"sequence", "rows_2_play": 1000, "batch_size":1, "loop_times":-1, "result_keep":"False","input_record_table":"input_record"},
                    {"table_name": "event_s1","input_id": 115, "table_schema_ref":"event_s1", "workers":1, "data_source":"file", "data_set_path":"event", "data_set_file": "event_github.json", "data_set_file_format": "json", "json_column": "json_string", "table_schema_file":"table_schema.json -todo", 
                        "ingest_interval":1,"interval_model":"random - todo", "time_incre_interval":0.5, "data_set_play_mode":"sequence", "rows_2_play": 1000, "batch_size":1, "loop_times":-1, "result_keep":"False","input_record_table":"input_record"}                           

                ]}

            ]               
        },        

        {
            "id": 10,
            "tags": ["latency"],
            "name": "longevity - proton, no easy json middle volume",
            "description": "tail query latency w/single source",
            "db_engine":"proton",
            "input_info_table": "input_info",
            "steps":[
                {"statements": [
                    {"client":"python","config_set": "setting_1","workers": 80, "interval":2, "query_type": "table", "query":"drop view if exists iris_global_sum_v$"},
                    {"client":"python","config_set": "setting_1", "wait":20, "interval":5, "workers": 80, "query_type": "table", "query":"create materialized view iris_global_sum_v$ as select species, sum(sepal_length) as sum_sepal_length, sum(sepal_width) as sum_sepal_width from iris group by species"},
                    {"client":"python","config_set": "setting_1", "wait": 10, "interval":1, "depends_on_stream":"iris_global_avg_v$", "query_id":"101", "run_mode":"process", "loop_times": -1, "workers": 80, "query_type": "stream", "terminate":"auto","query_end_timer": 30, "query":"select * from iris_global_sum_v$", "result_keep":"False", "query_result_table":"query_result_03", "query_record_table":"query_record_01"},
                    {"client":"python", "config_set": "setting_1", "wait": 10, "query_id": 102, "run_mode":"process", "loop_times": -1, "workers": 30, "query_type": "stream", "terminate":"auto", "query_end_timer": 30, "query":"select * from iris where sepal_length > 4 and  sepal_length <5", "result_keep":"False", "query_result_table":"query_result_03", "query_record_table":"query_record_01"},
                    {"client":"python","config_set": "setting_1","workers": 10, "interval":1, "loop_times": -1, "query_type": "table", "query":"select * from table(iris_global_sum_v$)"},
                    {"client":"python","config_set": "setting_1","workers": 10, "interval":1, "loop_times": -1, "query_type": "table", "query":"select count(*) from table(iris)"}

                ]},
                    

                {"inputs": [
                    {"table_name": "iris","input_id": 201, "workers":80, "data_source":"file", "data_set_path":"iris", "data_set_file": "iris.csv", "table_schema_file":"table_schema.json -todo", 
                        "ingest_interval":1,"interval_model":"random - todo", "time_incre_interval":0.5, "data_set_play_mode":"sequence", "rows_2_play": 1000, "batch_size":1, "loop_times":-1, "result_keep":"False","input_record_table":"input_record"},
                    {"table_name": "iris","input_id": 202, "client":"rest", "workers":180, "data_source":"file", "data_set_path":"iris", "data_set_file": "iris.csv", "table_schema_file":"table_schema.json -todo", 
                        "ingest_interval":1,"interval_model":"random - todo", "time_incre_interval":0.5, "data_set_play_mode":"sequence", "rows_2_play": 1000, "batch_size":1, "loop_times":-1, "result_keep":"False","input_record_table":"input_record"}                        
                ]}

            ]               
        },        

        {
            "id": 11,
            "tags": ["latency"],
            "name": "tail laterncy - proton",
            "description": "tail query latency w/single source",
            "db_engine":"proton",
            "input_info_table": "input_info",
            "steps":[
                {"statements": [
                    {"client":"python","config_set": "setting_1","workers": 30, "interval":2, "query_type": "table", "query":"drop view if exists iris_global_sum_v$"},
                    {"client":"python","config_set": "setting_1", "wait":20, "interval":5, "workers": 30, "query_type": "table", "query":"create materialized view iris_global_sum_v$ as select species, sum(sepal_length) as sum_sepal_length, sum(sepal_width) as sum_sepal_width from iris group by species"},
                    {"client":"python","config_set": "setting_1", "wait": 10, "interval":1, "depends_on_stream":"iris_global_avg_v$", "query_id":"101", "run_mode":"process", "loop_times": -1, "workers": 30, "query_type": "stream", "terminate":"auto","query_end_timer": 30, "query":"select * from iris_global_sum_v$", "result_keep":"False", "query_result_table":"query_result_03", "query_record_table":"query_record_01"},
                    {"client":"python", "config_set": "setting_1", "wait": 10, "query_id": 102, "run_mode":"process", "loop_times": -1, "workers": 30, "query_type": "stream", "terminate":"auto", "query_end_timer": 30, "query":"select * from iris where sepal_length > 4 and  sepal_length <5", "result_keep":"False", "query_result_table":"query_result_03", "query_record_table":"query_record_01"},
                    {"client":"python","config_set": "setting_1","workers": 10, "interval":1, "loop_times": -1, "query_type": "table", "query":"select * from table(iris_global_sum_v$)"},
                    {"client":"python","config_set": "setting_1","workers": 10, "interval":1, "loop_times": -1, "query_type": "table", "query":"select count(*) from table(iris)"}

                ]},
                    

                {"inputs": [
                    {"table_name": "iris","input_id": 201, "workers":10, "data_source":"file", "data_set_path":"iris", "data_set_file": "iris.csv", "table_schema_file":"table_schema.json -todo", 
                        "ingest_interval":1,"interval_model":"random - todo", "time_incre_interval":0.5, "data_set_play_mode":"sequence", "rows_2_play": 1000, "batch_size":1, "loop_times":-1, "result_keep":"False","input_record_table":"input_record"},
                    {"table_name": "iris","input_id": 202, "client":"rest", "workers":70, "data_source":"file", "data_set_path":"iris", "data_set_file": "iris.csv", "table_schema_file":"table_schema.json -todo", 
                        "ingest_interval":1,"interval_model":"random - todo", "time_incre_interval":0.5, "data_set_play_mode":"sequence", "rows_2_play": 1000, "batch_size":1, "loop_times":-1, "result_keep":"False","input_record_table":"input_record"}                        
                ]}

            ]               
        },        


        
        {
            "id": 12,
            "tags": ["latency"],
            "name": "tail laterncy - Materialize",
            "description": "tail query latency w/single source",
            "input_info_table": "input_info",
            "steps":[
                {"statements": [
                    {"client":"python","config_set": "setting_mz", "query_id": 101, "run_mode":"process", "workers": 2, "query_type": "stream", "terminate":"auto", "query_end_timer": 30, "query":"select * from dim_user_info_table", "result_keep":"True", "query_result_table":"query_result_03", "query_record_table":"query_record_01"}
                ]}

            ]               
        },
        {
            "id": 13,
            "tags": ["latency"],
            "name": "tail laterncy - proton",
            "description": "tail query latency w/single source",
            "db_engine":"proton",
            "input_info_table": "input_info",
            "steps":[
                {"statements": [
                    {"client":"python", "config_set": "setting_1", "query_id": 101, "run_mode":"process", "workers": 1, "query_type": "stream", "terminate":"auto", "query_end_timer": 30, "query":"select * from iris where sepal_length > 4 and  sepal_length <5", "result_keep":"False", "query_result_table":"query_result_03", "query_record_table":"query_record_01"}
                ]},
                    

                {"inputs": [
                    {"table_name": "iris","input_id": 201,"client":"rest", "connection_mode":"session_per_batch", "workers":2, "data_source":"file", "data_set_path":"iris", "data_set_file": "iris.csv", "table_schema_file":"table_schema.json -todo", 
                        "ingest_interval":1,"interval_model":"random - todo", "time_incre_interval":0.5, "data_set_play_mode":"sequence", "rows_2_play": 100, "batch_size":1, "loop_times":-1, "result_keep":"False","input_record_table":"input_record"},
                    {"table_name": "iris","input_id": 202,"client":"rest","connection_mode":"session_per_batch", "workers":2, "data_source":"file", "data_set_path":"iris", "data_set_file": "iris1.csv", "table_schema_file":"table_schema.json -todo", 
                        "ingest_interval":1,"interval_model":"random - todo", "time_incre_interval":0.5, "data_set_play_mode":"sequence", "rows_2_play": 100, "batch_size":1, "loop_times":-1, "result_keep":"False","input_record_table":"input_record1"},
                    {"table_name": "iris","input_id": 203,"client":"rest", "workers":2, "data_source":"file", "data_set_path":"iris", "data_set_file": "iris1.csv", "table_schema_file":"table_schema.json -todo", 
                        "ingest_interval":1,"interval_model":"random - todo", "time_incre_interval":0.5, "data_set_play_mode":"sequence", "rows_2_play": 100, "batch_size":1, "loop_times":-1, "result_keep":"False","input_record_table":"input_record1"}                                                 
                ]}

            ]               
        },
        {
            "id": 14,
            "tags": ["latency"],
            "name": "tail laterncy - proton",
            "description": "tail query latency w/single source",
            "db_engine":"proton",
            "input_info_table": "input_info",
            "steps":[
                {"statements": [
                    {"client":"python","config_set": "setting_1","workers": 120, "interval":1, "query_type": "table", "query":"drop view if exists iris_global_sum_v$"},
                    {"client":"python","config_set": "setting_1", "wait":20, "interval":5, "workers": 120, "query_type": "table", "query":"create materialized view iris_global_sum_v$ as select species, sum(sepal_length) as sum_sepal_length, sum(sepal_width) as sum_sepal_width from iris group by species"},
                    {"client":"python","config_set": "setting_1", "wait": 10, "interval":1, "depends_on_stream":"iris_global_avg_v$", "query_id":"101", "run_mode":"process", "loop_times": -1, "workers": 120, "query_type": "stream", "terminate":"auto","query_end_timer": 30, "query":"select * from iris_global_sum_v$", "result_keep":"False", "query_result_table":"query_result_03", "query_record_table":"query_record_01"},
                    {"client":"python", "config_set": "setting_1", "wait": 10, "query_id": 102, "run_mode":"process", "loop_times": -1, "workers": 50, "query_type": "stream", "terminate":"auto", "query_end_timer": 30, "query":"select * from iris where sepal_length > 4 and  sepal_length <5", "result_keep":"False", "query_result_table":"query_result_03", "query_record_table":"query_record_01"},
                    {"client":"python","config_set": "setting_1","workers": 20, "interval":1, "loop_times": -1, "query_type": "table", "query":"select * from table(iris_global_sum_v$)"},
                    {"client":"python","config_set": "setting_1","workers": 20, "interval":1, "loop_times": -1, "query_type": "table", "query":"select count(*) from table(iris)"}

                ]},
                    

                {"inputs": [
                    {"table_name": "iris","input_id": 201, "workers":100, "data_source":"file", "data_set_path":"iris", "data_set_file": "iris.csv", "table_schema_file":"table_schema.json -todo", 
                        "ingest_interval":1,"interval_model":"random - todo", "time_incre_interval":0.5, "data_set_play_mode":"sequence", "rows_2_play": 1000, "batch_size":5, "loop_times":-1, "result_keep":"False","input_record_table":"input_record"},
                    {"table_name": "iris","input_id": 202, "client":"rest", "workers":110, "data_source":"file", "data_set_path":"iris", "data_set_file": "iris.csv", "table_schema_file":"table_schema.json -todo", 
                        "ingest_interval":1,"interval_model":"random - todo", "time_incre_interval":0.5, "data_set_play_mode":"sequence", "rows_2_play": 1000, "batch_size":5, "loop_times":-1, "result_keep":"False","input_record_table":"input_record"},
                    {"table_name": "event","input_id": 203, "workers":60, "data_source":"file", "data_set_path":"event", "data_set_file": "event_github.json", "data_set_file_format": "json", "json_column": "event", "table_schema_file":"table_schema.json -todo", 
                        "ingest_interval":1,"interval_model":"random - todo", "time_incre_interval":0.5, "data_set_play_mode":"sequence", "rows_2_play": 1000, "batch_size":5, "loop_times":-1, "result_keep":"False","input_record_table":"input_record"},
                    {"table_name": "event","input_id": 205, "client":"rest", "workers":50, "data_source":"file", "data_set_path":"event", "data_set_file": "event_github.json", "data_set_file_format": "json", "json_column": "event", "table_schema_file":"table_schema.json -todo", 
                    "ingest_interval":1,"interval_model":"random - todo", "time_incre_interval":0.5, "data_set_play_mode":"sequence", "rows_2_play": 1000, "batch_size":5, "loop_times":-1, "result_keep":"False","input_record_table":"input_record"}                                                 
                ]}

            ]               
        },
        {
            "id": 15,
            "tags": ["latency"],
            "name": "longevity, debug json rest input, rest input of json obj is broken now",
            "description": "tail query latency w/single source",
            "db_engine":"proton",
            "input_info_table": "input_info",
            "steps":[
                {"statements": [
                    {"client":"python","config_set": "setting_1","workers": 1, "interval":1, "query_type": "table", "query":"drop view if exists iris_global_sum_v$"},
                    {"client":"python","config_set": "setting_1", "wait":2, "interval":5, "workers": 1, "query_type": "table", "query":"create materialized view iris_global_sum_v$ as select species, sum(sepal_length) as sum_sepal_length, sum(sepal_width) as sum_sepal_width from iris group by species"},
                    {"client":"python","config_set": "setting_1", "wait": 2, "interval":1, "depends_on_stream":"iris_global_avg_v$", "query_id":"101", "run_mode":"process", "loop_times": -1, "workers": 1, "query_type": "stream", "terminate":"auto","query_end_timer": 30, "query":"select * from iris_global_sum_v$", "result_keep":"False", "query_result_table":"query_result_03", "query_record_table":"query_record_01"},
                    {"client":"python", "config_set": "setting_1", "wait": 2, "query_id": 102, "run_mode":"process", "loop_times": -1, "workers": 1, "query_type": "stream", "terminate":"auto", "query_end_timer": 30, "query":"select * from iris where sepal_length > 4 and  sepal_length <5", "result_keep":"False", "query_result_table":"query_result_03", "query_record_table":"query_record_01"}
                ]},
                    

                {"inputs": [

                    {"table_name": "event","input_id": 203, "client":"rest", "workers":1, "data_source":"file", "data_set_path":"event", "data_set_file": "event_github.json", "data_set_file_format": "json", "json_column": "event", "table_schema_file":"table_schema.json -todo", 
                        "ingest_interval":1,"interval_model":"random - todo", "time_incre_interval":0.5, "data_set_play_mode":"sequence", "rows_2_play": 1000, "batch_size":5, "loop_times":-1, "result_keep":"False","input_record_table":"input_record"}                                                                                                                         
                ]}

            ]               
        },
        {
            "id": 100,
            "tags": ["ingest only"],
            "name": "ingest into one stream iris",
            "description": "tail query latency w/single source",
            "db_engine":"proton",
            "input_info_table": "input_info",
            "steps":[                    

                {"inputs": [
                    {"table_name": "iris","input_id": 201,"client":"python", "workers":80, "data_source":"file", "data_set_path":"iris", "data_set_file": "iris.csv", "table_schema_file":"table_schema.json -todo", 
                        "ingest_interval":1,"interval_model":"random - todo", "time_incre_interval":0.5, "data_set_play_mode":"sequence", "rows_2_play": 1000, "batch_size":100, "loop_times":-1, "result_keep":"False","input_record_table":"input_record"},
                    {"table_name": "iris","input_id": 202,"client":"rest", "workers":80, "data_source":"file", "data_set_path":"iris", "data_set_file": "iris1.csv", "table_schema_file":"table_schema.json -todo", 
                        "ingest_interval":1,"interval_model":"random - todo", "time_incre_interval":0.5, "data_set_play_mode":"sequence", "rows_2_play": 1000, "batch_size":100, "loop_times":-1, "result_keep":"False","input_record_table":"input_record1"}                        
                ]}

            ]               
        },
        {
            "id": 101,
            "tags": ["ingest only"],
            "name": "ingest into one stream iris",
            "description": "tail query latency w/single source",
            "db_engine":"proton",
            "input_info_table": "input_info",
            "steps":[
                {"statements": [
                    {"client":"python","config_set": "setting_1", "query_type": "table", "query":"drop view if exists iris_global_avg_v"},
                    {"client":"python","config_set": "setting_1", "wait":5, "query_type": "table", "query":"create view iris_global_avg_v as select species, avg(sepal_length) as avg_sepal_length, avg(sepal_width) as avg_sepal_width from iris group by species"},
                    {"client":"python","config_set": "setting_1", "wait": 10, "query_id":"101", "run_mode":"process","workers": 40, "query_type": "stream", "terminate":"auto","query_end_timer": 30, "query":"select * from iris_global_avg_v", "result_keep":"False", "query_result_table":"query_result_03", "query_record_table":"query_record_01"},
                    {"client":"python", "config_set": "setting_1", "wait": 10, "query_id": 102, "run_mode":"process", "workers": 60, "query_type": "stream", "terminate":"auto", "query_end_timer": 30, "query":"select * from iris where sepal_length > 4 and  sepal_length <5", "result_keep":"False", "query_result_table":"query_result_03", "query_record_table":"query_record_01"}


                    ]},                                    

                {"inputs": [
                    {"table_name": "iris","input_id": 201,"client":"python", "workers":80, "data_source":"file", "data_set_path":"iris", "data_set_file": "iris.csv", "table_schema_file":"table_schema.json -todo", 
                        "ingest_interval":1,"interval_model":"random - todo", "time_incre_interval":0.5, "data_set_play_mode":"sequence", "rows_2_play": 1000, "batch_size":100, "loop_times":-1, "result_keep":"False","input_record_table":"input_record"},
                    {"table_name": "iris","input_id": 202,"client":"rest", "workers":80, "data_source":"file", "data_set_path":"iris", "data_set_file": "iris1.csv", "table_schema_file":"table_schema.json -todo", 
                        "ingest_interval":1,"interval_model":"random - todo", "time_incre_interval":0.5, "data_set_play_mode":"sequence", "rows_2_play": 1000, "batch_size":100, "loop_times":-1, "result_keep":"False","input_record_table":"input_record1"}                        
                ]}

            ]               
        },        
        {
            "id": 102,
            "tags": ["latency"],
            "name": "longevity - proton, stream 1000, iris",
            "description": "tail query latency w/single source",
            "db_engine":"proton",
            "input_info_table": "input_info",
            "steps":[
                {"statements": [
                    {"client":"python","config_set": "setting_1","workers": 1000, "interval":1, "query_type": "table", "query":"create stream if not exists iris_$(sepal_length float64, sepal_width float64, petal_length float64, petal_width float64, species string, perf_event_time datetime64(3) default now64(3), _perf_row_id string, _perf_ingest_time string)"},
                    {"client":"python","config_set": "setting_1", "wait":20, "interval":2, "workers": 1000, "query_type": "table", "query":"create materialized view if not exists iris_global_sum_v$ as select species, sum(sepal_length) as sum_sepal_length, sum(sepal_width) as sum_sepal_width from iris_$ group by species"},
                    {"client":"python","config_set": "setting_1", "wait": 10, "interval":1, "depends_on_stream":"iris_global_sum_v$", "query_id":"101", "run_mode":"process", "loop_times": 1, "workers": 1000, "query_type": "stream", "terminate":"auto","query_end_timer": 30, "query":"select * from iris_global_sum_v$", "result_keep":"False", "query_result_table":"query_result_03", "query_record_table":"query_record_01"}                   

                ]},
                    

                {"inputs": [
                    {"table_name": "iris_$","input_id": 202,"table_schema_ref":"iris", "$start_from": 0,"$end_at":999, "client":"rest", "workers":200,"worker_mode":"round_robin", "data_source":"file", "data_set_path":"iris", "data_set_file": "iris.csv", "table_schema_file":"table_schema.json -todo", 
                        "ingest_interval":1,"interval_model":"random - todo", "time_incre_interval":0.5, "data_set_play_mode":"sequence", "rows_2_play": 100, "batch_size":1, "loop_times":-1, "result_keep":"False","input_record_table":"input_record"}                       

                ]}

            ]               
        }                                        

    ]
}


