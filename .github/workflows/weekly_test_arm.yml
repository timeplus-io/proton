# FIXME: merge this workflow into weekly_test
name: debug_workflow

on: # yamllint disable-line rule:truthy
  workflow_dispatch:
    inputs:
      max_minutes:
        description: 'After $max_minutes debug environment will be terminate. Or you can run `touch /finish` to terminate the env'
        required: true
        default: '60'
      arch:
        description: 'Hardware architecture'
        required: true
        default: x64
        type: choice
        options:
        - x64
        - arm


jobs:
  debug_on_x64:
    uses: timeplus-io/proton-opensource/.github/workflows/run_command.yml@develop
    if: github.event.inputs.arch == 'x64'
    with:
      ec2-instance-type: ${{ vars.X64_INSTANCE_TYPE }}
      ec2-image-id: ${{ vars.X64_AMI }}
      ec2-volume-size: ${{ vars.VOLUME_SIZE }}
      submodules: 'recursive'
      sanitizer: "address"
      arch: ${{ vars.X64_ARCH }}
      tag: 'sanitizer'
      command: |
        counter=0
        while [ $counter -lt ${{ github.event.inputs.max_minutes }} ]
        do
            if [ -e /finished ]
            then
                echo "/finished exists, will terminate debug environment."
                ::exit::success
            else
                sleep 60
                counter=$((counter+1))
            fi
        done
        echo "timeout, will terminate debug environment"
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
      GH_PERSONAL_ACCESS_TOKEN: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
      TIMEPLUS_ADDRESS: ${{ secrets.TIMEPLUS_ADDRESS }}
      TIMEPLUS_API_KEY: ${{ secrets.TIMEPLUS_API_KEY }}
      TIMEPLUS_WORKSPACE: ${{ secrets.TIMEPLUS_WORKSPACE }}
  debug_on_arm:
    uses: timeplus-io/proton-opensource/.github/workflows/run_command.yml@develop
    if: github.event.inputs.arch == 'arm'
    with:
      ec2-instance-type: ${{ vars.ARM_INSTANCE_TYPE }}
      ec2-image-id: ${{ vars.ARM_AMI }}
      ec2-volume-size: ${{ vars.VOLUME_SIZE }}
      submodules: 'recursive'
      sanitizer: "address"
      arch: ${{ vars.ARM_ARCH }}
      tag: 'sanitizer'
      command: |
        counter=0
        while [ $counter -lt ${{ github.event.inputs.max_minutes }} ]
        do
            if [ -e /finished ]
            then
                echo "/finished exists, will terminate debug environment."
                exit 0
            else
                sleep 60
                counter=$((counter+1))
            fi
        done
        echo "timeout, will terminate debug environment"
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
      GH_PERSONAL_ACCESS_TOKEN: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
      TIMEPLUS_ADDRESS: ${{ secrets.TIMEPLUS_ADDRESS }}
      TIMEPLUS_API_KEY: ${{ secrets.TIMEPLUS_API_KEY }}
      TIMEPLUS_WORKSPACE: ${{ secrets.TIMEPLUS_WORKSPACE }}
