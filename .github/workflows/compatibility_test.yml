name: compatibility test

on:
  workflow_dispatch:
    inputs:
      target:
        description: 'Target proton image Version'
        required: true
        default: 'latest'
      source:
        description: 'Source proton image Version'
        required: false
        default: ''
jobs:
  upload_data:
    uses: timeplus-io/proton/.github/workflows/run_command.yml@develop
    with:
      ec2-instance-type: ${{ vars.X64_INSTANCE_TYPE }}
      ec2-image-id: ${{ vars.X64_TEST_AMI }}
      ec2-volume-size: '30'
      submodules: false
      timeout: 30
      command: |
        # pull docker image
        export PROTON_VERSION=${{ github.event.inputs.target }}
        docker pull ghcr.io/timeplus-io/proton:$PROTON_VERSION

        cd $GITHUB_WORKSPACE/tests/stream
        env

        ${{ needs.prepare_env.outputs.command }}

        bash test_compatibility/prepare_data.sh
        bash test_compatibility/basic_tests.sh

        tar -zcvf $PROTON_VERSION.tar.gz data
        aws s3 cp --no-progress $PROTON_VERSION.tar.gz s3://tp-internal/proton/compatibility/oss/
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
      GH_PERSONAL_ACCESS_TOKEN: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
      TIMEPLUS_ADDRESS: ${{ secrets.TIMEPLUS_ADDRESS }}
      TIMEPLUS_API_KEY: ${{ secrets.TIMEPLUS_API_KEY }}
      TIMEPLUS_WORKSPACE: ${{ secrets.TIMEPLUS_WORKSPACE }}

  compatibility_test:
    if: ${{ github.event.inputs.source!='' }}
    uses: timeplus-io/proton/.github/workflows/run_command.yml@develop
    with:
      ec2-instance-type: ${{ vars.X64_INSTANCE_TYPE }}
      ec2-image-id: ${{ vars.X64_TEST_AMI }}
      ec2-volume-size: '30'
      submodules: false
      timeout: 30
      command: |
        export TARGET_VERSION=${{ github.event.inputs.target }}
        export SOURCE_VERSION=${{ github.event.inputs.source }}
        export PROTON_VERSION=$TARGET_VERSION
        # pull docker image
        docker pull ghcr.io/timeplus-io/proton:$PROTON_VERSION

        cd $GITHUB_WORKSPACE/tests/stream
        env

        # prepare data
        aws s3 cp --no-progress s3://tp-internal/proton/compatibility/oss/$SOURCE_VERSION.tar.gz .
        tar -zxvf $SOURCE_VERSION.tar.gz
        ls .

        bash test_compatibility/basic_tests.sh
        bash test_compatibility/extra_tests.sh
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
      GH_PERSONAL_ACCESS_TOKEN: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
      TIMEPLUS_ADDRESS: ${{ secrets.TIMEPLUS_ADDRESS }}
      TIMEPLUS_API_KEY: ${{ secrets.TIMEPLUS_API_KEY }}
      TIMEPLUS_WORKSPACE: ${{ secrets.TIMEPLUS_WORKSPACE }}
